ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_Enable, %function
  25              	CapSense_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 2


  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0xFFu, 0xFFu, 0xFFu, 0x3u, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button0__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button1__BTN__PC, 
  49:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button2__BTN__PC, 
  50:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button3__BTN__PC, 
  51:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button4__BTN__PC, 
  52:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button5__BTN__PC, 
  53:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button6__BTN__PC, 
  54:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button7__BTN__PC, 
  55:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button8__BTN__PC, 
  56:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button9__BTN__PC, 
  57:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button10__BTN__PC, 
  58:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button11__BTN__PC, 
  59:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button12__BTN__PC, 
  60:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button13__BTN__PC, 
  61:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button14__BTN__PC, 
  62:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button15__BTN__PC, 
  63:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button16__BTN__PC, 
  64:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button17__BTN__PC, 
  65:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button18__BTN__PC, 
  66:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button19__BTN__PC, 
  67:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button20__BTN__PC, 
  68:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button21__BTN__PC, 
  69:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button22__BTN__PC, 
  70:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button23__BTN__PC, 
  71:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button24__BTN__PC, 
  72:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button25__BTN__PC, 
  73:Generated_Source\PSoC5/CapSense.c **** };
  74:Generated_Source\PSoC5/CapSense.c **** 
  75:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  76:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__PORT, 
  77:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__PORT, 
  78:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button2__BTN__PORT, 
  79:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button3__BTN__PORT, 
  80:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button4__BTN__PORT, 
  81:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button5__BTN__PORT, 
  82:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button6__BTN__PORT, 
  83:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button7__BTN__PORT, 
  84:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button8__BTN__PORT, 
  85:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button9__BTN__PORT, 
  86:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button10__BTN__PORT, 
  87:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button11__BTN__PORT, 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 3


  88:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button12__BTN__PORT, 
  89:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button13__BTN__PORT, 
  90:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button14__BTN__PORT, 
  91:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button15__BTN__PORT, 
  92:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button16__BTN__PORT, 
  93:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button17__BTN__PORT, 
  94:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button18__BTN__PORT, 
  95:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button19__BTN__PORT, 
  96:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button20__BTN__PORT, 
  97:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button21__BTN__PORT, 
  98:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button22__BTN__PORT, 
  99:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button23__BTN__PORT, 
 100:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button24__BTN__PORT, 
 101:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button25__BTN__PORT, 
 102:Generated_Source\PSoC5/CapSense.c **** };
 103:Generated_Source\PSoC5/CapSense.c **** 
 104:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
 105:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__MASK,
 106:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__MASK,
 107:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button2__BTN__MASK,
 108:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button3__BTN__MASK,
 109:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button4__BTN__MASK,
 110:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button5__BTN__MASK,
 111:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button6__BTN__MASK,
 112:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button7__BTN__MASK,
 113:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button8__BTN__MASK,
 114:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button9__BTN__MASK,
 115:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button10__BTN__MASK,
 116:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button11__BTN__MASK,
 117:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button12__BTN__MASK,
 118:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button13__BTN__MASK,
 119:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button14__BTN__MASK,
 120:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button15__BTN__MASK,
 121:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button16__BTN__MASK,
 122:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button17__BTN__MASK,
 123:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button18__BTN__MASK,
 124:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button19__BTN__MASK,
 125:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button20__BTN__MASK,
 126:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button21__BTN__MASK,
 127:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button22__BTN__MASK,
 128:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button23__BTN__MASK,
 129:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button24__BTN__MASK,
 130:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button25__BTN__MASK,
 131:Generated_Source\PSoC5/CapSense.c **** };
 132:Generated_Source\PSoC5/CapSense.c **** 
 133:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
 134:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
 135:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
 136:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
 137:Generated_Source\PSoC5/CapSense.c **** };
 138:Generated_Source\PSoC5/CapSense.c **** 
 139:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
 140:Generated_Source\PSoC5/CapSense.c ****     200u,200u,200u,200u,200u,200u,200u,200u,200u,200u,200u,200u,200u,200u,200u,200u,200u,200u,200u,
 141:Generated_Source\PSoC5/CapSense.c **** };
 142:Generated_Source\PSoC5/CapSense.c **** 
 143:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
 144:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 4


 145:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 146:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 147:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 148:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 149:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 150:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 151:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 152:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 153:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 154:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 155:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 156:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 157:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 158:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 159:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 160:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 161:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 162:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 163:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 164:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 165:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 166:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 167:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 168:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 169:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 170:Generated_Source\PSoC5/CapSense.c **** };
 171:Generated_Source\PSoC5/CapSense.c **** 
 172:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider = 11u;
 173:Generated_Source\PSoC5/CapSense.c **** 
 174:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
 175:Generated_Source\PSoC5/CapSense.c ****     0u, /* Button0__BTN */
 176:Generated_Source\PSoC5/CapSense.c ****     1u, /* Button1__BTN */
 177:Generated_Source\PSoC5/CapSense.c ****     2u, /* Button2__BTN */
 178:Generated_Source\PSoC5/CapSense.c ****     3u, /* Button3__BTN */
 179:Generated_Source\PSoC5/CapSense.c ****     4u, /* Button4__BTN */
 180:Generated_Source\PSoC5/CapSense.c ****     5u, /* Button5__BTN */
 181:Generated_Source\PSoC5/CapSense.c ****     6u, /* Button6__BTN */
 182:Generated_Source\PSoC5/CapSense.c ****     7u, /* Button7__BTN */
 183:Generated_Source\PSoC5/CapSense.c ****     8u, /* Button8__BTN */
 184:Generated_Source\PSoC5/CapSense.c ****     9u, /* Button9__BTN */
 185:Generated_Source\PSoC5/CapSense.c ****     10u, /* Button10__BTN */
 186:Generated_Source\PSoC5/CapSense.c ****     11u, /* Button11__BTN */
 187:Generated_Source\PSoC5/CapSense.c ****     12u, /* Button12__BTN */
 188:Generated_Source\PSoC5/CapSense.c ****     13u, /* Button13__BTN */
 189:Generated_Source\PSoC5/CapSense.c ****     14u, /* Button14__BTN */
 190:Generated_Source\PSoC5/CapSense.c ****     15u, /* Button15__BTN */
 191:Generated_Source\PSoC5/CapSense.c ****     16u, /* Button16__BTN */
 192:Generated_Source\PSoC5/CapSense.c ****     17u, /* Button17__BTN */
 193:Generated_Source\PSoC5/CapSense.c ****     18u, /* Button18__BTN */
 194:Generated_Source\PSoC5/CapSense.c ****     19u, /* Button19__BTN */
 195:Generated_Source\PSoC5/CapSense.c ****     20u, /* Button20__BTN */
 196:Generated_Source\PSoC5/CapSense.c ****     21u, /* Button21__BTN */
 197:Generated_Source\PSoC5/CapSense.c ****     22u, /* Button22__BTN */
 198:Generated_Source\PSoC5/CapSense.c ****     23u, /* Button23__BTN */
 199:Generated_Source\PSoC5/CapSense.c ****     24u, /* Button24__BTN */
 200:Generated_Source\PSoC5/CapSense.c ****     25u, /* Button25__BTN */
 201:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 5


 202:Generated_Source\PSoC5/CapSense.c **** };
 203:Generated_Source\PSoC5/CapSense.c **** 
 204:Generated_Source\PSoC5/CapSense.c **** 
 205:Generated_Source\PSoC5/CapSense.c **** 
 206:Generated_Source\PSoC5/CapSense.c **** 
 207:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 208:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
 209:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 210:Generated_Source\PSoC5/CapSense.c **** *
 211:Generated_Source\PSoC5/CapSense.c **** * Summary:
 212:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
 213:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
 214:Generated_Source\PSoC5/CapSense.c **** *
 215:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 216:Generated_Source\PSoC5/CapSense.c **** *  None
 217:Generated_Source\PSoC5/CapSense.c **** *
 218:Generated_Source\PSoC5/CapSense.c **** * Return:
 219:Generated_Source\PSoC5/CapSense.c **** *  None
 220:Generated_Source\PSoC5/CapSense.c **** *
 221:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 222:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 223:Generated_Source\PSoC5/CapSense.c **** {
 224:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 225:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 226:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 227:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 228:Generated_Source\PSoC5/CapSense.c ****         
 229:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 230:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 231:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 232:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 233:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 234:Generated_Source\PSoC5/CapSense.c ****            */
 235:Generated_Source\PSoC5/CapSense.c ****     
 236:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 237:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 238:Generated_Source\PSoC5/CapSense.c **** 
 239:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 240:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 241:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 242:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 243:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 244:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 245:Generated_Source\PSoC5/CapSense.c ****                                                
 246:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 247:Generated_Source\PSoC5/CapSense.c ****     #else
 248:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 249:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 250:Generated_Source\PSoC5/CapSense.c **** 
 251:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 252:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 253:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 254:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 255:Generated_Source\PSoC5/CapSense.c **** 
 256:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 257:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 258:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 6


 259:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 260:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 261:Generated_Source\PSoC5/CapSense.c ****         
 262:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 263:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 264:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 265:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 266:Generated_Source\PSoC5/CapSense.c ****         
 267:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 268:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 269:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 270:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 271:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 272:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 273:Generated_Source\PSoC5/CapSense.c ****         
 274:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 275:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 276:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 277:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 278:Generated_Source\PSoC5/CapSense.c ****                 
 279:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 280:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 281:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 282:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 283:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 284:Generated_Source\PSoC5/CapSense.c ****         
 285:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 286:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 287:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 288:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 289:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 290:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 291:Generated_Source\PSoC5/CapSense.c ****         
 292:Generated_Source\PSoC5/CapSense.c ****     #else
 293:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 294:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 295:Generated_Source\PSoC5/CapSense.c ****     
 296:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 297:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 298:Generated_Source\PSoC5/CapSense.c ****     
 299:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 300:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 301:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 302:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 303:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 304:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 305:Generated_Source\PSoC5/CapSense.c ****         
 306:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 307:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 308:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 309:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 310:Generated_Source\PSoC5/CapSense.c ****     
 311:Generated_Source\PSoC5/CapSense.c ****     #else
 312:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 313:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 314:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 315:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 7


 316:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 317:Generated_Source\PSoC5/CapSense.c ****         
 318:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 319:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 320:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 321:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 322:Generated_Source\PSoC5/CapSense.c ****         
 323:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 324:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 325:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 326:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 327:Generated_Source\PSoC5/CapSense.c ****         
 328:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 329:Generated_Source\PSoC5/CapSense.c ****     
 330:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 331:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 332:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 333:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 334:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 335:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 336:Generated_Source\PSoC5/CapSense.c ****             
 337:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 338:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 339:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 340:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 341:Generated_Source\PSoC5/CapSense.c ****            
 342:Generated_Source\PSoC5/CapSense.c ****         #else
 343:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 344:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 345:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 346:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 347:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 348:Generated_Source\PSoC5/CapSense.c ****             
 349:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 350:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 351:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 352:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 353:Generated_Source\PSoC5/CapSense.c ****             
 354:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 355:Generated_Source\PSoC5/CapSense.c ****             
 356:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 357:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 358:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 359:Generated_Source\PSoC5/CapSense.c ****             
 360:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 361:Generated_Source\PSoC5/CapSense.c ****     
 362:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 363:Generated_Source\PSoC5/CapSense.c ****     
 364:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 365:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 366:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 367:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 368:Generated_Source\PSoC5/CapSense.c ****     
 369:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 370:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 371:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 372:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 8


 373:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 374:Generated_Source\PSoC5/CapSense.c ****     
 375:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 376:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 377:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 378:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 379:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 380:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 381:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 382:Generated_Source\PSoC5/CapSense.c ****     
 383:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 384:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 385:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 386:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 387:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 388:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 389:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 390:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 391:Generated_Source\PSoC5/CapSense.c ****     
 392:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 393:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 394:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 395:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 396:Generated_Source\PSoC5/CapSense.c ****     
 397:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 398:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 399:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 400:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 401:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 402:Generated_Source\PSoC5/CapSense.c ****     
 403:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 404:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 405:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 406:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 407:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 408:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 409:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 410:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 411:Generated_Source\PSoC5/CapSense.c ****     
 412:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 413:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 414:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 415:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 416:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 417:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 418:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 419:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 420:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 421:Generated_Source\PSoC5/CapSense.c ****     
 422:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 423:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 424:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 425:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 426:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 427:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 428:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 429:Generated_Source\PSoC5/CapSense.c **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 9


 430:Generated_Source\PSoC5/CapSense.c **** 
 431:Generated_Source\PSoC5/CapSense.c **** 
 432:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 433:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 434:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 435:Generated_Source\PSoC5/CapSense.c **** *
 436:Generated_Source\PSoC5/CapSense.c **** * Summary:
 437:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 438:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 439:Generated_Source\PSoC5/CapSense.c **** *
 440:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 441:Generated_Source\PSoC5/CapSense.c **** *  None
 442:Generated_Source\PSoC5/CapSense.c **** *
 443:Generated_Source\PSoC5/CapSense.c **** * Return:
 444:Generated_Source\PSoC5/CapSense.c **** *  None
 445:Generated_Source\PSoC5/CapSense.c **** *
 446:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 447:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 448:Generated_Source\PSoC5/CapSense.c **** {
  28              		.loc 1 448 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 449:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 450:Generated_Source\PSoC5/CapSense.c ****     
 451:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 451 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 452:Generated_Source\PSoC5/CapSense.c ****     
 453:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 454:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 455:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 456:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 457:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 458:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 459:Generated_Source\PSoC5/CapSense.c ****         
 460:Generated_Source\PSoC5/CapSense.c ****     #else
 461:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 462:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 463:Generated_Source\PSoC5/CapSense.c ****     
 464:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 465:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
  41              		.loc 1 465 0
  42 0008 134A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F02003 		orr	r3, r3, #32
  45 0010 1370     		strb	r3, [r2]
 466:Generated_Source\PSoC5/CapSense.c ****     
 467:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 468:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 10


 469:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 470:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 471:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 472:Generated_Source\PSoC5/CapSense.c ****         
 473:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 474:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 475:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 476:Generated_Source\PSoC5/CapSense.c ****         
 477:Generated_Source\PSoC5/CapSense.c ****     #else
 478:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 479:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 480:Generated_Source\PSoC5/CapSense.c ****         
 481:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 482:Generated_Source\PSoC5/CapSense.c ****     
 483:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 484:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 485:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 486:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 487:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 488:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 489:Generated_Source\PSoC5/CapSense.c ****             
 490:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 491:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 492:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 493:Generated_Source\PSoC5/CapSense.c ****            
 494:Generated_Source\PSoC5/CapSense.c ****         #else
 495:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 496:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 497:Generated_Source\PSoC5/CapSense.c ****         
 498:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 499:Generated_Source\PSoC5/CapSense.c ****     
 500:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 501:Generated_Source\PSoC5/CapSense.c ****     
 502:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 503:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 504:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
  46              		.loc 1 504 0
  47 0012 FFF7FEFF 		bl	CapSense_IntClock_Start
  48              	.LVL2:
 505:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 506:Generated_Source\PSoC5/CapSense.c ****     
 507:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 508:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
  49              		.loc 1 508 0
  50 0016 FFF7FEFF 		bl	CapSense_CompCH0_Enable
  51              	.LVL3:
 509:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 510:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
  52              		.loc 1 510 0
  53 001a FFF7FEFF 		bl	CapSense_IdacCH0_Enable
  54              	.LVL4:
 511:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 512:Generated_Source\PSoC5/CapSense.c ****     
 513:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 514:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 515:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 516:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 11


 517:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 518:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 519:Generated_Source\PSoC5/CapSense.c ****     
 520:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 521:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 522:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 523:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 524:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 525:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 526:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 527:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 528:Generated_Source\PSoC5/CapSense.c ****     #else
 529:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 530:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
  55              		.loc 1 530 0
  56 001e 0F4A     		ldr	r2, .L3+4
  57 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  58 0022 43F01003 		orr	r3, r3, #16
  59 0026 1370     		strb	r3, [r2]
 531:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
  60              		.loc 1 531 0
  61 0028 103A     		subs	r2, r2, #16
  62 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  63 002c 43F01003 		orr	r3, r3, #16
  64 0030 1370     		strb	r3, [r2]
 532:Generated_Source\PSoC5/CapSense.c ****         
 533:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 534:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 535:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 536:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 537:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 538:Generated_Source\PSoC5/CapSense.c ****     
 539:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 540:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 541:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 542:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 543:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 544:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 545:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 546:Generated_Source\PSoC5/CapSense.c ****         
 547:Generated_Source\PSoC5/CapSense.c ****     #else
 548:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 549:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
  65              		.loc 1 549 0
  66 0032 02F5A652 		add	r2, r2, #5312
  67 0036 0532     		adds	r2, r2, #5
  68 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 003a 43F00103 		orr	r3, r3, #1
  70 003e 1370     		strb	r3, [r2]
 550:Generated_Source\PSoC5/CapSense.c ****         
 551:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 552:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 553:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 554:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 555:Generated_Source\PSoC5/CapSense.c ****     
 556:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
  71              		.loc 1 556 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 12


  72 0040 2046     		mov	r0, r4
  73 0042 FFF7FEFF 		bl	CyExitCriticalSection
  74              	.LVL5:
 557:Generated_Source\PSoC5/CapSense.c ****     
 558:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 559:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
  75              		.loc 1 559 0
  76 0046 0222     		movs	r2, #2
  77 0048 054B     		ldr	r3, .L3+8
  78 004a 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 561:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 562:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 563:Generated_Source\PSoC5/CapSense.c ****     
 564:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 565:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
  79              		.loc 1 565 0
  80 004c 054A     		ldr	r2, .L3+12
  81 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 0050 43F08003 		orr	r3, r3, #128
  83 0054 1370     		strb	r3, [r2]
  84 0056 10BD     		pop	{r4, pc}
  85              	.LVL6:
  86              	.L4:
  87              		.align	2
  88              	.L3:
  89 0058 99640040 		.word	1073767577
  90 005c BB430040 		.word	1073759163
  91 0060 00E100E0 		.word	-536813312
  92 0064 7B640040 		.word	1073767547
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	CapSense_Enable, .-CapSense_Enable
  96              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
  97              		.align	2
  98              		.global	CapSense_FindNextSensor
  99              		.thumb
 100              		.thumb_func
 101              		.type	CapSense_FindNextSensor, %function
 102              	CapSense_FindNextSensor:
 103              	.LFB4:
 566:Generated_Source\PSoC5/CapSense.c **** }
 567:Generated_Source\PSoC5/CapSense.c **** 
 568:Generated_Source\PSoC5/CapSense.c **** 
 569:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 570:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 571:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 572:Generated_Source\PSoC5/CapSense.c **** *
 573:Generated_Source\PSoC5/CapSense.c **** * Summary:
 574:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 575:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 576:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 577:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 578:Generated_Source\PSoC5/CapSense.c **** *
 579:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 580:Generated_Source\PSoC5/CapSense.c **** *  None
 581:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 13


 582:Generated_Source\PSoC5/CapSense.c **** * Return:
 583:Generated_Source\PSoC5/CapSense.c **** *  None
 584:Generated_Source\PSoC5/CapSense.c **** *
 585:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 586:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 587:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 588:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 589:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 590:Generated_Source\PSoC5/CapSense.c **** *
 591:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 592:Generated_Source\PSoC5/CapSense.c **** *  No
 593:Generated_Source\PSoC5/CapSense.c **** *
 594:Generated_Source\PSoC5/CapSense.c **** * Note:
 595:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 596:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 597:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 598:Generated_Source\PSoC5/CapSense.c **** *
 599:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 600:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 601:Generated_Source\PSoC5/CapSense.c **** {
 602:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 603:Generated_Source\PSoC5/CapSense.c ****     {
 604:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 605:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 606:Generated_Source\PSoC5/CapSense.c ****     }
 607:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 608:Generated_Source\PSoC5/CapSense.c ****     
 609:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 610:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 611:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 612:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 613:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 614:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 615:Generated_Source\PSoC5/CapSense.c **** }
 616:Generated_Source\PSoC5/CapSense.c **** 
 617:Generated_Source\PSoC5/CapSense.c **** 
 618:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 619:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 620:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 621:Generated_Source\PSoC5/CapSense.c **** *
 622:Generated_Source\PSoC5/CapSense.c **** * Summary:
 623:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 624:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 625:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 626:Generated_Source\PSoC5/CapSense.c **** *
 627:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 628:Generated_Source\PSoC5/CapSense.c **** *  None
 629:Generated_Source\PSoC5/CapSense.c **** *
 630:Generated_Source\PSoC5/CapSense.c **** * Return:
 631:Generated_Source\PSoC5/CapSense.c **** *  None
 632:Generated_Source\PSoC5/CapSense.c **** *
 633:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 634:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 635:Generated_Source\PSoC5/CapSense.c **** *
 636:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 637:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 638:Generated_Source\PSoC5/CapSense.c **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 14


 639:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 640:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 641:Generated_Source\PSoC5/CapSense.c ****     
 642:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 643:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 644:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 645:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 646:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 647:Generated_Source\PSoC5/CapSense.c ****     
 648:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 649:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 650:Generated_Source\PSoC5/CapSense.c ****     
 651:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 652:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 653:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 654:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 655:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 656:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 657:Generated_Source\PSoC5/CapSense.c ****         
 658:Generated_Source\PSoC5/CapSense.c ****     #else
 659:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 660:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 661:Generated_Source\PSoC5/CapSense.c ****     
 662:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 663:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 664:Generated_Source\PSoC5/CapSense.c ****     
 665:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 666:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 667:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 668:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 669:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 670:Generated_Source\PSoC5/CapSense.c **** 
 671:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 672:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 673:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 674:Generated_Source\PSoC5/CapSense.c **** 
 675:Generated_Source\PSoC5/CapSense.c ****     #else
 676:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 677:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 678:Generated_Source\PSoC5/CapSense.c ****         
 679:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 680:Generated_Source\PSoC5/CapSense.c ****     
 681:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 682:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 683:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 684:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 685:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 686:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 687:Generated_Source\PSoC5/CapSense.c ****     
 688:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 689:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 690:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 691:Generated_Source\PSoC5/CapSense.c ****            
 692:Generated_Source\PSoC5/CapSense.c ****         #else
 693:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 694:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 695:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 15


 696:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 697:Generated_Source\PSoC5/CapSense.c ****     
 698:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 699:Generated_Source\PSoC5/CapSense.c ****     
 700:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 701:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 702:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 703:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 704:Generated_Source\PSoC5/CapSense.c ****     
 705:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 706:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 707:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 708:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 709:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 710:Generated_Source\PSoC5/CapSense.c ****     
 711:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 712:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 713:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 714:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 715:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 716:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 717:Generated_Source\PSoC5/CapSense.c ****     
 718:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 719:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 720:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 721:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 722:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 723:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 724:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 725:Generated_Source\PSoC5/CapSense.c **** 
 726:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 727:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 728:Generated_Source\PSoC5/CapSense.c ****     #else
 729:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 730:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 731:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 732:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 733:Generated_Source\PSoC5/CapSense.c ****         
 734:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 735:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 736:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 737:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 738:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 739:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 740:Generated_Source\PSoC5/CapSense.c ****     
 741:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 742:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 743:Generated_Source\PSoC5/CapSense.c **** }
 744:Generated_Source\PSoC5/CapSense.c **** 
 745:Generated_Source\PSoC5/CapSense.c **** 
 746:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 747:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 748:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 749:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 750:Generated_Source\PSoC5/CapSense.c ****     *
 751:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 752:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 16


 753:Generated_Source\PSoC5/CapSense.c ****     *
 754:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 755:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 756:Generated_Source\PSoC5/CapSense.c ****     *
 757:Generated_Source\PSoC5/CapSense.c ****     * Return:
 758:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 759:Generated_Source\PSoC5/CapSense.c ****     *
 760:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 761:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 762:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 763:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 764:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 765:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 766:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 767:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 768:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 769:Generated_Source\PSoC5/CapSense.c ****     *
 770:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 771:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 772:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 773:Generated_Source\PSoC5/CapSense.c ****     *
 774:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 775:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 776:Generated_Source\PSoC5/CapSense.c ****     {
 104              		.loc 1 776 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.LVL7:
 110              	.L7:
 777:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 778:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 779:Generated_Source\PSoC5/CapSense.c ****         
 780:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 781:Generated_Source\PSoC5/CapSense.c ****         do
 782:Generated_Source\PSoC5/CapSense.c ****         {
 783:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 784:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 111              		.loc 1 784 0
 112 0000 0130     		adds	r0, r0, #1
 113 0002 C0B2     		uxtb	r0, r0
 114              	.LVL8:
 785:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 115              		.loc 1 785 0
 116 0004 1A28     		cmp	r0, #26
 117 0006 08D0     		beq	.L6
 786:Generated_Source\PSoC5/CapSense.c ****             {
 787:Generated_Source\PSoC5/CapSense.c ****                 break;
 788:Generated_Source\PSoC5/CapSense.c ****             }
 789:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 118              		.loc 1 789 0
 119 0008 C208     		lsrs	r2, r0, #3
 790:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 120              		.loc 1 790 0
 121 000a 00F00701 		and	r1, r0, #7
 122 000e 0123     		movs	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 17


 123 0010 8B40     		lsls	r3, r3, r1
 124              	.LVL9:
 791:Generated_Source\PSoC5/CapSense.c ****         }    
 792:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 125              		.loc 1 792 0
 126 0012 0249     		ldr	r1, .L8
 127 0014 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 128 0016 1342     		tst	r3, r2
 129 0018 F2D0     		beq	.L7
 130              	.LVL10:
 131              	.L6:
 793:Generated_Source\PSoC5/CapSense.c ****         
 794:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 795:Generated_Source\PSoC5/CapSense.c ****     }
 132              		.loc 1 795 0
 133 001a 7047     		bx	lr
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 001c 00000000 		.word	.LANCHOR0
 138              		.cfi_endproc
 139              	.LFE4:
 140              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 141              		.section	.text.CapSense_IsBusy,"ax",%progbits
 142              		.align	2
 143              		.global	CapSense_IsBusy
 144              		.thumb
 145              		.thumb_func
 146              		.type	CapSense_IsBusy, %function
 147              	CapSense_IsBusy:
 148              	.LFB8:
 796:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 797:Generated_Source\PSoC5/CapSense.c ****  
 798:Generated_Source\PSoC5/CapSense.c ****  
 799:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 800:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 801:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 802:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 803:Generated_Source\PSoC5/CapSense.c ****     *
 804:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 805:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 806:Generated_Source\PSoC5/CapSense.c ****     *  
 807:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 808:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 809:Generated_Source\PSoC5/CapSense.c ****     *
 810:Generated_Source\PSoC5/CapSense.c ****     * Return:
 811:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 812:Generated_Source\PSoC5/CapSense.c ****     *
 813:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 814:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 815:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 816:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 817:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 818:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 819:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 820:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 821:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 18


 822:Generated_Source\PSoC5/CapSense.c ****     *
 823:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 824:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 825:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 826:Generated_Source\PSoC5/CapSense.c ****     *
 827:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 828:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 829:Generated_Source\PSoC5/CapSense.c ****     {
 830:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 831:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 832:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 833:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 834:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 835:Generated_Source\PSoC5/CapSense.c ****         
 836:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 837:Generated_Source\PSoC5/CapSense.c ****         do
 838:Generated_Source\PSoC5/CapSense.c ****         {
 839:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 840:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 841:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 842:Generated_Source\PSoC5/CapSense.c ****             {
 843:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 844:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 845:Generated_Source\PSoC5/CapSense.c ****                 break;
 846:Generated_Source\PSoC5/CapSense.c ****             }
 847:Generated_Source\PSoC5/CapSense.c ****             
 848:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 849:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 850:Generated_Source\PSoC5/CapSense.c ****         }
 851:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 852:Generated_Source\PSoC5/CapSense.c ****         
 853:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 854:Generated_Source\PSoC5/CapSense.c ****         do
 855:Generated_Source\PSoC5/CapSense.c ****         {
 856:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 857:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 858:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 859:Generated_Source\PSoC5/CapSense.c ****             {
 860:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 861:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 862:Generated_Source\PSoC5/CapSense.c ****                 break;
 863:Generated_Source\PSoC5/CapSense.c ****             }
 864:Generated_Source\PSoC5/CapSense.c ****             
 865:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 866:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 867:Generated_Source\PSoC5/CapSense.c ****         } 
 868:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 869:Generated_Source\PSoC5/CapSense.c ****         
 870:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 871:Generated_Source\PSoC5/CapSense.c ****         
 872:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 873:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 874:Generated_Source\PSoC5/CapSense.c ****         {
 875:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 876:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 877:Generated_Source\PSoC5/CapSense.c ****             
 878:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 19


 879:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 880:Generated_Source\PSoC5/CapSense.c ****         }
 881:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 882:Generated_Source\PSoC5/CapSense.c ****         {
 883:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 884:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 885:Generated_Source\PSoC5/CapSense.c ****            
 886:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 887:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 888:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 889:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 890:Generated_Source\PSoC5/CapSense.c ****         }
 891:Generated_Source\PSoC5/CapSense.c ****         else
 892:Generated_Source\PSoC5/CapSense.c ****         {
 893:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 894:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 895:Generated_Source\PSoC5/CapSense.c ****             
 896:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 897:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 898:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 899:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 900:Generated_Source\PSoC5/CapSense.c ****         }
 901:Generated_Source\PSoC5/CapSense.c ****         
 902:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 903:Generated_Source\PSoC5/CapSense.c ****     }
 904:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 905:Generated_Source\PSoC5/CapSense.c **** 
 906:Generated_Source\PSoC5/CapSense.c **** 
 907:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 908:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 909:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 910:Generated_Source\PSoC5/CapSense.c **** *
 911:Generated_Source\PSoC5/CapSense.c **** * Summary:
 912:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 913:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 914:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 915:Generated_Source\PSoC5/CapSense.c **** *  widget.
 916:Generated_Source\PSoC5/CapSense.c **** *
 917:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 918:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 919:Generated_Source\PSoC5/CapSense.c **** *
 920:Generated_Source\PSoC5/CapSense.c **** * Return:
 921:Generated_Source\PSoC5/CapSense.c **** *  None
 922:Generated_Source\PSoC5/CapSense.c **** *
 923:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 924:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 925:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 926:Generated_Source\PSoC5/CapSense.c **** *  widget.
 927:Generated_Source\PSoC5/CapSense.c **** *
 928:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 929:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 930:Generated_Source\PSoC5/CapSense.c **** {
 931:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 932:Generated_Source\PSoC5/CapSense.c ****     
 933:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 934:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 935:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 20


 936:Generated_Source\PSoC5/CapSense.c ****         
 937:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 938:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 939:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 940:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 941:Generated_Source\PSoC5/CapSense.c ****         
 942:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 943:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 944:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 945:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 946:Generated_Source\PSoC5/CapSense.c ****         #else
 947:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 948:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 949:Generated_Source\PSoC5/CapSense.c **** 
 950:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 951:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 952:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 953:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 954:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 955:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 956:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 957:Generated_Source\PSoC5/CapSense.c ****                */
 958:Generated_Source\PSoC5/CapSense.c **** 
 959:Generated_Source\PSoC5/CapSense.c ****     #else
 960:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 961:Generated_Source\PSoC5/CapSense.c ****         {
 962:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 963:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 964:Generated_Source\PSoC5/CapSense.c ****             
 965:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 966:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 967:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 968:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 969:Generated_Source\PSoC5/CapSense.c ****             
 970:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 971:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 972:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 973:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 974:Generated_Source\PSoC5/CapSense.c ****             #else
 975:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 976:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 977:Generated_Source\PSoC5/CapSense.c ****         }
 978:Generated_Source\PSoC5/CapSense.c ****         
 979:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 980:Generated_Source\PSoC5/CapSense.c ****         {
 981:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 982:Generated_Source\PSoC5/CapSense.c ****         
 983:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 984:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 985:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 986:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 987:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 988:Generated_Source\PSoC5/CapSense.c ****             
 989:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 990:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 991:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 992:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 21


 993:Generated_Source\PSoC5/CapSense.c ****             #else
 994:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 995:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 996:Generated_Source\PSoC5/CapSense.c ****         }
 997:Generated_Source\PSoC5/CapSense.c **** 
 998:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 999:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
1000:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
1001:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
1002:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
1003:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
1004:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
1005:Generated_Source\PSoC5/CapSense.c ****                */
1006:Generated_Source\PSoC5/CapSense.c **** 
1007:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1008:Generated_Source\PSoC5/CapSense.c **** }
1009:Generated_Source\PSoC5/CapSense.c **** 
1010:Generated_Source\PSoC5/CapSense.c **** 
1011:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1012:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
1013:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1014:Generated_Source\PSoC5/CapSense.c **** *
1015:Generated_Source\PSoC5/CapSense.c **** * Summary:
1016:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
1017:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
1018:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
1019:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
1020:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
1021:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
1022:Generated_Source\PSoC5/CapSense.c **** *
1023:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1024:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1025:Generated_Source\PSoC5/CapSense.c **** *
1026:Generated_Source\PSoC5/CapSense.c **** * Return:
1027:Generated_Source\PSoC5/CapSense.c **** *  None
1028:Generated_Source\PSoC5/CapSense.c **** *
1029:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1030:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1031:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
1032:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
1033:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
1034:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
1035:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
1036:Generated_Source\PSoC5/CapSense.c **** *
1037:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
1038:Generated_Source\PSoC5/CapSense.c **** *  No
1039:Generated_Source\PSoC5/CapSense.c **** *
1040:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
1042:Generated_Source\PSoC5/CapSense.c **** {
1043:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1044:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
1045:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
1046:Generated_Source\PSoC5/CapSense.c ****     
1047:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1048:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
1049:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 22


1050:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
1051:Generated_Source\PSoC5/CapSense.c ****         
1052:Generated_Source\PSoC5/CapSense.c ****     #else
1053:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
1054:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
1055:Generated_Source\PSoC5/CapSense.c ****         {
1056:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
1057:Generated_Source\PSoC5/CapSense.c ****         }
1058:Generated_Source\PSoC5/CapSense.c ****         else
1059:Generated_Source\PSoC5/CapSense.c ****         {
1060:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
1061:Generated_Source\PSoC5/CapSense.c ****         }
1062:Generated_Source\PSoC5/CapSense.c ****         
1063:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
1064:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
1065:Generated_Source\PSoC5/CapSense.c ****         {
1066:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
1067:Generated_Source\PSoC5/CapSense.c ****         }
1068:Generated_Source\PSoC5/CapSense.c ****         else
1069:Generated_Source\PSoC5/CapSense.c ****         {
1070:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
1071:Generated_Source\PSoC5/CapSense.c ****         }
1072:Generated_Source\PSoC5/CapSense.c ****         
1073:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1074:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
1075:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
1076:Generated_Source\PSoC5/CapSense.c ****         {
1077:Generated_Source\PSoC5/CapSense.c ****         
1078:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
1079:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
1080:Generated_Source\PSoC5/CapSense.c ****         }
1081:Generated_Source\PSoC5/CapSense.c ****         
1082:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1083:Generated_Source\PSoC5/CapSense.c **** }
1084:Generated_Source\PSoC5/CapSense.c **** 
1085:Generated_Source\PSoC5/CapSense.c **** 
1086:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1087:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
1088:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1089:Generated_Source\PSoC5/CapSense.c **** *
1090:Generated_Source\PSoC5/CapSense.c **** * Summary:
1091:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
1092:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
1093:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
1094:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
1095:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
1096:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
1097:Generated_Source\PSoC5/CapSense.c **** *
1098:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1099:Generated_Source\PSoC5/CapSense.c **** *  None
1100:Generated_Source\PSoC5/CapSense.c **** *
1101:Generated_Source\PSoC5/CapSense.c **** * Return:
1102:Generated_Source\PSoC5/CapSense.c **** *  None
1103:Generated_Source\PSoC5/CapSense.c **** *
1104:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1105:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1106:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 23


1107:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
1108:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
1109:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
1110:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
1111:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
1112:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
1113:Generated_Source\PSoC5/CapSense.c **** *
1114:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
1115:Generated_Source\PSoC5/CapSense.c **** *  No
1116:Generated_Source\PSoC5/CapSense.c **** *
1117:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1118:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
1119:Generated_Source\PSoC5/CapSense.c **** {
1120:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1121:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
1122:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
1123:Generated_Source\PSoC5/CapSense.c ****     
1124:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1125:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1126:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
1127:Generated_Source\PSoC5/CapSense.c **** 
1128:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1129:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
1130:Generated_Source\PSoC5/CapSense.c ****         {
1131:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1132:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1133:Generated_Source\PSoC5/CapSense.c ****         }
1134:Generated_Source\PSoC5/CapSense.c ****         
1135:Generated_Source\PSoC5/CapSense.c ****     #else
1136:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1137:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1138:Generated_Source\PSoC5/CapSense.c ****         
1139:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1140:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1141:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1142:Generated_Source\PSoC5/CapSense.c ****         {
1143:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1144:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1145:Generated_Source\PSoC5/CapSense.c ****         }
1146:Generated_Source\PSoC5/CapSense.c ****         
1147:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1148:Generated_Source\PSoC5/CapSense.c **** }
1149:Generated_Source\PSoC5/CapSense.c **** 
1150:Generated_Source\PSoC5/CapSense.c **** 
1151:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1152:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1153:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1154:Generated_Source\PSoC5/CapSense.c **** *
1155:Generated_Source\PSoC5/CapSense.c **** * Summary:
1156:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1157:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1158:Generated_Source\PSoC5/CapSense.c **** *
1159:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1160:Generated_Source\PSoC5/CapSense.c **** *  None
1161:Generated_Source\PSoC5/CapSense.c **** *
1162:Generated_Source\PSoC5/CapSense.c **** * Return:
1163:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 24


1164:Generated_Source\PSoC5/CapSense.c **** *  completed.
1165:Generated_Source\PSoC5/CapSense.c **** *
1166:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1167:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1168:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1169:Generated_Source\PSoC5/CapSense.c **** *
1170:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1171:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1172:Generated_Source\PSoC5/CapSense.c **** {
 149              		.loc 1 1172 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
1173:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 154              		.loc 1 1173 0
 155 0000 024B     		ldr	r3, .L11
 156 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1174:Generated_Source\PSoC5/CapSense.c **** }
 157              		.loc 1 1174 0
 158 0004 00F00100 		and	r0, r0, #1
 159 0008 7047     		bx	lr
 160              	.L12:
 161 000a 00BF     		.align	2
 162              	.L11:
 163 000c 00000000 		.word	CapSense_csv
 164              		.cfi_endproc
 165              	.LFE8:
 166              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 167              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_ReadSensorRaw
 170              		.thumb
 171              		.thumb_func
 172              		.type	CapSense_ReadSensorRaw, %function
 173              	CapSense_ReadSensorRaw:
 174              	.LFB9:
1175:Generated_Source\PSoC5/CapSense.c **** 
1176:Generated_Source\PSoC5/CapSense.c **** 
1177:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1178:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1179:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1180:Generated_Source\PSoC5/CapSense.c **** *
1181:Generated_Source\PSoC5/CapSense.c **** * Summary:
1182:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1183:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1184:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1185:Generated_Source\PSoC5/CapSense.c **** *
1186:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1187:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1188:Generated_Source\PSoC5/CapSense.c **** *
1189:Generated_Source\PSoC5/CapSense.c **** * Return:
1190:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1191:Generated_Source\PSoC5/CapSense.c **** *
1192:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1193:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1194:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 25


1195:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1196:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1197:Generated_Source\PSoC5/CapSense.c **** {
 175              		.loc 1 1197 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL11:
1198:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
1199:Generated_Source\PSoC5/CapSense.c **** }
 181              		.loc 1 1199 0
 182 0000 014B     		ldr	r3, .L14
 183 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 184              	.LVL12:
 185 0006 7047     		bx	lr
 186              	.L15:
 187              		.align	2
 188              	.L14:
 189 0008 00000000 		.word	CapSense_sensorRaw
 190              		.cfi_endproc
 191              	.LFE9:
 192              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 193              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 194              		.align	2
 195              		.global	CapSense_EnableSensor
 196              		.thumb
 197              		.thumb_func
 198              		.type	CapSense_EnableSensor, %function
 199              	CapSense_EnableSensor:
 200              	.LFB11:
1200:Generated_Source\PSoC5/CapSense.c **** 
1201:Generated_Source\PSoC5/CapSense.c **** 
1202:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1203:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1204:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1205:Generated_Source\PSoC5/CapSense.c **** *
1206:Generated_Source\PSoC5/CapSense.c **** * Summary:
1207:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1208:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1209:Generated_Source\PSoC5/CapSense.c **** *
1210:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1211:Generated_Source\PSoC5/CapSense.c **** *  None
1212:Generated_Source\PSoC5/CapSense.c **** *
1213:Generated_Source\PSoC5/CapSense.c **** * Return:
1214:Generated_Source\PSoC5/CapSense.c **** *  None
1215:Generated_Source\PSoC5/CapSense.c **** *
1216:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1217:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1218:Generated_Source\PSoC5/CapSense.c **** {
1219:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1220:Generated_Source\PSoC5/CapSense.c ****    
1221:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
1222:Generated_Source\PSoC5/CapSense.c ****     {
1223:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
1224:Generated_Source\PSoC5/CapSense.c ****     }
1225:Generated_Source\PSoC5/CapSense.c **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 26


1226:Generated_Source\PSoC5/CapSense.c **** 
1227:Generated_Source\PSoC5/CapSense.c **** 
1228:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1229:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1230:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1231:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1232:Generated_Source\PSoC5/CapSense.c ****     *
1233:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1234:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1235:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1236:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1237:Generated_Source\PSoC5/CapSense.c ****     *
1238:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1239:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1240:Generated_Source\PSoC5/CapSense.c ****     *
1241:Generated_Source\PSoC5/CapSense.c ****     * Return:
1242:Generated_Source\PSoC5/CapSense.c ****     *  None
1243:Generated_Source\PSoC5/CapSense.c ****     *
1244:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1245:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1246:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1247:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1248:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1249:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1250:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1251:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1252:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1253:Generated_Source\PSoC5/CapSense.c ****     *
1254:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1255:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1256:Generated_Source\PSoC5/CapSense.c ****     {
1257:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1258:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1259:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1260:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1261:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1262:Generated_Source\PSoC5/CapSense.c ****         
1263:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1264:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1265:Generated_Source\PSoC5/CapSense.c ****         {
1266:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1267:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1268:Generated_Source\PSoC5/CapSense.c ****         }
1269:Generated_Source\PSoC5/CapSense.c ****         else
1270:Generated_Source\PSoC5/CapSense.c ****         {
1271:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1272:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1273:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1274:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1275:Generated_Source\PSoC5/CapSense.c ****                         
1276:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1277:Generated_Source\PSoC5/CapSense.c ****             {
1278:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1279:Generated_Source\PSoC5/CapSense.c ****             }
1280:Generated_Source\PSoC5/CapSense.c ****         } 
1281:Generated_Source\PSoC5/CapSense.c ****     }
1282:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 27


1283:Generated_Source\PSoC5/CapSense.c ****     
1284:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1285:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1286:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1287:Generated_Source\PSoC5/CapSense.c ****     *
1288:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1289:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1290:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1291:Generated_Source\PSoC5/CapSense.c ****     *
1292:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1293:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1294:Generated_Source\PSoC5/CapSense.c ****     *
1295:Generated_Source\PSoC5/CapSense.c ****     * Return:
1296:Generated_Source\PSoC5/CapSense.c ****     *  None
1297:Generated_Source\PSoC5/CapSense.c ****     *
1298:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1299:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1300:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1301:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1302:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1303:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1304:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1305:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1306:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1307:Generated_Source\PSoC5/CapSense.c ****     *
1308:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1309:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1310:Generated_Source\PSoC5/CapSense.c ****     {
1311:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1312:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1313:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1314:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1315:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1316:Generated_Source\PSoC5/CapSense.c ****         
1317:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1318:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1319:Generated_Source\PSoC5/CapSense.c ****         {
1320:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1321:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1322:Generated_Source\PSoC5/CapSense.c ****         }
1323:Generated_Source\PSoC5/CapSense.c ****         else
1324:Generated_Source\PSoC5/CapSense.c ****         {
1325:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1326:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1327:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1328:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1329:Generated_Source\PSoC5/CapSense.c ****                         
1330:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1331:Generated_Source\PSoC5/CapSense.c ****             {
1332:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1333:Generated_Source\PSoC5/CapSense.c ****             }
1334:Generated_Source\PSoC5/CapSense.c ****         } 
1335:Generated_Source\PSoC5/CapSense.c ****     }
1336:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1337:Generated_Source\PSoC5/CapSense.c **** 
1338:Generated_Source\PSoC5/CapSense.c **** 
1339:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 28


1340:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1341:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1342:Generated_Source\PSoC5/CapSense.c **** *
1343:Generated_Source\PSoC5/CapSense.c **** * Summary:
1344:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1345:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1346:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1347:Generated_Source\PSoC5/CapSense.c **** *
1348:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1349:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1350:Generated_Source\PSoC5/CapSense.c **** *
1351:Generated_Source\PSoC5/CapSense.c **** * Return:
1352:Generated_Source\PSoC5/CapSense.c **** *  None
1353:Generated_Source\PSoC5/CapSense.c **** *
1354:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1355:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1356:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1357:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1358:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1359:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1360:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1361:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1362:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1363:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1364:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1365:Generated_Source\PSoC5/CapSense.c **** *
1366:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1367:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1368:Generated_Source\PSoC5/CapSense.c **** {
 201              		.loc 1 1368 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL13:
 206 0000 10B5     		push	{r4, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
1369:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 210              		.loc 1 1369 0
 211 0002 0B4B     		ldr	r3, .L20
 212 0004 195C     		ldrb	r1, [r3, r0]	@ zero_extendqisi2
 213              	.LVL14:
1370:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 214              		.loc 1 1370 0
 215 0006 1A18     		adds	r2, r3, r0
 216 0008 147F     		ldrb	r4, [r2, #28]	@ zero_extendqisi2
 217              	.LVL15:
1371:Generated_Source\PSoC5/CapSense.c ****     
1372:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1373:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1374:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1375:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1376:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1377:Generated_Source\PSoC5/CapSense.c ****             */
1378:Generated_Source\PSoC5/CapSense.c ****     
1379:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 29


1380:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 218              		.loc 1 1380 0
 219 000a 03EB8003 		add	r3, r3, r0, lsl #2
 220 000e 9B6B     		ldr	r3, [r3, #56]
 221 0010 0922     		movs	r2, #9
 222 0012 1A70     		strb	r2, [r3]
1381:Generated_Source\PSoC5/CapSense.c ****     
1382:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1383:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 223              		.loc 1 1383 0
 224 0014 0F29     		cmp	r1, #15
 225 0016 00D1     		bne	.L17
1384:Generated_Source\PSoC5/CapSense.c **** 	{
1385:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 226              		.loc 1 1385 0
 227 0018 0721     		movs	r1, #7
 228              	.LVL16:
 229              	.L17:
1386:Generated_Source\PSoC5/CapSense.c **** 	}
1387:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 230              		.loc 1 1387 0
 231 001a 054A     		ldr	r2, .L20
 232 001c 02EB8102 		add	r2, r2, r1, lsl #2
 233 0020 D2F8A020 		ldr	r2, [r2, #160]
 234 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 235 0026 2343     		orrs	r3, r3, r4
 236 0028 1370     		strb	r3, [r2]
1388:Generated_Source\PSoC5/CapSense.c ****     
1389:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1390:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1391:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1392:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1393:Generated_Source\PSoC5/CapSense.c ****         #else
1394:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 237              		.loc 1 1394 0
 238 002a FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 239              	.LVL17:
 240 002e 10BD     		pop	{r4, pc}
 241              	.LVL18:
 242              	.L21:
 243              		.align	2
 244              	.L20:
 245 0030 00000000 		.word	.LANCHOR1
 246              		.cfi_endproc
 247              	.LFE11:
 248              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 249              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 250              		.align	2
 251              		.global	CapSense_DisableSensor
 252              		.thumb
 253              		.thumb_func
 254              		.type	CapSense_DisableSensor, %function
 255              	CapSense_DisableSensor:
 256              	.LFB12:
1395:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1396:Generated_Source\PSoC5/CapSense.c ****                 
1397:Generated_Source\PSoC5/CapSense.c ****     #else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 30


1398:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1399:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1400:Generated_Source\PSoC5/CapSense.c ****             {
1401:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1402:Generated_Source\PSoC5/CapSense.c ****             } 
1403:Generated_Source\PSoC5/CapSense.c ****             else
1404:Generated_Source\PSoC5/CapSense.c ****             {
1405:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1406:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1407:Generated_Source\PSoC5/CapSense.c ****             }
1408:Generated_Source\PSoC5/CapSense.c ****             
1409:Generated_Source\PSoC5/CapSense.c ****         #else
1410:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1411:Generated_Source\PSoC5/CapSense.c ****             {
1412:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1413:Generated_Source\PSoC5/CapSense.c ****             } 
1414:Generated_Source\PSoC5/CapSense.c ****             else
1415:Generated_Source\PSoC5/CapSense.c ****             {
1416:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1417:Generated_Source\PSoC5/CapSense.c ****             }
1418:Generated_Source\PSoC5/CapSense.c ****             
1419:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1420:Generated_Source\PSoC5/CapSense.c ****         
1421:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1422:Generated_Source\PSoC5/CapSense.c **** }
1423:Generated_Source\PSoC5/CapSense.c **** 
1424:Generated_Source\PSoC5/CapSense.c **** 
1425:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1426:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1427:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1428:Generated_Source\PSoC5/CapSense.c **** *
1429:Generated_Source\PSoC5/CapSense.c **** * Summary:
1430:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1431:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1432:Generated_Source\PSoC5/CapSense.c **** *
1433:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1434:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1435:Generated_Source\PSoC5/CapSense.c **** *
1436:Generated_Source\PSoC5/CapSense.c **** * Return:
1437:Generated_Source\PSoC5/CapSense.c **** *  None
1438:Generated_Source\PSoC5/CapSense.c **** *
1439:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1440:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1441:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1442:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1443:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1444:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1445:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1446:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1447:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1448:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1449:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1450:Generated_Source\PSoC5/CapSense.c **** *
1451:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1452:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1453:Generated_Source\PSoC5/CapSense.c **** {
 257              		.loc 1 1453 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 31


 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              	.LVL19:
 262 0000 70B5     		push	{r4, r5, r6, lr}
 263              		.cfi_def_cfa_offset 16
 264              		.cfi_offset 4, -16
 265              		.cfi_offset 5, -12
 266              		.cfi_offset 6, -8
 267              		.cfi_offset 14, -4
 268 0002 0546     		mov	r5, r0
1454:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 269              		.loc 1 1454 0
 270 0004 0B4B     		ldr	r3, .L26
 271 0006 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 272              	.LVL20:
1455:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 273              		.loc 1 1455 0
 274 0008 0344     		add	r3, r3, r0
 275 000a 1E7F     		ldrb	r6, [r3, #28]	@ zero_extendqisi2
 276              	.LVL21:
1456:Generated_Source\PSoC5/CapSense.c ****     
1457:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1458:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1459:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1460:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1461:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1462:Generated_Source\PSoC5/CapSense.c ****             */
1463:Generated_Source\PSoC5/CapSense.c ****     
1464:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1465:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1466:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1467:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1468:Generated_Source\PSoC5/CapSense.c ****         #else
1469:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 277              		.loc 1 1469 0
 278 000c FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
 279              	.LVL22:
1470:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1471:Generated_Source\PSoC5/CapSense.c ****                 
1472:Generated_Source\PSoC5/CapSense.c ****     #else
1473:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1474:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1475:Generated_Source\PSoC5/CapSense.c ****             {
1476:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1477:Generated_Source\PSoC5/CapSense.c ****             } 
1478:Generated_Source\PSoC5/CapSense.c ****             else
1479:Generated_Source\PSoC5/CapSense.c ****             {
1480:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1481:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1482:Generated_Source\PSoC5/CapSense.c ****             }
1483:Generated_Source\PSoC5/CapSense.c ****             
1484:Generated_Source\PSoC5/CapSense.c ****         #else
1485:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1486:Generated_Source\PSoC5/CapSense.c ****             {
1487:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1488:Generated_Source\PSoC5/CapSense.c ****             } 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 32


1489:Generated_Source\PSoC5/CapSense.c ****             else
1490:Generated_Source\PSoC5/CapSense.c ****             {
1491:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1492:Generated_Source\PSoC5/CapSense.c ****             }
1493:Generated_Source\PSoC5/CapSense.c ****             
1494:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1495:Generated_Source\PSoC5/CapSense.c ****         
1496:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1497:Generated_Source\PSoC5/CapSense.c ****     
1498:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1499:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 280              		.loc 1 1499 0
 281 0010 0F2C     		cmp	r4, #15
 282 0012 00D1     		bne	.L23
1500:Generated_Source\PSoC5/CapSense.c **** 	{
1501:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 283              		.loc 1 1501 0
 284 0014 0724     		movs	r4, #7
 285              	.LVL23:
 286              	.L23:
1502:Generated_Source\PSoC5/CapSense.c **** 	}
1503:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 287              		.loc 1 1503 0
 288 0016 0748     		ldr	r0, .L26
 289 0018 00EB8404 		add	r4, r0, r4, lsl #2
 290              	.LVL24:
 291 001c D4F8A020 		ldr	r2, [r4, #160]
 292 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 293 0022 23EA0603 		bic	r3, r3, r6
 294 0026 1370     		strb	r3, [r2]
1504:Generated_Source\PSoC5/CapSense.c ****     
1505:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1506:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1507:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 295              		.loc 1 1507 0
 296 0028 00EB8500 		add	r0, r0, r5, lsl #2
 297 002c 836B     		ldr	r3, [r0, #56]
 298 002e 0822     		movs	r2, #8
 299 0030 1A70     		strb	r2, [r3]
 300 0032 70BD     		pop	{r4, r5, r6, pc}
 301              	.LVL25:
 302              	.L27:
 303              		.align	2
 304              	.L26:
 305 0034 00000000 		.word	.LANCHOR1
 306              		.cfi_endproc
 307              	.LFE12:
 308              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 309              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 310              		.align	2
 311              		.global	CapSense_ClearSensors
 312              		.thumb
 313              		.thumb_func
 314              		.type	CapSense_ClearSensors, %function
 315              	CapSense_ClearSensors:
 316              	.LFB10:
1218:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 33


 317              		.loc 1 1218 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 10B5     		push	{r4, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
 324              		.cfi_offset 14, -4
 325              	.LVL26:
1221:Generated_Source\PSoC5/CapSense.c ****     {
 326              		.loc 1 1221 0
 327 0002 0024     		movs	r4, #0
 328 0004 04E0     		b	.L29
 329              	.LVL27:
 330              	.L30:
1223:Generated_Source\PSoC5/CapSense.c ****     }
 331              		.loc 1 1223 0 discriminator 3
 332 0006 2046     		mov	r0, r4
 333 0008 FFF7FEFF 		bl	CapSense_DisableSensor
 334              	.LVL28:
1221:Generated_Source\PSoC5/CapSense.c ****     {
 335              		.loc 1 1221 0 discriminator 3
 336 000c 0134     		adds	r4, r4, #1
 337              	.LVL29:
 338 000e E4B2     		uxtb	r4, r4
 339              	.LVL30:
 340              	.L29:
1221:Generated_Source\PSoC5/CapSense.c ****     {
 341              		.loc 1 1221 0 is_stmt 0 discriminator 1
 342 0010 192C     		cmp	r4, #25
 343 0012 F8D9     		bls	.L30
1225:Generated_Source\PSoC5/CapSense.c **** 
 344              		.loc 1 1225 0 is_stmt 1
 345 0014 10BD     		pop	{r4, pc}
 346              		.cfi_endproc
 347              	.LFE10:
 348              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 349 0016 00BF     		.section	.text.CapSense_Stop,"ax",%progbits
 350              		.align	2
 351              		.global	CapSense_Stop
 352              		.thumb
 353              		.thumb_func
 354              		.type	CapSense_Stop, %function
 355              	CapSense_Stop:
 356              	.LFB3:
 638:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 357              		.loc 1 638 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361 0000 10B5     		push	{r4, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 640:Generated_Source\PSoC5/CapSense.c ****     
 365              		.loc 1 640 0
 366 0002 154C     		ldr	r4, .L34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 34


 367 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 368 0006 03F0FD03 		and	r3, r3, #253
 369 000a 2370     		strb	r3, [r4]
 643:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 370              		.loc 1 643 0
 371 000c 0222     		movs	r2, #2
 372 000e 134B     		ldr	r3, .L34+4
 373 0010 1A60     		str	r2, [r3]
 649:Generated_Source\PSoC5/CapSense.c ****     
 374              		.loc 1 649 0
 375 0012 FFF7FEFF 		bl	CapSense_ClearSensors
 376              	.LVL31:
 663:Generated_Source\PSoC5/CapSense.c ****     
 377              		.loc 1 663 0
 378 0016 124A     		ldr	r2, .L34+8
 379 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 380 001a 03F0DF03 		and	r3, r3, #223
 381 001e 1370     		strb	r3, [r2]
 702:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 382              		.loc 1 702 0
 383 0020 FFF7FEFF 		bl	CapSense_IntClock_Stop
 384              	.LVL32:
 706:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 385              		.loc 1 706 0
 386 0024 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 387              	.LVL33:
 708:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 388              		.loc 1 708 0
 389 0028 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 390              	.LVL34:
 730:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 391              		.loc 1 730 0
 392 002c 0D4A     		ldr	r2, .L34+12
 393 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 394 0030 03F0FE03 		and	r3, r3, #254
 395 0034 1370     		strb	r3, [r2]
 731:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 396              		.loc 1 731 0
 397 0036 A2F5A652 		sub	r2, r2, #5312
 398 003a 053A     		subs	r2, r2, #5
 399 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 400 003e 03F0EF03 		and	r3, r3, #239
 401 0042 1370     		strb	r3, [r2]
 732:Generated_Source\PSoC5/CapSense.c ****         
 402              		.loc 1 732 0
 403 0044 1032     		adds	r2, r2, #16
 404 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 405 0048 03F0EF03 		and	r3, r3, #239
 406 004c 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/CapSense.c **** }
 407              		.loc 1 742 0
 408 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 409 0050 03F07F03 		and	r3, r3, #127
 410 0054 2370     		strb	r3, [r4]
 411 0056 10BD     		pop	{r4, pc}
 412              	.L35:
 413              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 35


 414              	.L34:
 415 0058 7B640040 		.word	1073767547
 416 005c 80E100E0 		.word	-536813184
 417 0060 99640040 		.word	1073767577
 418 0064 70580040 		.word	1073764464
 419              		.cfi_endproc
 420              	.LFE3:
 421              		.size	CapSense_Stop, .-CapSense_Stop
 422              		.section	.text.CapSense_PostScan,"ax",%progbits
 423              		.align	2
 424              		.global	CapSense_PostScan
 425              		.thumb
 426              		.thumb_func
 427              		.type	CapSense_PostScan, %function
 428              	CapSense_PostScan:
 429              	.LFB14:
1508:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1509:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1510:Generated_Source\PSoC5/CapSense.c ****     #else
1511:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1512:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1513:Generated_Source\PSoC5/CapSense.c **** }
1514:Generated_Source\PSoC5/CapSense.c **** 
1515:Generated_Source\PSoC5/CapSense.c **** 
1516:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1517:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1518:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1519:Generated_Source\PSoC5/CapSense.c **** *
1520:Generated_Source\PSoC5/CapSense.c **** * Summary:
1521:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1522:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1523:Generated_Source\PSoC5/CapSense.c **** *
1524:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1525:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1526:Generated_Source\PSoC5/CapSense.c **** *
1527:Generated_Source\PSoC5/CapSense.c **** * Return:
1528:Generated_Source\PSoC5/CapSense.c **** *  None
1529:Generated_Source\PSoC5/CapSense.c **** *
1530:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1531:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1532:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1533:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1534:Generated_Source\PSoC5/CapSense.c **** *
1535:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1536:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1537:Generated_Source\PSoC5/CapSense.c **** {
1538:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1539:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
1540:Generated_Source\PSoC5/CapSense.c ****     
1541:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1542:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1543:Generated_Source\PSoC5/CapSense.c **** 
1544:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1545:Generated_Source\PSoC5/CapSense.c ****     
1546:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1547:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1548:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 36


1549:Generated_Source\PSoC5/CapSense.c **** 
1550:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1551:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
1552:Generated_Source\PSoC5/CapSense.c ****         
1553:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1554:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1555:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1556:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1557:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1558:Generated_Source\PSoC5/CapSense.c ****             #else
1559:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1560:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1561:Generated_Source\PSoC5/CapSense.c **** 
1562:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1563:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1564:Generated_Source\PSoC5/CapSense.c ****             
1565:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1566:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1567:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1568:Generated_Source\PSoC5/CapSense.c ****             
1569:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1570:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1571:Generated_Source\PSoC5/CapSense.c ****                 
1572:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1573:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1574:Generated_Source\PSoC5/CapSense.c ****             
1575:Generated_Source\PSoC5/CapSense.c ****         #else
1576:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1577:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1578:Generated_Source\PSoC5/CapSense.c ****             
1579:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1580:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1581:Generated_Source\PSoC5/CapSense.c ****              
1582:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1583:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1584:Generated_Source\PSoC5/CapSense.c ****         
1585:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1586:Generated_Source\PSoC5/CapSense.c ****         
1587:Generated_Source\PSoC5/CapSense.c ****     #else
1588:Generated_Source\PSoC5/CapSense.c **** 
1589:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1590:Generated_Source\PSoC5/CapSense.c ****         {
1591:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1592:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1593:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1594:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1595:Generated_Source\PSoC5/CapSense.c ****                 #else
1596:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1597:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1598:Generated_Source\PSoC5/CapSense.c ****                 
1599:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1600:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1601:Generated_Source\PSoC5/CapSense.c ****                 
1602:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1603:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1604:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1605:Generated_Source\PSoC5/CapSense.c ****                 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 37


1606:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1607:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1608:Generated_Source\PSoC5/CapSense.c ****                     
1609:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1610:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1611:Generated_Source\PSoC5/CapSense.c ****                 
1612:Generated_Source\PSoC5/CapSense.c ****             #else
1613:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1614:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1615:Generated_Source\PSoC5/CapSense.c ****                 
1616:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1617:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1618:Generated_Source\PSoC5/CapSense.c ****                     
1619:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1620:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1621:Generated_Source\PSoC5/CapSense.c ****             
1622:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1623:Generated_Source\PSoC5/CapSense.c ****             
1624:Generated_Source\PSoC5/CapSense.c ****         }
1625:Generated_Source\PSoC5/CapSense.c ****         
1626:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1627:Generated_Source\PSoC5/CapSense.c ****         {
1628:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1629:Generated_Source\PSoC5/CapSense.c ****             
1630:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1631:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1632:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1633:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1634:Generated_Source\PSoC5/CapSense.c ****                 #else 
1635:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1636:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1637:Generated_Source\PSoC5/CapSense.c ****                 
1638:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1639:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1640:Generated_Source\PSoC5/CapSense.c ****                 
1641:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1642:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1643:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1644:Generated_Source\PSoC5/CapSense.c ****                 
1645:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1646:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1647:Generated_Source\PSoC5/CapSense.c ****                     
1648:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1649:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1650:Generated_Source\PSoC5/CapSense.c ****                 
1651:Generated_Source\PSoC5/CapSense.c ****             #else
1652:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1653:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1654:Generated_Source\PSoC5/CapSense.c ****                 
1655:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1656:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1657:Generated_Source\PSoC5/CapSense.c ****                 
1658:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1659:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1660:Generated_Source\PSoC5/CapSense.c ****             
1661:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1662:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 38


1663:Generated_Source\PSoC5/CapSense.c ****     
1664:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1665:Generated_Source\PSoC5/CapSense.c ****     
1666:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1667:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
1668:Generated_Source\PSoC5/CapSense.c ****     
1669:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1670:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1671:Generated_Source\PSoC5/CapSense.c **** 
1672:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1673:Generated_Source\PSoC5/CapSense.c **** 
1674:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1675:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
1676:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1677:Generated_Source\PSoC5/CapSense.c **** }
1678:Generated_Source\PSoC5/CapSense.c **** 
1679:Generated_Source\PSoC5/CapSense.c **** 
1680:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1681:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1682:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1683:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1684:Generated_Source\PSoC5/CapSense.c ****     *
1685:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1686:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1687:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1688:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1689:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1690:Generated_Source\PSoC5/CapSense.c ****     *
1691:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1692:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1693:Generated_Source\PSoC5/CapSense.c ****     *
1694:Generated_Source\PSoC5/CapSense.c ****     * Return:
1695:Generated_Source\PSoC5/CapSense.c ****     *  None
1696:Generated_Source\PSoC5/CapSense.c ****     *
1697:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1698:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1699:Generated_Source\PSoC5/CapSense.c ****     *
1700:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1701:Generated_Source\PSoC5/CapSense.c ****     *  No
1702:Generated_Source\PSoC5/CapSense.c ****     *
1703:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1704:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1705:Generated_Source\PSoC5/CapSense.c ****     {
 430              		.loc 1 1705 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              	.LVL35:
 435 0000 10B5     		push	{r4, lr}
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 4, -8
 438              		.cfi_offset 14, -4
1706:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1707:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 439              		.loc 1 1707 0
 440 0002 0E4A     		ldr	r2, .L38
 441 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 39


 442 0006 03F0FC03 		and	r3, r3, #252
 443 000a 1370     		strb	r3, [r2]
1708:Generated_Source\PSoC5/CapSense.c ****         
1709:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1710:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1711:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1712:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1713:Generated_Source\PSoC5/CapSense.c ****         #else
1714:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 444              		.loc 1 1714 0
 445 000c 0C4B     		ldr	r3, .L38+4
 446 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 447 0010 1B02     		lsls	r3, r3, #8
 448 0012 0C49     		ldr	r1, .L38+8
 449 0014 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1715:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 450              		.loc 1 1715 0
 451 0018 8E32     		adds	r2, r2, #142
 452 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 453 001c 1343     		orrs	r3, r3, r2
1716:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 454              		.loc 1 1716 0
 455 001e DB43     		mvns	r3, r3
 456 0020 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1717:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1718:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1719:Generated_Source\PSoC5/CapSense.c ****         
1720:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1721:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 457              		.loc 1 1721 0
 458 0024 FFF7FEFF 		bl	CapSense_DisableSensor
 459              	.LVL36:
1722:Generated_Source\PSoC5/CapSense.c ****         
1723:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1724:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1725:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 460              		.loc 1 1725 0
 461 0028 0020     		movs	r0, #0
 462 002a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 463              	.LVL37:
1726:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1727:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1728:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1729:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1730:Generated_Source\PSoC5/CapSense.c ****         #else
1731:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1732:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1733:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1734:Generated_Source\PSoC5/CapSense.c ****             
1735:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1736:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1737:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1738:Generated_Source\PSoC5/CapSense.c ****         #else
1739:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 464              		.loc 1 1739 0
 465 002e 064A     		ldr	r2, .L38+12
 466 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 40


 467 0032 43F00103 		orr	r3, r3, #1
 468 0036 1370     		strb	r3, [r2]
 469 0038 10BD     		pop	{r4, pc}
 470              	.L39:
 471 003a 00BF     		.align	2
 472              	.L38:
 473 003c 7B640040 		.word	1073767547
 474 0040 19650040 		.word	1073767705
 475 0044 00000000 		.word	CapSense_sensorRaw
 476 0048 70580040 		.word	1073764464
 477              		.cfi_endproc
 478              	.LFE14:
 479              		.size	CapSense_PostScan, .-CapSense_PostScan
 480              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 481              		.align	2
 482              		.global	CapSense_SetPrescaler
 483              		.thumb
 484              		.thumb_func
 485              		.type	CapSense_SetPrescaler, %function
 486              	CapSense_SetPrescaler:
 487              	.LFB15:
1740:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1741:Generated_Source\PSoC5/CapSense.c ****     }
1742:Generated_Source\PSoC5/CapSense.c ****     
1743:Generated_Source\PSoC5/CapSense.c **** #else
1744:Generated_Source\PSoC5/CapSense.c **** 
1745:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1746:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1747:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1748:Generated_Source\PSoC5/CapSense.c ****     *
1749:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1750:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1751:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1752:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1753:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1754:Generated_Source\PSoC5/CapSense.c ****     *
1755:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1756:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1757:Generated_Source\PSoC5/CapSense.c ****     *
1758:Generated_Source\PSoC5/CapSense.c ****     * Return:
1759:Generated_Source\PSoC5/CapSense.c ****     *  None
1760:Generated_Source\PSoC5/CapSense.c ****     *
1761:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1762:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1763:Generated_Source\PSoC5/CapSense.c ****     *
1764:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1765:Generated_Source\PSoC5/CapSense.c ****     *  No
1766:Generated_Source\PSoC5/CapSense.c ****     *
1767:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1768:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1769:Generated_Source\PSoC5/CapSense.c ****     {
1770:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1771:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1772:Generated_Source\PSoC5/CapSense.c ****         {
1773:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1774:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1775:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 41


1776:Generated_Source\PSoC5/CapSense.c ****         
1777:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1778:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1779:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1780:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1781:Generated_Source\PSoC5/CapSense.c ****         #else
1782:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1783:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1784:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1785:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1786:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1787:Generated_Source\PSoC5/CapSense.c ****         
1788:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1789:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1790:Generated_Source\PSoC5/CapSense.c ****         
1791:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1792:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1793:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1794:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1795:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1796:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1797:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1798:Generated_Source\PSoC5/CapSense.c ****         #else
1799:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1800:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1801:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1802:Generated_Source\PSoC5/CapSense.c ****         
1803:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1804:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1805:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1806:Generated_Source\PSoC5/CapSense.c ****         #else
1807:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1808:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1809:Generated_Source\PSoC5/CapSense.c ****     }
1810:Generated_Source\PSoC5/CapSense.c ****     
1811:Generated_Source\PSoC5/CapSense.c ****     
1812:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1813:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1814:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1815:Generated_Source\PSoC5/CapSense.c ****     *
1816:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1817:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1818:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1819:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1820:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1821:Generated_Source\PSoC5/CapSense.c ****     *
1822:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1823:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1824:Generated_Source\PSoC5/CapSense.c ****     *
1825:Generated_Source\PSoC5/CapSense.c ****     * Return:
1826:Generated_Source\PSoC5/CapSense.c ****     *  None
1827:Generated_Source\PSoC5/CapSense.c ****     *
1828:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1829:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1830:Generated_Source\PSoC5/CapSense.c ****     *
1831:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1832:Generated_Source\PSoC5/CapSense.c ****     *  No
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 42


1833:Generated_Source\PSoC5/CapSense.c ****     *
1834:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1835:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1836:Generated_Source\PSoC5/CapSense.c ****     {
1837:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1838:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1839:Generated_Source\PSoC5/CapSense.c ****         {
1840:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1841:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1842:Generated_Source\PSoC5/CapSense.c ****         }
1843:Generated_Source\PSoC5/CapSense.c ****         
1844:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1845:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1846:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1847:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1848:Generated_Source\PSoC5/CapSense.c ****         #else
1849:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1850:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1851:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1852:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1853:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1854:Generated_Source\PSoC5/CapSense.c ****         
1855:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1856:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1857:Generated_Source\PSoC5/CapSense.c ****         
1858:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1859:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1860:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1861:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1862:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1863:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1864:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1865:Generated_Source\PSoC5/CapSense.c ****         #else
1866:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1867:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1868:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1869:Generated_Source\PSoC5/CapSense.c **** 
1870:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1871:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1872:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1873:Generated_Source\PSoC5/CapSense.c ****         #else
1874:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1875:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1876:Generated_Source\PSoC5/CapSense.c ****     }
1877:Generated_Source\PSoC5/CapSense.c ****     
1878:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1879:Generated_Source\PSoC5/CapSense.c **** 
1880:Generated_Source\PSoC5/CapSense.c **** 
1881:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1882:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1883:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1884:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1885:Generated_Source\PSoC5/CapSense.c ****     *
1886:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1887:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1888:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1889:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 43


1890:Generated_Source\PSoC5/CapSense.c ****     *
1891:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1892:Generated_Source\PSoC5/CapSense.c ****     *  None
1893:Generated_Source\PSoC5/CapSense.c ****     *
1894:Generated_Source\PSoC5/CapSense.c ****     * Return:
1895:Generated_Source\PSoC5/CapSense.c ****     *  None
1896:Generated_Source\PSoC5/CapSense.c ****     *
1897:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1898:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1899:Generated_Source\PSoC5/CapSense.c ****     {
1900:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1901:Generated_Source\PSoC5/CapSense.c ****         
1902:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1903:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1904:Generated_Source\PSoC5/CapSense.c ****         {
1905:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1906:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1907:Generated_Source\PSoC5/CapSense.c ****         }
1908:Generated_Source\PSoC5/CapSense.c ****     }
1909:Generated_Source\PSoC5/CapSense.c ****     
1910:Generated_Source\PSoC5/CapSense.c ****     
1911:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1912:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1913:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1914:Generated_Source\PSoC5/CapSense.c ****     *
1915:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1916:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1917:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1918:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1919:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1920:Generated_Source\PSoC5/CapSense.c ****     * 
1921:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1922:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1923:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1924:Generated_Source\PSoC5/CapSense.c ****     *
1925:Generated_Source\PSoC5/CapSense.c ****     * Return:
1926:Generated_Source\PSoC5/CapSense.c ****     *  None
1927:Generated_Source\PSoC5/CapSense.c ****     *
1928:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1929:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1930:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1931:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1932:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1933:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1934:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1935:Generated_Source\PSoC5/CapSense.c ****     *
1936:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1937:Generated_Source\PSoC5/CapSense.c ****     *  No
1938:Generated_Source\PSoC5/CapSense.c ****     *
1939:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1940:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1941:Generated_Source\PSoC5/CapSense.c ****     {
1942:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1943:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1944:Generated_Source\PSoC5/CapSense.c ****             
1945:Generated_Source\PSoC5/CapSense.c ****         #else
1946:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 44


1947:Generated_Source\PSoC5/CapSense.c ****             {
1948:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1949:Generated_Source\PSoC5/CapSense.c ****             }
1950:Generated_Source\PSoC5/CapSense.c ****             else
1951:Generated_Source\PSoC5/CapSense.c ****             {
1952:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1953:Generated_Source\PSoC5/CapSense.c ****             }
1954:Generated_Source\PSoC5/CapSense.c ****     
1955:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1956:Generated_Source\PSoC5/CapSense.c ****     }
1957:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1958:Generated_Source\PSoC5/CapSense.c **** 
1959:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1960:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1961:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1962:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1963:Generated_Source\PSoC5/CapSense.c ****     *
1964:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1965:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1966:Generated_Source\PSoC5/CapSense.c ****     *
1967:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1968:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1969:Generated_Source\PSoC5/CapSense.c ****     *
1970:Generated_Source\PSoC5/CapSense.c ****     * Return:
1971:Generated_Source\PSoC5/CapSense.c ****     *  None
1972:Generated_Source\PSoC5/CapSense.c ****     *
1973:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1974:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1975:Generated_Source\PSoC5/CapSense.c ****     {
 488              		.loc 1 1975 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493              	.LVL38:
1976:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1977:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1978:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 494              		.loc 1 1978 0
 495 0000 024B     		ldr	r3, .L41
 496 0002 1870     		strb	r0, [r3]
1979:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 497              		.loc 1 1979 0
 498 0004 4008     		lsrs	r0, r0, #1
 499              	.LVL39:
 500 0006 1033     		adds	r3, r3, #16
 501              	.LVL40:
 502 0008 1870     		strb	r0, [r3]
 503              	.LVL41:
 504 000a 7047     		bx	lr
 505              	.L42:
 506              		.align	2
 507              	.L41:
 508 000c 2B640040 		.word	1073767467
 509              		.cfi_endproc
 510              	.LFE15:
 511              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 45


 512              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 513              		.align	2
 514              		.global	CapSense_SetScanSlotSettings
 515              		.thumb
 516              		.thumb_func
 517              		.type	CapSense_SetScanSlotSettings, %function
 518              	CapSense_SetScanSlotSettings:
 519              	.LFB5:
 930:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 520              		.loc 1 930 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              	.LVL42:
 525 0000 38B5     		push	{r3, r4, r5, lr}
 526              		.cfi_def_cfa_offset 16
 527              		.cfi_offset 3, -16
 528              		.cfi_offset 4, -12
 529              		.cfi_offset 5, -8
 530              		.cfi_offset 14, -4
 935:Generated_Source\PSoC5/CapSense.c ****         
 531              		.loc 1 935 0
 532 0002 094B     		ldr	r3, .L45
 533 0004 0344     		add	r3, r3, r0
 534 0006 93F8C050 		ldrb	r5, [r3, #192]	@ zero_extendqisi2
 535              	.LVL43:
 939:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 536              		.loc 1 939 0
 537 000a 084C     		ldr	r4, .L45+4
 538 000c 2044     		add	r0, r0, r4
 539              	.LVL44:
 540 000e 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 541 0010 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 542              	.LVL45:
 947:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 543              		.loc 1 947 0
 544 0014 2544     		add	r5, r5, r4
 545              	.LVL46:
 546 0016 95F82020 		ldrb	r2, [r5, #32]	@ zero_extendqisi2
 547 001a 054B     		ldr	r3, .L45+8
 548 001c 1A70     		strb	r2, [r3]
 954:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 549              		.loc 1 954 0
 550 001e 94F83A00 		ldrb	r0, [r4, #58]	@ zero_extendqisi2
 551 0022 FFF7FEFF 		bl	CapSense_SetPrescaler
 552              	.LVL47:
 553 0026 38BD     		pop	{r3, r4, r5, pc}
 554              	.LVL48:
 555              	.L46:
 556              		.align	2
 557              	.L45:
 558 0028 00000000 		.word	.LANCHOR1
 559 002c 00000000 		.word	.LANCHOR0
 560 0030 5A640040 		.word	1073767514
 561              		.cfi_endproc
 562              	.LFE5:
 563              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 46


 564              		.section	.text.CapSense_PreScan,"ax",%progbits
 565              		.align	2
 566              		.global	CapSense_PreScan
 567              		.thumb
 568              		.thumb_func
 569              		.type	CapSense_PreScan, %function
 570              	CapSense_PreScan:
 571              	.LFB13:
1537:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
 572              		.loc 1 1537 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              	.LVL49:
 577 0000 38B5     		push	{r3, r4, r5, lr}
 578              		.cfi_def_cfa_offset 16
 579              		.cfi_offset 3, -16
 580              		.cfi_offset 4, -12
 581              		.cfi_offset 5, -8
 582              		.cfi_offset 14, -4
 583 0002 0546     		mov	r5, r0
1539:Generated_Source\PSoC5/CapSense.c ****     
 584              		.loc 1 1539 0
 585 0004 FFF7FEFF 		bl	CapSense_SetScanSlotSettings
 586              	.LVL50:
1551:Generated_Source\PSoC5/CapSense.c ****         
 587              		.loc 1 1551 0
 588 0008 084C     		ldr	r4, .L49
 589 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 590 000c 43F00103 		orr	r3, r3, #1
 591 0010 2370     		strb	r3, [r4]
1559:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
 592              		.loc 1 1559 0
 593 0012 074A     		ldr	r2, .L49+4
 594 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 595 0016 03F0FE03 		and	r3, r3, #254
 596 001a 1370     		strb	r3, [r2]
1563:Generated_Source\PSoC5/CapSense.c ****             
 597              		.loc 1 1563 0
 598 001c 2846     		mov	r0, r5
 599 001e FFF7FEFF 		bl	CapSense_EnableSensor
 600              	.LVL51:
1667:Generated_Source\PSoC5/CapSense.c ****     
 601              		.loc 1 1667 0
 602 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 603 0024 43F00203 		orr	r3, r3, #2
 604 0028 2370     		strb	r3, [r4]
 605 002a 38BD     		pop	{r3, r4, r5, pc}
 606              	.L50:
 607              		.align	2
 608              	.L49:
 609 002c 7B640040 		.word	1073767547
 610 0030 70580040 		.word	1073764464
 611              		.cfi_endproc
 612              	.LFE13:
 613              		.size	CapSense_PreScan, .-CapSense_PreScan
 614              		.section	.text.CapSense_ScanSensor,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 47


 615              		.align	2
 616              		.global	CapSense_ScanSensor
 617              		.thumb
 618              		.thumb_func
 619              		.type	CapSense_ScanSensor, %function
 620              	CapSense_ScanSensor:
 621              	.LFB6:
1042:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 622              		.loc 1 1042 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              	.LVL52:
 627 0000 08B5     		push	{r3, lr}
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 3, -8
 630              		.cfi_offset 14, -4
1044:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 631              		.loc 1 1044 0
 632 0002 054B     		ldr	r3, .L53
 633 0004 0022     		movs	r2, #0
 634 0006 1A70     		strb	r2, [r3]
1045:Generated_Source\PSoC5/CapSense.c ****     
 635              		.loc 1 1045 0
 636 0008 044A     		ldr	r2, .L53+4
 637 000a 1070     		strb	r0, [r2]
1049:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 638              		.loc 1 1049 0
 639 000c 8122     		movs	r2, #129
 640 000e 1A70     		strb	r2, [r3]
1050:Generated_Source\PSoC5/CapSense.c ****         
 641              		.loc 1 1050 0
 642 0010 FFF7FEFF 		bl	CapSense_PreScan
 643              	.LVL53:
 644 0014 08BD     		pop	{r3, pc}
 645              	.L54:
 646 0016 00BF     		.align	2
 647              	.L53:
 648 0018 00000000 		.word	CapSense_csv
 649 001c 00000000 		.word	CapSense_sensorIndex
 650              		.cfi_endproc
 651              	.LFE6:
 652              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 653              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 654              		.align	2
 655              		.global	CapSense_ScanEnabledWidgets
 656              		.thumb
 657              		.thumb_func
 658              		.type	CapSense_ScanEnabledWidgets, %function
 659              	CapSense_ScanEnabledWidgets:
 660              	.LFB7:
1119:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 661              		.loc 1 1119 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 48


 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 4, -8
 668              		.cfi_offset 14, -4
1121:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 669              		.loc 1 1121 0
 670 0002 0022     		movs	r2, #0
 671 0004 0A4B     		ldr	r3, .L58
 672 0006 1A70     		strb	r2, [r3]
1122:Generated_Source\PSoC5/CapSense.c ****     
 673              		.loc 1 1122 0
 674 0008 0A4C     		ldr	r4, .L58+4
 675 000a FF23     		movs	r3, #255
 676 000c 2370     		strb	r3, [r4]
1126:Generated_Source\PSoC5/CapSense.c **** 
 677              		.loc 1 1126 0
 678 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 679 0010 FFF7FEFF 		bl	CapSense_FindNextSensor
 680              	.LVL54:
 681 0014 2070     		strb	r0, [r4]
1129:Generated_Source\PSoC5/CapSense.c ****         {
 682              		.loc 1 1129 0
 683 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 684 0018 DBB2     		uxtb	r3, r3
 685 001a 192B     		cmp	r3, #25
 686 001c 07D8     		bhi	.L55
1131:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 687              		.loc 1 1131 0
 688 001e 044A     		ldr	r2, .L58
 689 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 690 0022 43F00103 		orr	r3, r3, #1
 691 0026 1370     		strb	r3, [r2]
1132:Generated_Source\PSoC5/CapSense.c ****         }
 692              		.loc 1 1132 0
 693 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 694 002a FFF7FEFF 		bl	CapSense_PreScan
 695              	.LVL55:
 696              	.L55:
 697 002e 10BD     		pop	{r4, pc}
 698              	.L59:
 699              		.align	2
 700              	.L58:
 701 0030 00000000 		.word	CapSense_csv
 702 0034 00000000 		.word	CapSense_sensorIndex
 703              		.cfi_endproc
 704              	.LFE7:
 705              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 706              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 707              		.align	2
 708              		.global	CapSense_GetPrescaler
 709              		.thumb
 710              		.thumb_func
 711              		.type	CapSense_GetPrescaler, %function
 712              	CapSense_GetPrescaler:
 713              	.LFB16:
1980:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1981:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1982:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 49


1983:Generated_Source\PSoC5/CapSense.c ****         #else
1984:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1985:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1986:Generated_Source\PSoC5/CapSense.c ****     }
1987:Generated_Source\PSoC5/CapSense.c **** 
1988:Generated_Source\PSoC5/CapSense.c **** 
1989:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1990:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1991:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1992:Generated_Source\PSoC5/CapSense.c ****     *
1993:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1994:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1995:Generated_Source\PSoC5/CapSense.c ****     *
1996:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1997:Generated_Source\PSoC5/CapSense.c ****     *  None
1998:Generated_Source\PSoC5/CapSense.c ****     *
1999:Generated_Source\PSoC5/CapSense.c ****     * Return:
2000:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
2001:Generated_Source\PSoC5/CapSense.c ****     *
2002:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
2003:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
2004:Generated_Source\PSoC5/CapSense.c ****     {
 714              		.loc 1 2004 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719              	.LVL56:
2005:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
2006:Generated_Source\PSoC5/CapSense.c **** 
2007:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
2008:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
2009:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 720              		.loc 1 2009 0
 721 0000 014B     		ldr	r3, .L61
 722 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 723              	.LVL57:
2010:Generated_Source\PSoC5/CapSense.c ****             
2011:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
2012:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
2013:Generated_Source\PSoC5/CapSense.c ****             
2014:Generated_Source\PSoC5/CapSense.c ****         #else
2015:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
2016:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
2017:Generated_Source\PSoC5/CapSense.c ****         
2018:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
2019:Generated_Source\PSoC5/CapSense.c ****     }
 724              		.loc 1 2019 0
 725 0004 7047     		bx	lr
 726              	.L62:
 727 0006 00BF     		.align	2
 728              	.L61:
 729 0008 2B640040 		.word	1073767467
 730              		.cfi_endproc
 731              	.LFE16:
 732              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 733              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 50


 734              		.align	2
 735              		.global	CapSense_SetScanSpeed
 736              		.thumb
 737              		.thumb_func
 738              		.type	CapSense_SetScanSpeed, %function
 739              	CapSense_SetScanSpeed:
 740              	.LFB17:
2020:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
2021:Generated_Source\PSoC5/CapSense.c **** 
2022:Generated_Source\PSoC5/CapSense.c **** 
2023:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
2024:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
2025:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
2026:Generated_Source\PSoC5/CapSense.c **** *
2027:Generated_Source\PSoC5/CapSense.c **** * Summary:
2028:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
2029:Generated_Source\PSoC5/CapSense.c **** *
2030:Generated_Source\PSoC5/CapSense.c **** * Parameters:
2031:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
2032:Generated_Source\PSoC5/CapSense.c **** *
2033:Generated_Source\PSoC5/CapSense.c **** * Return:
2034:Generated_Source\PSoC5/CapSense.c **** *  None
2035:Generated_Source\PSoC5/CapSense.c **** *
2036:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
2037:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
2038:Generated_Source\PSoC5/CapSense.c **** {
 741              		.loc 1 2038 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746              	.LVL58:
2039:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 747              		.loc 1 2039 0
 748 0000 014B     		ldr	r3, .L64
 749 0002 1870     		strb	r0, [r3]
 750 0004 7047     		bx	lr
 751              	.L65:
 752 0006 00BF     		.align	2
 753              	.L64:
 754 0008 89640040 		.word	1073767561
 755              		.cfi_endproc
 756              	.LFE17:
 757              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 758              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 759              		.align	2
 760              		.global	CapSense_SetAnalogSwitchesSource
 761              		.thumb
 762              		.thumb_func
 763              		.type	CapSense_SetAnalogSwitchesSource, %function
 764              	CapSense_SetAnalogSwitchesSource:
 765              	.LFB18:
2040:Generated_Source\PSoC5/CapSense.c **** }
2041:Generated_Source\PSoC5/CapSense.c **** 
2042:Generated_Source\PSoC5/CapSense.c **** 
2043:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
2044:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 51


2045:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
2046:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
2047:Generated_Source\PSoC5/CapSense.c ****     *
2048:Generated_Source\PSoC5/CapSense.c ****     * Summary:
2049:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
2050:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
2051:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
2052:Generated_Source\PSoC5/CapSense.c ****     *
2053:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
2054:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
2055:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
2056:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
2057:Generated_Source\PSoC5/CapSense.c ****     *
2058:Generated_Source\PSoC5/CapSense.c ****     * Return:
2059:Generated_Source\PSoC5/CapSense.c ****     *  None
2060:Generated_Source\PSoC5/CapSense.c ****     *
2061:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
2062:Generated_Source\PSoC5/CapSense.c ****     *  No
2063:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
2064:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
2065:Generated_Source\PSoC5/CapSense.c ****                       
2066:Generated_Source\PSoC5/CapSense.c ****     {
 766              		.loc 1 2066 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771              	.LVL59:
2067:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 772              		.loc 1 2067 0
 773 0000 0128     		cmp	r0, #1
 774 0002 05D1     		bne	.L67
2068:Generated_Source\PSoC5/CapSense.c ****         {
2069:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 775              		.loc 1 2069 0
 776 0004 054A     		ldr	r2, .L69
 777 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 778 0008 03F0EF03 		and	r3, r3, #239
 779 000c 1370     		strb	r3, [r2]
 780 000e 7047     		bx	lr
 781              	.L67:
2070:Generated_Source\PSoC5/CapSense.c ****         }
2071:Generated_Source\PSoC5/CapSense.c ****         else
2072:Generated_Source\PSoC5/CapSense.c ****         {
2073:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 782              		.loc 1 2073 0
 783 0010 024A     		ldr	r2, .L69
 784 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 785 0014 43F01003 		orr	r3, r3, #16
 786 0018 1370     		strb	r3, [r2]
 787 001a 7047     		bx	lr
 788              	.L70:
 789              		.align	2
 790              	.L69:
 791 001c 7B640040 		.word	1073767547
 792              		.cfi_endproc
 793              	.LFE18:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 52


 794              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 795              		.section	.text.CapSense_Init,"ax",%progbits
 796              		.align	2
 797              		.global	CapSense_Init
 798              		.thumb
 799              		.thumb_func
 800              		.type	CapSense_Init, %function
 801              	CapSense_Init:
 802              	.LFB0:
 223:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 803              		.loc 1 223 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807 0000 38B5     		push	{r3, r4, r5, lr}
 808              		.cfi_def_cfa_offset 16
 809              		.cfi_offset 3, -16
 810              		.cfi_offset 4, -12
 811              		.cfi_offset 5, -8
 812              		.cfi_offset 14, -4
 237:Generated_Source\PSoC5/CapSense.c **** 
 813              		.loc 1 237 0
 814 0002 FFF7FEFF 		bl	CapSense_ClearSensors
 815              	.LVL60:
 253:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 816              		.loc 1 253 0
 817 0006 0220     		movs	r0, #2
 818 0008 FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 819              	.LVL61:
 269:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 820              		.loc 1 269 0
 821 000c FFF7FEFF 		bl	CyEnterCriticalSection
 822              	.LVL62:
 270:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 823              		.loc 1 270 0
 824 0010 2E4A     		ldr	r2, .L73
 825 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 826 0014 43F00303 		orr	r3, r3, #3
 827 0018 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 828              		.loc 1 271 0
 829 001a 0132     		adds	r2, r2, #1
 830 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 831 001e 43F00303 		orr	r3, r3, #3
 832 0022 1370     		strb	r3, [r2]
 272:Generated_Source\PSoC5/CapSense.c ****         
 833              		.loc 1 272 0
 834 0024 FFF7FEFF 		bl	CyExitCriticalSection
 835              	.LVL63:
 275:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 836              		.loc 1 275 0
 837 0028 4FF43442 		mov	r2, #46080
 838 002c 284B     		ldr	r3, .L73+4
 839 002e 1A80     		strh	r2, [r3]	@ movhi
 277:Generated_Source\PSoC5/CapSense.c ****                 
 840              		.loc 1 277 0
 841 0030 4FF6FF75 		movw	r5, #65535
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 53


 842 0034 2033     		adds	r3, r3, #32
 843 0036 1D80     		strh	r5, [r3]	@ movhi
 297:Generated_Source\PSoC5/CapSense.c ****     
 844              		.loc 1 297 0
 845 0038 0724     		movs	r4, #7
 846 003a 4133     		adds	r3, r3, #65
 847 003c 1C70     		strb	r4, [r3]
 313:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 848              		.loc 1 313 0
 849 003e FFF7FEFF 		bl	CyEnterCriticalSection
 850              	.LVL64:
 314:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 851              		.loc 1 314 0
 852 0042 244A     		ldr	r2, .L73+8
 853 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 854 0046 43F00303 		orr	r3, r3, #3
 855 004a 1370     		strb	r3, [r2]
 315:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 856              		.loc 1 315 0
 857 004c FF32     		adds	r2, r2, #255
 858 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 859 0050 43F00303 		orr	r3, r3, #3
 860 0054 1370     		strb	r3, [r2]
 316:Generated_Source\PSoC5/CapSense.c ****         
 861              		.loc 1 316 0
 862 0056 FFF7FEFF 		bl	CyExitCriticalSection
 863              	.LVL65:
 319:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 864              		.loc 1 319 0
 865 005a FF23     		movs	r3, #255
 866 005c 1E4A     		ldr	r2, .L73+12
 867 005e 1570     		strb	r5, [r2]
 320:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 868              		.loc 1 320 0
 869 0060 2032     		adds	r2, r2, #32
 870 0062 1370     		strb	r3, [r2]
 321:Generated_Source\PSoC5/CapSense.c ****         
 871              		.loc 1 321 0
 872 0064 403A     		subs	r2, r2, #64
 873 0066 1370     		strb	r3, [r2]
 324:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 874              		.loc 1 324 0
 875 0068 02F21F12 		addw	r2, r2, #287
 876 006c 1370     		strb	r3, [r2]
 325:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 877              		.loc 1 325 0
 878 006e 3032     		adds	r2, r2, #48
 879 0070 1370     		strb	r3, [r2]
 326:Generated_Source\PSoC5/CapSense.c ****         
 880              		.loc 1 326 0
 881 0072 103A     		subs	r2, r2, #16
 882 0074 1370     		strb	r3, [r2]
 365:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 883              		.loc 1 365 0
 884 0076 0222     		movs	r2, #2
 885 0078 03F1E023 		add	r3, r3, #-536813568
 886 007c 8133     		adds	r3, r3, #129
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 54


 887 007e 1A60     		str	r2, [r3]
 366:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 888              		.loc 1 366 0
 889 0080 1649     		ldr	r1, .L73+16
 890 0082 0120     		movs	r0, #1
 891 0084 FFF7FEFF 		bl	CyIntSetVector
 892              	.LVL66:
 367:Generated_Source\PSoC5/CapSense.c ****     
 893              		.loc 1 367 0
 894 0088 2146     		mov	r1, r4
 895 008a 0120     		movs	r0, #1
 896 008c FFF7FEFF 		bl	CyIntSetPriority
 897              	.LVL67:
 376:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 898              		.loc 1 376 0
 899 0090 FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 900              	.LVL68:
 377:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 901              		.loc 1 377 0
 902 0094 1A20     		movs	r0, #26
 903 0096 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 904              	.LVL69:
 378:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 905              		.loc 1 378 0
 906 009a 1B20     		movs	r0, #27
 907 009c FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 908              	.LVL70:
 380:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 909              		.loc 1 380 0
 910 00a0 1C20     		movs	r0, #28
 911 00a2 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 912              	.LVL71:
 398:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 913              		.loc 1 398 0
 914 00a6 0E4A     		ldr	r2, .L73+20
 915 00a8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 916 00aa 43F00403 		orr	r3, r3, #4
 917 00ae 1370     		strb	r3, [r2]
 404:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 918              		.loc 1 404 0
 919 00b0 FFF7FEFF 		bl	CapSense_CompCH0_Init
 920              	.LVL72:
 406:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 921              		.loc 1 406 0
 922 00b4 FFF7FEFF 		bl	CapSense_IdacCH0_Init
 923              	.LVL73:
 407:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 924              		.loc 1 407 0
 925 00b8 0020     		movs	r0, #0
 926 00ba FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 927              	.LVL74:
 408:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 928              		.loc 1 408 0
 929 00be 0420     		movs	r0, #4
 930 00c0 FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 931              	.LVL75:
 409:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 55


 932              		.loc 1 409 0
 933 00c4 0020     		movs	r0, #0
 934 00c6 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 935              	.LVL76:
 936 00ca 38BD     		pop	{r3, r4, r5, pc}
 937              	.L74:
 938              		.align	2
 939              	.L73:
 940 00cc 98640040 		.word	1073767576
 941 00d0 28640040 		.word	1073767464
 942 00d4 9A640040 		.word	1073767578
 943 00d8 2A640040 		.word	1073767466
 944 00dc 00000000 		.word	CapSense_IsrCH0_ISR
 945 00e0 7B640040 		.word	1073767547
 946              		.cfi_endproc
 947              	.LFE0:
 948              		.size	CapSense_Init, .-CapSense_Init
 949              		.section	.text.CapSense_Start,"ax",%progbits
 950              		.align	2
 951              		.global	CapSense_Start
 952              		.thumb
 953              		.thumb_func
 954              		.type	CapSense_Start, %function
 955              	CapSense_Start:
 956              	.LFB2:
 601:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 957              		.loc 1 601 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961 0000 08B5     		push	{r3, lr}
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 3, -8
 964              		.cfi_offset 14, -4
 602:Generated_Source\PSoC5/CapSense.c ****     {
 965              		.loc 1 602 0
 966 0002 054B     		ldr	r3, .L78
 967 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 968 0006 23B9     		cbnz	r3, .L76
 604:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 969              		.loc 1 604 0
 970 0008 FFF7FEFF 		bl	CapSense_Init
 971              	.LVL77:
 605:Generated_Source\PSoC5/CapSense.c ****     }
 972              		.loc 1 605 0
 973 000c 0122     		movs	r2, #1
 974 000e 024B     		ldr	r3, .L78
 975 0010 1A70     		strb	r2, [r3]
 976              	.L76:
 607:Generated_Source\PSoC5/CapSense.c ****     
 977              		.loc 1 607 0
 978 0012 FFF7FEFF 		bl	CapSense_Enable
 979              	.LVL78:
 980 0016 08BD     		pop	{r3, pc}
 981              	.L79:
 982              		.align	2
 983              	.L78:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 56


 984 0018 00000000 		.word	.LANCHOR2
 985              		.cfi_endproc
 986              	.LFE2:
 987              		.size	CapSense_Start, .-CapSense_Start
 988              		.global	CapSense_widgetNumber
 989              		.global	CapSense_analogSwitchDivider
 990              		.global	CapSense_widgetResolution
 991              		.global	CapSense_idacSettings
 992              		.global	CapSense_csTable
 993              		.global	CapSense_maskTable
 994              		.global	CapSense_portTable
 995              		.global	CapSense_pcTable
 996              		.global	CapSense_sensorEnableMask
 997              		.comm	CapSense_sensorRaw,52,4
 998              		.comm	CapSense_sensorIndex,1,1
 999              		.comm	CapSense_csv,1,1
 1000              		.section	.rodata
 1001              		.align	2
 1002              		.set	.LANCHOR1,. + 0
 1003              		.type	CapSense_portTable, %object
 1004              		.size	CapSense_portTable, 26
 1005              	CapSense_portTable:
 1006 0000 03       		.byte	3
 1007 0001 03       		.byte	3
 1008 0002 03       		.byte	3
 1009 0003 03       		.byte	3
 1010 0004 03       		.byte	3
 1011 0005 01       		.byte	1
 1012 0006 01       		.byte	1
 1013 0007 01       		.byte	1
 1014 0008 01       		.byte	1
 1015 0009 00       		.byte	0
 1016 000a 00       		.byte	0
 1017 000b 00       		.byte	0
 1018 000c 02       		.byte	2
 1019 000d 02       		.byte	2
 1020 000e 02       		.byte	2
 1021 000f 02       		.byte	2
 1022 0010 02       		.byte	2
 1023 0011 01       		.byte	1
 1024 0012 03       		.byte	3
 1025 0013 03       		.byte	3
 1026 0014 00       		.byte	0
 1027 0015 00       		.byte	0
 1028 0016 02       		.byte	2
 1029 0017 0F       		.byte	15
 1030 0018 0F       		.byte	15
 1031 0019 0F       		.byte	15
 1032 001a 0000     		.space	2
 1033              		.type	CapSense_maskTable, %object
 1034              		.size	CapSense_maskTable, 26
 1035              	CapSense_maskTable:
 1036 001c 01       		.byte	1
 1037 001d 02       		.byte	2
 1038 001e 08       		.byte	8
 1039 001f 10       		.byte	16
 1040 0020 20       		.byte	32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 57


 1041 0021 10       		.byte	16
 1042 0022 20       		.byte	32
 1043 0023 40       		.byte	64
 1044 0024 80       		.byte	-128
 1045 0025 20       		.byte	32
 1046 0026 40       		.byte	64
 1047 0027 80       		.byte	-128
 1048 0028 08       		.byte	8
 1049 0029 10       		.byte	16
 1050 002a 20       		.byte	32
 1051 002b 40       		.byte	64
 1052 002c 80       		.byte	-128
 1053 002d 04       		.byte	4
 1054 002e 40       		.byte	64
 1055 002f 80       		.byte	-128
 1056 0030 01       		.byte	1
 1057 0031 02       		.byte	2
 1058 0032 01       		.byte	1
 1059 0033 01       		.byte	1
 1060 0034 02       		.byte	2
 1061 0035 20       		.byte	32
 1062 0036 0000     		.space	2
 1063              		.type	CapSense_pcTable, %object
 1064              		.size	CapSense_pcTable, 104
 1065              	CapSense_pcTable:
 1066 0038 18500040 		.word	1073762328
 1067 003c 19500040 		.word	1073762329
 1068 0040 1B500040 		.word	1073762331
 1069 0044 1C500040 		.word	1073762332
 1070 0048 1D500040 		.word	1073762333
 1071 004c 0C500040 		.word	1073762316
 1072 0050 0D500040 		.word	1073762317
 1073 0054 0E500040 		.word	1073762318
 1074 0058 0F500040 		.word	1073762319
 1075 005c 05500040 		.word	1073762309
 1076 0060 06500040 		.word	1073762310
 1077 0064 07500040 		.word	1073762311
 1078 0068 13500040 		.word	1073762323
 1079 006c 14500040 		.word	1073762324
 1080 0070 15500040 		.word	1073762325
 1081 0074 16500040 		.word	1073762326
 1082 0078 17500040 		.word	1073762327
 1083 007c 0A500040 		.word	1073762314
 1084 0080 1E500040 		.word	1073762334
 1085 0084 1F500040 		.word	1073762335
 1086 0088 00500040 		.word	1073762304
 1087 008c 01500040 		.word	1073762305
 1088 0090 10500040 		.word	1073762320
 1089 0094 78500040 		.word	1073762424
 1090 0098 79500040 		.word	1073762425
 1091 009c 7D500040 		.word	1073762429
 1092              		.type	CapSense_csTable, %object
 1093              		.size	CapSense_csTable, 32
 1094              	CapSense_csTable:
 1095 00a0 06520040 		.word	1073762822
 1096 00a4 0E520040 		.word	1073762830
 1097 00a8 16520040 		.word	1073762838
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 58


 1098 00ac 1E520040 		.word	1073762846
 1099 00b0 26520040 		.word	1073762854
 1100 00b4 2E520040 		.word	1073762862
 1101 00b8 36520040 		.word	1073762870
 1102 00bc 7E520040 		.word	1073762942
 1103              		.type	CapSense_widgetNumber, %object
 1104              		.size	CapSense_widgetNumber, 26
 1105              	CapSense_widgetNumber:
 1106 00c0 00       		.byte	0
 1107 00c1 01       		.byte	1
 1108 00c2 02       		.byte	2
 1109 00c3 03       		.byte	3
 1110 00c4 04       		.byte	4
 1111 00c5 05       		.byte	5
 1112 00c6 06       		.byte	6
 1113 00c7 07       		.byte	7
 1114 00c8 08       		.byte	8
 1115 00c9 09       		.byte	9
 1116 00ca 0A       		.byte	10
 1117 00cb 0B       		.byte	11
 1118 00cc 0C       		.byte	12
 1119 00cd 0D       		.byte	13
 1120 00ce 0E       		.byte	14
 1121 00cf 0F       		.byte	15
 1122 00d0 10       		.byte	16
 1123 00d1 11       		.byte	17
 1124 00d2 12       		.byte	18
 1125 00d3 13       		.byte	19
 1126 00d4 14       		.byte	20
 1127 00d5 15       		.byte	21
 1128 00d6 16       		.byte	22
 1129 00d7 17       		.byte	23
 1130 00d8 18       		.byte	24
 1131 00d9 19       		.byte	25
 1132              		.data
 1133              		.align	2
 1134              		.set	.LANCHOR0,. + 0
 1135              		.type	CapSense_sensorEnableMask, %object
 1136              		.size	CapSense_sensorEnableMask, 4
 1137              	CapSense_sensorEnableMask:
 1138 0000 FF       		.byte	-1
 1139 0001 FF       		.byte	-1
 1140 0002 FF       		.byte	-1
 1141 0003 03       		.byte	3
 1142              		.type	CapSense_idacSettings, %object
 1143              		.size	CapSense_idacSettings, 26
 1144              	CapSense_idacSettings:
 1145 0004 C8       		.byte	-56
 1146 0005 C8       		.byte	-56
 1147 0006 C8       		.byte	-56
 1148 0007 C8       		.byte	-56
 1149 0008 C8       		.byte	-56
 1150 0009 C8       		.byte	-56
 1151 000a C8       		.byte	-56
 1152 000b C8       		.byte	-56
 1153 000c C8       		.byte	-56
 1154 000d C8       		.byte	-56
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 59


 1155 000e C8       		.byte	-56
 1156 000f C8       		.byte	-56
 1157 0010 C8       		.byte	-56
 1158 0011 C8       		.byte	-56
 1159 0012 C8       		.byte	-56
 1160 0013 C8       		.byte	-56
 1161 0014 C8       		.byte	-56
 1162 0015 C8       		.byte	-56
 1163 0016 C8       		.byte	-56
 1164 0017 C8       		.byte	-56
 1165 0018 C8       		.byte	-56
 1166 0019 C8       		.byte	-56
 1167 001a C8       		.byte	-56
 1168 001b C8       		.byte	-56
 1169 001c C8       		.byte	-56
 1170 001d C8       		.byte	-56
 1171 001e 0000     		.space	2
 1172              		.type	CapSense_widgetResolution, %object
 1173              		.size	CapSense_widgetResolution, 26
 1174              	CapSense_widgetResolution:
 1175 0020 03       		.byte	3
 1176 0021 03       		.byte	3
 1177 0022 03       		.byte	3
 1178 0023 03       		.byte	3
 1179 0024 03       		.byte	3
 1180 0025 03       		.byte	3
 1181 0026 03       		.byte	3
 1182 0027 03       		.byte	3
 1183 0028 03       		.byte	3
 1184 0029 03       		.byte	3
 1185 002a 03       		.byte	3
 1186 002b 03       		.byte	3
 1187 002c 03       		.byte	3
 1188 002d 03       		.byte	3
 1189 002e 03       		.byte	3
 1190 002f 03       		.byte	3
 1191 0030 03       		.byte	3
 1192 0031 03       		.byte	3
 1193 0032 03       		.byte	3
 1194 0033 03       		.byte	3
 1195 0034 03       		.byte	3
 1196 0035 03       		.byte	3
 1197 0036 03       		.byte	3
 1198 0037 03       		.byte	3
 1199 0038 03       		.byte	3
 1200 0039 03       		.byte	3
 1201              		.type	CapSense_analogSwitchDivider, %object
 1202              		.size	CapSense_analogSwitchDivider, 1
 1203              	CapSense_analogSwitchDivider:
 1204 003a 0B       		.byte	11
 1205              		.bss
 1206              		.set	.LANCHOR2,. + 0
 1207              		.type	CapSense_initVar, %object
 1208              		.size	CapSense_initVar, 1
 1209              	CapSense_initVar:
 1210 0000 00       		.space	1
 1211              		.text
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 60


 1212              	.Letext0:
 1213              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1214              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1215              		.file 4 "Generated_Source\\PSoC5\\CapSense_IntClock.h"
 1216              		.file 5 "Generated_Source\\PSoC5\\CapSense_CompCH0.h"
 1217              		.file 6 "Generated_Source\\PSoC5\\CapSense_IdacCH0.h"
 1218              		.file 7 "Generated_Source\\PSoC5\\cyfitter_cfg.h"
 1219              		.file 8 "Generated_Source\\PSoC5\\CapSense_AMuxCH0.h"
 1220              		.section	.debug_info,"",%progbits
 1221              	.Ldebug_info0:
 1222 0000 15080000 		.4byte	0x815
 1223 0004 0400     		.2byte	0x4
 1224 0006 00000000 		.4byte	.Ldebug_abbrev0
 1225 000a 04       		.byte	0x4
 1226 000b 01       		.uleb128 0x1
 1227 000c A4040000 		.4byte	.LASF79
 1228 0010 0C       		.byte	0xc
 1229 0011 2A000000 		.4byte	.LASF80
 1230 0015 B3010000 		.4byte	.LASF81
 1231 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1232 001d 00000000 		.4byte	0
 1233 0021 00000000 		.4byte	.Ldebug_line0
 1234 0025 02       		.uleb128 0x2
 1235 0026 01       		.byte	0x1
 1236 0027 06       		.byte	0x6
 1237 0028 F4000000 		.4byte	.LASF0
 1238 002c 02       		.uleb128 0x2
 1239 002d 01       		.byte	0x1
 1240 002e 08       		.byte	0x8
 1241 002f 22040000 		.4byte	.LASF1
 1242 0033 02       		.uleb128 0x2
 1243 0034 02       		.byte	0x2
 1244 0035 05       		.byte	0x5
 1245 0036 60040000 		.4byte	.LASF2
 1246 003a 02       		.uleb128 0x2
 1247 003b 02       		.byte	0x2
 1248 003c 07       		.byte	0x7
 1249 003d F9020000 		.4byte	.LASF3
 1250 0041 02       		.uleb128 0x2
 1251 0042 04       		.byte	0x4
 1252 0043 05       		.byte	0x5
 1253 0044 21010000 		.4byte	.LASF4
 1254 0048 02       		.uleb128 0x2
 1255 0049 04       		.byte	0x4
 1256 004a 07       		.byte	0x7
 1257 004b 92020000 		.4byte	.LASF5
 1258 004f 02       		.uleb128 0x2
 1259 0050 08       		.byte	0x8
 1260 0051 05       		.byte	0x5
 1261 0052 E6000000 		.4byte	.LASF6
 1262 0056 02       		.uleb128 0x2
 1263 0057 08       		.byte	0x8
 1264 0058 07       		.byte	0x7
 1265 0059 91000000 		.4byte	.LASF7
 1266 005d 03       		.uleb128 0x3
 1267 005e 04       		.byte	0x4
 1268 005f 05       		.byte	0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 61


 1269 0060 696E7400 		.ascii	"int\000"
 1270 0064 02       		.uleb128 0x2
 1271 0065 04       		.byte	0x4
 1272 0066 07       		.byte	0x7
 1273 0067 55020000 		.4byte	.LASF8
 1274 006b 04       		.uleb128 0x4
 1275 006c 30010000 		.4byte	.LASF9
 1276 0070 02       		.byte	0x2
 1277 0071 E401     		.2byte	0x1e4
 1278 0073 2C000000 		.4byte	0x2c
 1279 0077 04       		.uleb128 0x4
 1280 0078 00000000 		.4byte	.LASF10
 1281 007c 02       		.byte	0x2
 1282 007d E501     		.2byte	0x1e5
 1283 007f 3A000000 		.4byte	0x3a
 1284 0083 04       		.uleb128 0x4
 1285 0084 AC010000 		.4byte	.LASF11
 1286 0088 02       		.byte	0x2
 1287 0089 E601     		.2byte	0x1e6
 1288 008b 48000000 		.4byte	0x48
 1289 008f 02       		.uleb128 0x2
 1290 0090 04       		.byte	0x4
 1291 0091 04       		.byte	0x4
 1292 0092 F5030000 		.4byte	.LASF12
 1293 0096 02       		.uleb128 0x2
 1294 0097 08       		.byte	0x8
 1295 0098 04       		.byte	0x4
 1296 0099 4C010000 		.4byte	.LASF13
 1297 009d 02       		.uleb128 0x2
 1298 009e 01       		.byte	0x1
 1299 009f 08       		.byte	0x8
 1300 00a0 32050000 		.4byte	.LASF14
 1301 00a4 04       		.uleb128 0x4
 1302 00a5 05040000 		.4byte	.LASF15
 1303 00a9 02       		.byte	0x2
 1304 00aa 8E02     		.2byte	0x28e
 1305 00ac B0000000 		.4byte	0xb0
 1306 00b0 05       		.uleb128 0x5
 1307 00b1 6B000000 		.4byte	0x6b
 1308 00b5 04       		.uleb128 0x4
 1309 00b6 2A010000 		.4byte	.LASF16
 1310 00ba 02       		.byte	0x2
 1311 00bb 8F02     		.2byte	0x28f
 1312 00bd C1000000 		.4byte	0xc1
 1313 00c1 05       		.uleb128 0x5
 1314 00c2 77000000 		.4byte	0x77
 1315 00c6 04       		.uleb128 0x4
 1316 00c7 49030000 		.4byte	.LASF17
 1317 00cb 02       		.byte	0x2
 1318 00cc 9002     		.2byte	0x290
 1319 00ce D2000000 		.4byte	0xd2
 1320 00d2 05       		.uleb128 0x5
 1321 00d3 83000000 		.4byte	0x83
 1322 00d7 02       		.uleb128 0x2
 1323 00d8 08       		.byte	0x8
 1324 00d9 04       		.byte	0x4
 1325 00da 86030000 		.4byte	.LASF18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 62


 1326 00de 02       		.uleb128 0x2
 1327 00df 04       		.byte	0x4
 1328 00e0 07       		.byte	0x7
 1329 00e1 6C030000 		.4byte	.LASF19
 1330 00e5 06       		.uleb128 0x6
 1331 00e6 C0000000 		.4byte	.LASF26
 1332 00ea 01       		.byte	0x1
 1333 00eb BF01     		.2byte	0x1bf
 1334 00ed 00000000 		.4byte	.LFB1
 1335 00f1 68000000 		.4byte	.LFE1-.LFB1
 1336 00f5 01       		.uleb128 0x1
 1337 00f6 9C       		.byte	0x9c
 1338 00f7 40010000 		.4byte	0x140
 1339 00fb 07       		.uleb128 0x7
 1340 00fc 9B050000 		.4byte	.LASF20
 1341 0100 01       		.byte	0x1
 1342 0101 C101     		.2byte	0x1c1
 1343 0103 6B000000 		.4byte	0x6b
 1344 0107 00000000 		.4byte	.LLST0
 1345 010b 08       		.uleb128 0x8
 1346 010c 06000000 		.4byte	.LVL0
 1347 0110 52070000 		.4byte	0x752
 1348 0114 08       		.uleb128 0x8
 1349 0115 16000000 		.4byte	.LVL2
 1350 0119 5D070000 		.4byte	0x75d
 1351 011d 08       		.uleb128 0x8
 1352 011e 1A000000 		.4byte	.LVL3
 1353 0122 68070000 		.4byte	0x768
 1354 0126 08       		.uleb128 0x8
 1355 0127 1E000000 		.4byte	.LVL4
 1356 012b 73070000 		.4byte	0x773
 1357 012f 09       		.uleb128 0x9
 1358 0130 46000000 		.4byte	.LVL5
 1359 0134 7E070000 		.4byte	0x77e
 1360 0138 0A       		.uleb128 0xa
 1361 0139 01       		.uleb128 0x1
 1362 013a 50       		.byte	0x50
 1363 013b 02       		.uleb128 0x2
 1364 013c 74       		.byte	0x74
 1365 013d 00       		.sleb128 0
 1366 013e 00       		.byte	0
 1367 013f 00       		.byte	0
 1368 0140 0B       		.uleb128 0xb
 1369 0141 0A040000 		.4byte	.LASF22
 1370 0145 01       		.byte	0x1
 1371 0146 0703     		.2byte	0x307
 1372 0148 6B000000 		.4byte	0x6b
 1373 014c 00000000 		.4byte	.LFB4
 1374 0150 20000000 		.4byte	.LFE4-.LFB4
 1375 0154 01       		.uleb128 0x1
 1376 0155 9C       		.byte	0x9c
 1377 0156 89010000 		.4byte	0x189
 1378 015a 0C       		.uleb128 0xc
 1379 015b 88000000 		.4byte	.LASF24
 1380 015f 01       		.byte	0x1
 1381 0160 0703     		.2byte	0x307
 1382 0162 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 63


 1383 0166 13000000 		.4byte	.LLST1
 1384 016a 0D       		.uleb128 0xd
 1385 016b 706F7300 		.ascii	"pos\000"
 1386 016f 01       		.byte	0x1
 1387 0170 0903     		.2byte	0x309
 1388 0172 6B000000 		.4byte	0x6b
 1389 0176 01       		.uleb128 0x1
 1390 0177 52       		.byte	0x52
 1391 0178 07       		.uleb128 0x7
 1392 0179 AA030000 		.4byte	.LASF21
 1393 017d 01       		.byte	0x1
 1394 017e 0A03     		.2byte	0x30a
 1395 0180 6B000000 		.4byte	0x6b
 1396 0184 3F000000 		.4byte	.LLST2
 1397 0188 00       		.byte	0
 1398 0189 0E       		.uleb128 0xe
 1399 018a 3E060000 		.4byte	.LASF82
 1400 018e 01       		.byte	0x1
 1401 018f 9304     		.2byte	0x493
 1402 0191 6B000000 		.4byte	0x6b
 1403 0195 00000000 		.4byte	.LFB8
 1404 0199 10000000 		.4byte	.LFE8-.LFB8
 1405 019d 01       		.uleb128 0x1
 1406 019e 9C       		.byte	0x9c
 1407 019f 0B       		.uleb128 0xb
 1408 01a0 95010000 		.4byte	.LASF23
 1409 01a4 01       		.byte	0x1
 1410 01a5 AC04     		.2byte	0x4ac
 1411 01a7 77000000 		.4byte	0x77
 1412 01ab 00000000 		.4byte	.LFB9
 1413 01af 0C000000 		.4byte	.LFE9-.LFB9
 1414 01b3 01       		.uleb128 0x1
 1415 01b4 9C       		.byte	0x9c
 1416 01b5 CA010000 		.4byte	0x1ca
 1417 01b9 0C       		.uleb128 0xc
 1418 01ba 23030000 		.4byte	.LASF25
 1419 01be 01       		.byte	0x1
 1420 01bf AC04     		.2byte	0x4ac
 1421 01c1 6B000000 		.4byte	0x6b
 1422 01c5 52000000 		.4byte	.LLST3
 1423 01c9 00       		.byte	0
 1424 01ca 06       		.uleb128 0x6
 1425 01cb 53010000 		.4byte	.LASF27
 1426 01cf 01       		.byte	0x1
 1427 01d0 5705     		.2byte	0x557
 1428 01d2 00000000 		.4byte	.LFB11
 1429 01d6 34000000 		.4byte	.LFE11-.LFB11
 1430 01da 01       		.uleb128 0x1
 1431 01db 9C       		.byte	0x9c
 1432 01dc 1A020000 		.4byte	0x21a
 1433 01e0 0C       		.uleb128 0xc
 1434 01e1 23030000 		.4byte	.LASF25
 1435 01e5 01       		.byte	0x1
 1436 01e6 5705     		.2byte	0x557
 1437 01e8 6B000000 		.4byte	0x6b
 1438 01ec 73000000 		.4byte	.LLST4
 1439 01f0 07       		.uleb128 0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 64


 1440 01f1 27020000 		.4byte	.LASF28
 1441 01f5 01       		.byte	0x1
 1442 01f6 5905     		.2byte	0x559
 1443 01f8 6B000000 		.4byte	0x6b
 1444 01fc 94000000 		.4byte	.LLST5
 1445 0200 07       		.uleb128 0x7
 1446 0201 0C020000 		.4byte	.LASF29
 1447 0205 01       		.byte	0x1
 1448 0206 5A05     		.2byte	0x55a
 1449 0208 6B000000 		.4byte	0x6b
 1450 020c A7000000 		.4byte	.LLST6
 1451 0210 08       		.uleb128 0x8
 1452 0211 2E000000 		.4byte	.LVL17
 1453 0215 89070000 		.4byte	0x789
 1454 0219 00       		.byte	0
 1455 021a 06       		.uleb128 0x6
 1456 021b C2050000 		.4byte	.LASF30
 1457 021f 01       		.byte	0x1
 1458 0220 AC05     		.2byte	0x5ac
 1459 0222 00000000 		.4byte	.LFB12
 1460 0226 38000000 		.4byte	.LFE12-.LFB12
 1461 022a 01       		.uleb128 0x1
 1462 022b 9C       		.byte	0x9c
 1463 022c 71020000 		.4byte	0x271
 1464 0230 0C       		.uleb128 0xc
 1465 0231 23030000 		.4byte	.LASF25
 1466 0235 01       		.byte	0x1
 1467 0236 AC05     		.2byte	0x5ac
 1468 0238 6B000000 		.4byte	0x6b
 1469 023c BA000000 		.4byte	.LLST7
 1470 0240 07       		.uleb128 0x7
 1471 0241 27020000 		.4byte	.LASF28
 1472 0245 01       		.byte	0x1
 1473 0246 AE05     		.2byte	0x5ae
 1474 0248 6B000000 		.4byte	0x6b
 1475 024c DB000000 		.4byte	.LLST8
 1476 0250 07       		.uleb128 0x7
 1477 0251 0C020000 		.4byte	.LASF29
 1478 0255 01       		.byte	0x1
 1479 0256 AF05     		.2byte	0x5af
 1480 0258 6B000000 		.4byte	0x6b
 1481 025c EE000000 		.4byte	.LLST9
 1482 0260 09       		.uleb128 0x9
 1483 0261 10000000 		.4byte	.LVL22
 1484 0265 94070000 		.4byte	0x794
 1485 0269 0A       		.uleb128 0xa
 1486 026a 01       		.uleb128 0x1
 1487 026b 50       		.byte	0x50
 1488 026c 02       		.uleb128 0x2
 1489 026d 75       		.byte	0x75
 1490 026e 00       		.sleb128 0
 1491 026f 00       		.byte	0
 1492 0270 00       		.byte	0
 1493 0271 06       		.uleb128 0x6
 1494 0272 62020000 		.4byte	.LASF31
 1495 0276 01       		.byte	0x1
 1496 0277 C104     		.2byte	0x4c1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 65


 1497 0279 00000000 		.4byte	.LFB10
 1498 027d 16000000 		.4byte	.LFE10-.LFB10
 1499 0281 01       		.uleb128 0x1
 1500 0282 9C       		.byte	0x9c
 1501 0283 A6020000 		.4byte	0x2a6
 1502 0287 0F       		.uleb128 0xf
 1503 0288 6900     		.ascii	"i\000"
 1504 028a 01       		.byte	0x1
 1505 028b C304     		.2byte	0x4c3
 1506 028d 6B000000 		.4byte	0x6b
 1507 0291 01010000 		.4byte	.LLST10
 1508 0295 09       		.uleb128 0x9
 1509 0296 0C000000 		.4byte	.LVL28
 1510 029a 1A020000 		.4byte	0x21a
 1511 029e 0A       		.uleb128 0xa
 1512 029f 01       		.uleb128 0x1
 1513 02a0 50       		.byte	0x50
 1514 02a1 02       		.uleb128 0x2
 1515 02a2 74       		.byte	0x74
 1516 02a3 00       		.sleb128 0
 1517 02a4 00       		.byte	0
 1518 02a5 00       		.byte	0
 1519 02a6 06       		.uleb128 0x6
 1520 02a7 92030000 		.4byte	.LASF32
 1521 02ab 01       		.byte	0x1
 1522 02ac 7D02     		.2byte	0x27d
 1523 02ae 00000000 		.4byte	.LFB3
 1524 02b2 68000000 		.4byte	.LFE3-.LFB3
 1525 02b6 01       		.uleb128 0x1
 1526 02b7 9C       		.byte	0x9c
 1527 02b8 E1020000 		.4byte	0x2e1
 1528 02bc 08       		.uleb128 0x8
 1529 02bd 16000000 		.4byte	.LVL31
 1530 02c1 71020000 		.4byte	0x271
 1531 02c5 08       		.uleb128 0x8
 1532 02c6 24000000 		.4byte	.LVL32
 1533 02ca 9F070000 		.4byte	0x79f
 1534 02ce 08       		.uleb128 0x8
 1535 02cf 28000000 		.4byte	.LVL33
 1536 02d3 AA070000 		.4byte	0x7aa
 1537 02d7 08       		.uleb128 0x8
 1538 02d8 2C000000 		.4byte	.LVL34
 1539 02dc B5070000 		.4byte	0x7b5
 1540 02e0 00       		.byte	0
 1541 02e1 06       		.uleb128 0x6
 1542 02e2 89050000 		.4byte	.LASF33
 1543 02e6 01       		.byte	0x1
 1544 02e7 A806     		.2byte	0x6a8
 1545 02e9 00000000 		.4byte	.LFB14
 1546 02ed 4C000000 		.4byte	.LFE14-.LFB14
 1547 02f1 01       		.uleb128 0x1
 1548 02f2 9C       		.byte	0x9c
 1549 02f3 20030000 		.4byte	0x320
 1550 02f7 0C       		.uleb128 0xc
 1551 02f8 23030000 		.4byte	.LASF25
 1552 02fc 01       		.byte	0x1
 1553 02fd A806     		.2byte	0x6a8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 66


 1554 02ff 6B000000 		.4byte	0x6b
 1555 0303 2B010000 		.4byte	.LLST11
 1556 0307 08       		.uleb128 0x8
 1557 0308 28000000 		.4byte	.LVL36
 1558 030c 1A020000 		.4byte	0x21a
 1559 0310 09       		.uleb128 0x9
 1560 0311 2E000000 		.4byte	.LVL37
 1561 0315 C0070000 		.4byte	0x7c0
 1562 0319 0A       		.uleb128 0xa
 1563 031a 01       		.uleb128 0x1
 1564 031b 50       		.byte	0x50
 1565 031c 01       		.uleb128 0x1
 1566 031d 30       		.byte	0x30
 1567 031e 00       		.byte	0
 1568 031f 00       		.byte	0
 1569 0320 06       		.uleb128 0x6
 1570 0321 D0000000 		.4byte	.LASF34
 1571 0325 01       		.byte	0x1
 1572 0326 B607     		.2byte	0x7b6
 1573 0328 00000000 		.4byte	.LFB15
 1574 032c 10000000 		.4byte	.LFE15-.LFB15
 1575 0330 01       		.uleb128 0x1
 1576 0331 9C       		.byte	0x9c
 1577 0332 47030000 		.4byte	0x347
 1578 0336 0C       		.uleb128 0xc
 1579 0337 FB030000 		.4byte	.LASF35
 1580 033b 01       		.byte	0x1
 1581 033c B607     		.2byte	0x7b6
 1582 033e 6B000000 		.4byte	0x6b
 1583 0342 4C010000 		.4byte	.LLST12
 1584 0346 00       		.byte	0
 1585 0347 06       		.uleb128 0x6
 1586 0348 71040000 		.4byte	.LASF36
 1587 034c 01       		.byte	0x1
 1588 034d A103     		.2byte	0x3a1
 1589 034f 00000000 		.4byte	.LFB5
 1590 0353 34000000 		.4byte	.LFE5-.LFB5
 1591 0357 01       		.uleb128 0x1
 1592 0358 9C       		.byte	0x9c
 1593 0359 90030000 		.4byte	0x390
 1594 035d 0C       		.uleb128 0xc
 1595 035e 44030000 		.4byte	.LASF37
 1596 0362 01       		.byte	0x1
 1597 0363 A103     		.2byte	0x3a1
 1598 0365 6B000000 		.4byte	0x6b
 1599 0369 88010000 		.4byte	.LLST13
 1600 036d 07       		.uleb128 0x7
 1601 036e 6A040000 		.4byte	.LASF38
 1602 0372 01       		.byte	0x1
 1603 0373 A303     		.2byte	0x3a3
 1604 0375 6B000000 		.4byte	0x6b
 1605 0379 A9010000 		.4byte	.LLST14
 1606 037d 08       		.uleb128 0x8
 1607 037e 14000000 		.4byte	.LVL45
 1608 0382 C0070000 		.4byte	0x7c0
 1609 0386 08       		.uleb128 0x8
 1610 0387 26000000 		.4byte	.LVL47
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 67


 1611 038b 20030000 		.4byte	0x320
 1612 038f 00       		.byte	0
 1613 0390 06       		.uleb128 0x6
 1614 0391 D9050000 		.4byte	.LASF39
 1615 0395 01       		.byte	0x1
 1616 0396 0006     		.2byte	0x600
 1617 0398 00000000 		.4byte	.LFB13
 1618 039c 34000000 		.4byte	.LFE13-.LFB13
 1619 03a0 01       		.uleb128 0x1
 1620 03a1 9C       		.byte	0x9c
 1621 03a2 DB030000 		.4byte	0x3db
 1622 03a6 0C       		.uleb128 0xc
 1623 03a7 23030000 		.4byte	.LASF25
 1624 03ab 01       		.byte	0x1
 1625 03ac 0006     		.2byte	0x600
 1626 03ae 6B000000 		.4byte	0x6b
 1627 03b2 CF010000 		.4byte	.LLST15
 1628 03b6 10       		.uleb128 0x10
 1629 03b7 08000000 		.4byte	.LVL50
 1630 03bb 47030000 		.4byte	0x347
 1631 03bf CA030000 		.4byte	0x3ca
 1632 03c3 0A       		.uleb128 0xa
 1633 03c4 01       		.uleb128 0x1
 1634 03c5 50       		.byte	0x50
 1635 03c6 02       		.uleb128 0x2
 1636 03c7 75       		.byte	0x75
 1637 03c8 00       		.sleb128 0
 1638 03c9 00       		.byte	0
 1639 03ca 09       		.uleb128 0x9
 1640 03cb 22000000 		.4byte	.LVL51
 1641 03cf CA010000 		.4byte	0x1ca
 1642 03d3 0A       		.uleb128 0xa
 1643 03d4 01       		.uleb128 0x1
 1644 03d5 50       		.byte	0x50
 1645 03d6 02       		.uleb128 0x2
 1646 03d7 75       		.byte	0x75
 1647 03d8 00       		.sleb128 0
 1648 03d9 00       		.byte	0
 1649 03da 00       		.byte	0
 1650 03db 06       		.uleb128 0x6
 1651 03dc 41020000 		.4byte	.LASF40
 1652 03e0 01       		.byte	0x1
 1653 03e1 1104     		.2byte	0x411
 1654 03e3 00000000 		.4byte	.LFB6
 1655 03e7 20000000 		.4byte	.LFE6-.LFB6
 1656 03eb 01       		.uleb128 0x1
 1657 03ec 9C       		.byte	0x9c
 1658 03ed 0B040000 		.4byte	0x40b
 1659 03f1 0C       		.uleb128 0xc
 1660 03f2 23030000 		.4byte	.LASF25
 1661 03f6 01       		.byte	0x1
 1662 03f7 1104     		.2byte	0x411
 1663 03f9 6B000000 		.4byte	0x6b
 1664 03fd F0010000 		.4byte	.LLST16
 1665 0401 08       		.uleb128 0x8
 1666 0402 14000000 		.4byte	.LVL53
 1667 0406 90030000 		.4byte	0x390
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 68


 1668 040a 00       		.byte	0
 1669 040b 06       		.uleb128 0x6
 1670 040c 0B060000 		.4byte	.LASF41
 1671 0410 01       		.byte	0x1
 1672 0411 5E04     		.2byte	0x45e
 1673 0413 00000000 		.4byte	.LFB7
 1674 0417 38000000 		.4byte	.LFE7-.LFB7
 1675 041b 01       		.uleb128 0x1
 1676 041c 9C       		.byte	0x9c
 1677 041d 34040000 		.4byte	0x434
 1678 0421 08       		.uleb128 0x8
 1679 0422 14000000 		.4byte	.LVL54
 1680 0426 40010000 		.4byte	0x140
 1681 042a 08       		.uleb128 0x8
 1682 042b 2E000000 		.4byte	.LVL55
 1683 042f 90030000 		.4byte	0x390
 1684 0433 00       		.byte	0
 1685 0434 0B       		.uleb128 0xb
 1686 0435 8E040000 		.4byte	.LASF42
 1687 0439 01       		.byte	0x1
 1688 043a D307     		.2byte	0x7d3
 1689 043c 6B000000 		.4byte	0x6b
 1690 0440 00000000 		.4byte	.LFB16
 1691 0444 0C000000 		.4byte	.LFE16-.LFB16
 1692 0448 01       		.uleb128 0x1
 1693 0449 9C       		.byte	0x9c
 1694 044a 5F040000 		.4byte	0x45f
 1695 044e 07       		.uleb128 0x7
 1696 044f FB030000 		.4byte	.LASF35
 1697 0453 01       		.byte	0x1
 1698 0454 D507     		.2byte	0x7d5
 1699 0456 6B000000 		.4byte	0x6b
 1700 045a 11020000 		.4byte	.LLST17
 1701 045e 00       		.byte	0
 1702 045f 06       		.uleb128 0x6
 1703 0460 4F050000 		.4byte	.LASF43
 1704 0464 01       		.byte	0x1
 1705 0465 F507     		.2byte	0x7f5
 1706 0467 00000000 		.4byte	.LFB17
 1707 046b 0C000000 		.4byte	.LFE17-.LFB17
 1708 046f 01       		.uleb128 0x1
 1709 0470 9C       		.byte	0x9c
 1710 0471 84040000 		.4byte	0x484
 1711 0475 11       		.uleb128 0x11
 1712 0476 A0030000 		.4byte	.LASF44
 1713 047a 01       		.byte	0x1
 1714 047b F507     		.2byte	0x7f5
 1715 047d 6B000000 		.4byte	0x6b
 1716 0481 01       		.uleb128 0x1
 1717 0482 50       		.byte	0x50
 1718 0483 00       		.byte	0
 1719 0484 06       		.uleb128 0x6
 1720 0485 00010000 		.4byte	.LASF45
 1721 0489 01       		.byte	0x1
 1722 048a 1008     		.2byte	0x810
 1723 048c 00000000 		.4byte	.LFB18
 1724 0490 20000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 69


 1725 0494 01       		.uleb128 0x1
 1726 0495 9C       		.byte	0x9c
 1727 0496 A9040000 		.4byte	0x4a9
 1728 049a 12       		.uleb128 0x12
 1729 049b 73726300 		.ascii	"src\000"
 1730 049f 01       		.byte	0x1
 1731 04a0 1008     		.2byte	0x810
 1732 04a2 6B000000 		.4byte	0x6b
 1733 04a6 01       		.uleb128 0x1
 1734 04a7 50       		.byte	0x50
 1735 04a8 00       		.byte	0
 1736 04a9 13       		.uleb128 0x13
 1737 04aa EA050000 		.4byte	.LASF46
 1738 04ae 01       		.byte	0x1
 1739 04af DE       		.byte	0xde
 1740 04b0 00000000 		.4byte	.LFB0
 1741 04b4 E4000000 		.4byte	.LFE0-.LFB0
 1742 04b8 01       		.uleb128 0x1
 1743 04b9 9C       		.byte	0x9c
 1744 04ba C3050000 		.4byte	0x5c3
 1745 04be 14       		.uleb128 0x14
 1746 04bf 9B050000 		.4byte	.LASF20
 1747 04c3 01       		.byte	0x1
 1748 04c4 E5       		.byte	0xe5
 1749 04c5 6B000000 		.4byte	0x6b
 1750 04c9 30020000 		.4byte	.LLST18
 1751 04cd 08       		.uleb128 0x8
 1752 04ce 06000000 		.4byte	.LVL60
 1753 04d2 71020000 		.4byte	0x271
 1754 04d6 10       		.uleb128 0x10
 1755 04d7 0C000000 		.4byte	.LVL61
 1756 04db 84040000 		.4byte	0x484
 1757 04df E9040000 		.4byte	0x4e9
 1758 04e3 0A       		.uleb128 0xa
 1759 04e4 01       		.uleb128 0x1
 1760 04e5 50       		.byte	0x50
 1761 04e6 01       		.uleb128 0x1
 1762 04e7 32       		.byte	0x32
 1763 04e8 00       		.byte	0
 1764 04e9 08       		.uleb128 0x8
 1765 04ea 10000000 		.4byte	.LVL62
 1766 04ee 52070000 		.4byte	0x752
 1767 04f2 08       		.uleb128 0x8
 1768 04f3 28000000 		.4byte	.LVL63
 1769 04f7 7E070000 		.4byte	0x77e
 1770 04fb 08       		.uleb128 0x8
 1771 04fc 42000000 		.4byte	.LVL64
 1772 0500 52070000 		.4byte	0x752
 1773 0504 08       		.uleb128 0x8
 1774 0505 5A000000 		.4byte	.LVL65
 1775 0509 7E070000 		.4byte	0x77e
 1776 050d 10       		.uleb128 0x10
 1777 050e 88000000 		.4byte	.LVL66
 1778 0512 CB070000 		.4byte	0x7cb
 1779 0516 20050000 		.4byte	0x520
 1780 051a 0A       		.uleb128 0xa
 1781 051b 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 70


 1782 051c 50       		.byte	0x50
 1783 051d 01       		.uleb128 0x1
 1784 051e 31       		.byte	0x31
 1785 051f 00       		.byte	0
 1786 0520 10       		.uleb128 0x10
 1787 0521 90000000 		.4byte	.LVL67
 1788 0525 D6070000 		.4byte	0x7d6
 1789 0529 39050000 		.4byte	0x539
 1790 052d 0A       		.uleb128 0xa
 1791 052e 01       		.uleb128 0x1
 1792 052f 50       		.byte	0x50
 1793 0530 01       		.uleb128 0x1
 1794 0531 31       		.byte	0x31
 1795 0532 0A       		.uleb128 0xa
 1796 0533 01       		.uleb128 0x1
 1797 0534 51       		.byte	0x51
 1798 0535 02       		.uleb128 0x2
 1799 0536 74       		.byte	0x74
 1800 0537 00       		.sleb128 0
 1801 0538 00       		.byte	0
 1802 0539 08       		.uleb128 0x8
 1803 053a 94000000 		.4byte	.LVL68
 1804 053e E1070000 		.4byte	0x7e1
 1805 0542 10       		.uleb128 0x10
 1806 0543 9A000000 		.4byte	.LVL69
 1807 0547 89070000 		.4byte	0x789
 1808 054b 55050000 		.4byte	0x555
 1809 054f 0A       		.uleb128 0xa
 1810 0550 01       		.uleb128 0x1
 1811 0551 50       		.byte	0x50
 1812 0552 01       		.uleb128 0x1
 1813 0553 4A       		.byte	0x4a
 1814 0554 00       		.byte	0
 1815 0555 10       		.uleb128 0x10
 1816 0556 A0000000 		.4byte	.LVL70
 1817 055a 89070000 		.4byte	0x789
 1818 055e 68050000 		.4byte	0x568
 1819 0562 0A       		.uleb128 0xa
 1820 0563 01       		.uleb128 0x1
 1821 0564 50       		.byte	0x50
 1822 0565 01       		.uleb128 0x1
 1823 0566 4B       		.byte	0x4b
 1824 0567 00       		.byte	0
 1825 0568 10       		.uleb128 0x10
 1826 0569 A6000000 		.4byte	.LVL71
 1827 056d 89070000 		.4byte	0x789
 1828 0571 7B050000 		.4byte	0x57b
 1829 0575 0A       		.uleb128 0xa
 1830 0576 01       		.uleb128 0x1
 1831 0577 50       		.byte	0x50
 1832 0578 01       		.uleb128 0x1
 1833 0579 4C       		.byte	0x4c
 1834 057a 00       		.byte	0
 1835 057b 08       		.uleb128 0x8
 1836 057c B4000000 		.4byte	.LVL72
 1837 0580 EC070000 		.4byte	0x7ec
 1838 0584 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 71


 1839 0585 B8000000 		.4byte	.LVL73
 1840 0589 F7070000 		.4byte	0x7f7
 1841 058d 10       		.uleb128 0x10
 1842 058e BE000000 		.4byte	.LVL74
 1843 0592 02080000 		.4byte	0x802
 1844 0596 A0050000 		.4byte	0x5a0
 1845 059a 0A       		.uleb128 0xa
 1846 059b 01       		.uleb128 0x1
 1847 059c 50       		.byte	0x50
 1848 059d 01       		.uleb128 0x1
 1849 059e 30       		.byte	0x30
 1850 059f 00       		.byte	0
 1851 05a0 10       		.uleb128 0x10
 1852 05a1 C4000000 		.4byte	.LVL75
 1853 05a5 0D080000 		.4byte	0x80d
 1854 05a9 B3050000 		.4byte	0x5b3
 1855 05ad 0A       		.uleb128 0xa
 1856 05ae 01       		.uleb128 0x1
 1857 05af 50       		.byte	0x50
 1858 05b0 01       		.uleb128 0x1
 1859 05b1 34       		.byte	0x34
 1860 05b2 00       		.byte	0
 1861 05b3 09       		.uleb128 0x9
 1862 05b4 CA000000 		.4byte	.LVL76
 1863 05b8 C0070000 		.4byte	0x7c0
 1864 05bc 0A       		.uleb128 0xa
 1865 05bd 01       		.uleb128 0x1
 1866 05be 50       		.byte	0x50
 1867 05bf 01       		.uleb128 0x1
 1868 05c0 30       		.byte	0x30
 1869 05c1 00       		.byte	0
 1870 05c2 00       		.byte	0
 1871 05c3 06       		.uleb128 0x6
 1872 05c4 7A050000 		.4byte	.LASF47
 1873 05c8 01       		.byte	0x1
 1874 05c9 5802     		.2byte	0x258
 1875 05cb 00000000 		.4byte	.LFB2
 1876 05cf 1C000000 		.4byte	.LFE2-.LFB2
 1877 05d3 01       		.uleb128 0x1
 1878 05d4 9C       		.byte	0x9c
 1879 05d5 EC050000 		.4byte	0x5ec
 1880 05d9 08       		.uleb128 0x8
 1881 05da 0C000000 		.4byte	.LVL77
 1882 05de A9040000 		.4byte	0x4a9
 1883 05e2 08       		.uleb128 0x8
 1884 05e3 16000000 		.4byte	.LVL78
 1885 05e7 E5000000 		.4byte	0xe5
 1886 05eb 00       		.byte	0
 1887 05ec 15       		.uleb128 0x15
 1888 05ed 4C000000 		.4byte	.LASF48
 1889 05f1 01       		.byte	0x1
 1890 05f2 16       		.byte	0x16
 1891 05f3 6B000000 		.4byte	0x6b
 1892 05f7 05       		.uleb128 0x5
 1893 05f8 03       		.byte	0x3
 1894 05f9 00000000 		.4byte	CapSense_initVar
 1895 05fd 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 72


 1896 05fe 07000000 		.4byte	.LASF49
 1897 0602 01       		.byte	0x1
 1898 0603 19       		.byte	0x19
 1899 0604 B0000000 		.4byte	0xb0
 1900 0608 05       		.uleb128 0x5
 1901 0609 03       		.byte	0x3
 1902 060a 00000000 		.4byte	CapSense_csv
 1903 060e 16       		.uleb128 0x16
 1904 060f 2C020000 		.4byte	.LASF50
 1905 0613 01       		.byte	0x1
 1906 0614 1A       		.byte	0x1a
 1907 0615 B0000000 		.4byte	0xb0
 1908 0619 05       		.uleb128 0x5
 1909 061a 03       		.byte	0x3
 1910 061b 00000000 		.4byte	CapSense_sensorIndex
 1911 061f 17       		.uleb128 0x17
 1912 0620 77000000 		.4byte	0x77
 1913 0624 2F060000 		.4byte	0x62f
 1914 0628 18       		.uleb128 0x18
 1915 0629 DE000000 		.4byte	0xde
 1916 062d 19       		.byte	0x19
 1917 062e 00       		.byte	0
 1918 062f 16       		.uleb128 0x16
 1919 0630 F8050000 		.4byte	.LASF51
 1920 0634 01       		.byte	0x1
 1921 0635 29       		.byte	0x29
 1922 0636 1F060000 		.4byte	0x61f
 1923 063a 05       		.uleb128 0x5
 1924 063b 03       		.byte	0x3
 1925 063c 00000000 		.4byte	CapSense_sensorRaw
 1926 0640 17       		.uleb128 0x17
 1927 0641 6B000000 		.4byte	0x6b
 1928 0645 50060000 		.4byte	0x650
 1929 0649 18       		.uleb128 0x18
 1930 064a DE000000 		.4byte	0xde
 1931 064e 03       		.byte	0x3
 1932 064f 00       		.byte	0
 1933 0650 16       		.uleb128 0x16
 1934 0651 2A030000 		.4byte	.LASF52
 1935 0655 01       		.byte	0x1
 1936 0656 2B       		.byte	0x2b
 1937 0657 40060000 		.4byte	0x640
 1938 065b 05       		.uleb128 0x5
 1939 065c 03       		.byte	0x3
 1940 065d 00000000 		.4byte	CapSense_sensorEnableMask
 1941 0661 17       		.uleb128 0x17
 1942 0662 77060000 		.4byte	0x677
 1943 0666 71060000 		.4byte	0x671
 1944 066a 18       		.uleb128 0x18
 1945 066b DE000000 		.4byte	0xde
 1946 066f 19       		.byte	0x19
 1947 0670 00       		.byte	0
 1948 0671 19       		.uleb128 0x19
 1949 0672 04       		.byte	0x4
 1950 0673 6B000000 		.4byte	0x6b
 1951 0677 1A       		.uleb128 0x1a
 1952 0678 71060000 		.4byte	0x671
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 73


 1953 067c 16       		.uleb128 0x16
 1954 067d 5D000000 		.4byte	.LASF53
 1955 0681 01       		.byte	0x1
 1956 0682 2E       		.byte	0x2e
 1957 0683 8D060000 		.4byte	0x68d
 1958 0687 05       		.uleb128 0x5
 1959 0688 03       		.byte	0x3
 1960 0689 00000000 		.4byte	CapSense_pcTable
 1961 068d 1A       		.uleb128 0x1a
 1962 068e 61060000 		.4byte	0x661
 1963 0692 17       		.uleb128 0x17
 1964 0693 A2060000 		.4byte	0x6a2
 1965 0697 A2060000 		.4byte	0x6a2
 1966 069b 18       		.uleb128 0x18
 1967 069c DE000000 		.4byte	0xde
 1968 06a0 19       		.byte	0x19
 1969 06a1 00       		.byte	0
 1970 06a2 1A       		.uleb128 0x1a
 1971 06a3 6B000000 		.4byte	0x6b
 1972 06a7 16       		.uleb128 0x16
 1973 06a8 B7020000 		.4byte	.LASF54
 1974 06ac 01       		.byte	0x1
 1975 06ad 4B       		.byte	0x4b
 1976 06ae B8060000 		.4byte	0x6b8
 1977 06b2 05       		.uleb128 0x5
 1978 06b3 03       		.byte	0x3
 1979 06b4 00000000 		.4byte	CapSense_portTable
 1980 06b8 1A       		.uleb128 0x1a
 1981 06b9 92060000 		.4byte	0x692
 1982 06bd 16       		.uleb128 0x16
 1983 06be A4020000 		.4byte	.LASF55
 1984 06c2 01       		.byte	0x1
 1985 06c3 68       		.byte	0x68
 1986 06c4 CE060000 		.4byte	0x6ce
 1987 06c8 05       		.uleb128 0x5
 1988 06c9 03       		.byte	0x3
 1989 06ca 00000000 		.4byte	CapSense_maskTable
 1990 06ce 1A       		.uleb128 0x1a
 1991 06cf 92060000 		.4byte	0x692
 1992 06d3 17       		.uleb128 0x17
 1993 06d4 77060000 		.4byte	0x677
 1994 06d8 E3060000 		.4byte	0x6e3
 1995 06dc 18       		.uleb128 0x18
 1996 06dd DE000000 		.4byte	0xde
 1997 06e1 07       		.byte	0x7
 1998 06e2 00       		.byte	0
 1999 06e3 16       		.uleb128 0x16
 2000 06e4 75030000 		.4byte	.LASF56
 2001 06e8 01       		.byte	0x1
 2002 06e9 85       		.byte	0x85
 2003 06ea F4060000 		.4byte	0x6f4
 2004 06ee 05       		.uleb128 0x5
 2005 06ef 03       		.byte	0x3
 2006 06f0 00000000 		.4byte	CapSense_csTable
 2007 06f4 1A       		.uleb128 0x1a
 2008 06f5 D3060000 		.4byte	0x6d3
 2009 06f9 17       		.uleb128 0x17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 74


 2010 06fa 6B000000 		.4byte	0x6b
 2011 06fe 09070000 		.4byte	0x709
 2012 0702 18       		.uleb128 0x18
 2013 0703 DE000000 		.4byte	0xde
 2014 0707 19       		.byte	0x19
 2015 0708 00       		.byte	0
 2016 0709 16       		.uleb128 0x16
 2017 070a DF030000 		.4byte	.LASF57
 2018 070e 01       		.byte	0x1
 2019 070f 8B       		.byte	0x8b
 2020 0710 F9060000 		.4byte	0x6f9
 2021 0714 05       		.uleb128 0x5
 2022 0715 03       		.byte	0x3
 2023 0716 00000000 		.4byte	CapSense_idacSettings
 2024 071a 16       		.uleb128 0x16
 2025 071b 46040000 		.4byte	.LASF58
 2026 071f 01       		.byte	0x1
 2027 0720 8F       		.byte	0x8f
 2028 0721 F9060000 		.4byte	0x6f9
 2029 0725 05       		.uleb128 0x5
 2030 0726 03       		.byte	0x3
 2031 0727 00000000 		.4byte	CapSense_widgetResolution
 2032 072b 16       		.uleb128 0x16
 2033 072c 4F030000 		.4byte	.LASF59
 2034 0730 01       		.byte	0x1
 2035 0731 AC       		.byte	0xac
 2036 0732 6B000000 		.4byte	0x6b
 2037 0736 05       		.uleb128 0x5
 2038 0737 03       		.byte	0x3
 2039 0738 00000000 		.4byte	CapSense_analogSwitchDivider
 2040 073c 16       		.uleb128 0x16
 2041 073d 7F010000 		.4byte	.LASF60
 2042 0741 01       		.byte	0x1
 2043 0742 AE       		.byte	0xae
 2044 0743 4D070000 		.4byte	0x74d
 2045 0747 05       		.uleb128 0x5
 2046 0748 03       		.byte	0x3
 2047 0749 00000000 		.4byte	CapSense_widgetNumber
 2048 074d 1A       		.uleb128 0x1a
 2049 074e 92060000 		.4byte	0x692
 2050 0752 1B       		.uleb128 0x1b
 2051 0753 E2020000 		.4byte	.LASF61
 2052 0757 E2020000 		.4byte	.LASF61
 2053 075b 03       		.byte	0x3
 2054 075c 7D       		.byte	0x7d
 2055 075d 1B       		.uleb128 0x1b
 2056 075e CA020000 		.4byte	.LASF62
 2057 0762 CA020000 		.4byte	.LASF62
 2058 0766 04       		.byte	0x4
 2059 0767 27       		.byte	0x27
 2060 0768 1B       		.uleb128 0x1b
 2061 0769 A8000000 		.4byte	.LASF63
 2062 076d A8000000 		.4byte	.LASF63
 2063 0771 05       		.byte	0x5
 2064 0772 46       		.byte	0x46
 2065 0773 1B       		.uleb128 0x1b
 2066 0774 37050000 		.4byte	.LASF64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 75


 2067 0778 37050000 		.4byte	.LASF64
 2068 077c 06       		.byte	0x6
 2069 077d 46       		.byte	0x46
 2070 077e 1B       		.uleb128 0x1b
 2071 077f 14000000 		.4byte	.LASF65
 2072 0783 14000000 		.4byte	.LASF65
 2073 0787 03       		.byte	0x3
 2074 0788 7E       		.byte	0x7e
 2075 0789 1B       		.uleb128 0x1b
 2076 078a 65050000 		.4byte	.LASF66
 2077 078e 65050000 		.4byte	.LASF66
 2078 0792 07       		.byte	0x7
 2079 0793 1A       		.byte	0x1a
 2080 0794 1B       		.uleb128 0x1b
 2081 0795 27060000 		.4byte	.LASF67
 2082 0799 27060000 		.4byte	.LASF67
 2083 079d 07       		.byte	0x7
 2084 079e 1B       		.byte	0x1b
 2085 079f 1B       		.uleb128 0x1b
 2086 07a0 0C030000 		.4byte	.LASF68
 2087 07a4 0C030000 		.4byte	.LASF68
 2088 07a8 04       		.byte	0x4
 2089 07a9 28       		.byte	0x28
 2090 07aa 1B       		.uleb128 0x1b
 2091 07ab AC050000 		.4byte	.LASF69
 2092 07af AC050000 		.4byte	.LASF69
 2093 07b3 05       		.byte	0x5
 2094 07b4 40       		.byte	0x40
 2095 07b5 1B       		.uleb128 0x1b
 2096 07b6 69010000 		.4byte	.LASF70
 2097 07ba 69010000 		.4byte	.LASF70
 2098 07be 06       		.byte	0x6
 2099 07bf 3D       		.byte	0x3d
 2100 07c0 1B       		.uleb128 0x1b
 2101 07c1 6E000000 		.4byte	.LASF71
 2102 07c5 6E000000 		.4byte	.LASF71
 2103 07c9 06       		.byte	0x6
 2104 07ca 41       		.byte	0x41
 2105 07cb 1B       		.uleb128 0x1b
 2106 07cc FD010000 		.4byte	.LASF72
 2107 07d0 FD010000 		.4byte	.LASF72
 2108 07d4 03       		.byte	0x3
 2109 07d5 88       		.byte	0x88
 2110 07d6 1B       		.uleb128 0x1b
 2111 07d7 CE030000 		.4byte	.LASF73
 2112 07db CE030000 		.4byte	.LASF73
 2113 07df 03       		.byte	0x3
 2114 07e0 8B       		.byte	0x8b
 2115 07e1 1B       		.uleb128 0x1b
 2116 07e2 36010000 		.4byte	.LASF74
 2117 07e6 36010000 		.4byte	.LASF74
 2118 07ea 08       		.byte	0x8
 2119 07eb 1F       		.byte	0x1f
 2120 07ec 1B       		.uleb128 0x1b
 2121 07ed 11020000 		.4byte	.LASF75
 2122 07f1 11020000 		.4byte	.LASF75
 2123 07f5 05       		.byte	0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 76


 2124 07f6 45       		.byte	0x45
 2125 07f7 1B       		.uleb128 0x1b
 2126 07f8 30040000 		.4byte	.LASF76
 2127 07fc 30040000 		.4byte	.LASF76
 2128 0800 06       		.byte	0x6
 2129 0801 45       		.byte	0x45
 2130 0802 1B       		.uleb128 0x1b
 2131 0803 B1030000 		.4byte	.LASF77
 2132 0807 B1030000 		.4byte	.LASF77
 2133 080b 06       		.byte	0x6
 2134 080c 3F       		.byte	0x3f
 2135 080d 1B       		.uleb128 0x1b
 2136 080e 78020000 		.4byte	.LASF78
 2137 0812 78020000 		.4byte	.LASF78
 2138 0816 06       		.byte	0x6
 2139 0817 40       		.byte	0x40
 2140 0818 00       		.byte	0
 2141              		.section	.debug_abbrev,"",%progbits
 2142              	.Ldebug_abbrev0:
 2143 0000 01       		.uleb128 0x1
 2144 0001 11       		.uleb128 0x11
 2145 0002 01       		.byte	0x1
 2146 0003 25       		.uleb128 0x25
 2147 0004 0E       		.uleb128 0xe
 2148 0005 13       		.uleb128 0x13
 2149 0006 0B       		.uleb128 0xb
 2150 0007 03       		.uleb128 0x3
 2151 0008 0E       		.uleb128 0xe
 2152 0009 1B       		.uleb128 0x1b
 2153 000a 0E       		.uleb128 0xe
 2154 000b 55       		.uleb128 0x55
 2155 000c 17       		.uleb128 0x17
 2156 000d 11       		.uleb128 0x11
 2157 000e 01       		.uleb128 0x1
 2158 000f 10       		.uleb128 0x10
 2159 0010 17       		.uleb128 0x17
 2160 0011 00       		.byte	0
 2161 0012 00       		.byte	0
 2162 0013 02       		.uleb128 0x2
 2163 0014 24       		.uleb128 0x24
 2164 0015 00       		.byte	0
 2165 0016 0B       		.uleb128 0xb
 2166 0017 0B       		.uleb128 0xb
 2167 0018 3E       		.uleb128 0x3e
 2168 0019 0B       		.uleb128 0xb
 2169 001a 03       		.uleb128 0x3
 2170 001b 0E       		.uleb128 0xe
 2171 001c 00       		.byte	0
 2172 001d 00       		.byte	0
 2173 001e 03       		.uleb128 0x3
 2174 001f 24       		.uleb128 0x24
 2175 0020 00       		.byte	0
 2176 0021 0B       		.uleb128 0xb
 2177 0022 0B       		.uleb128 0xb
 2178 0023 3E       		.uleb128 0x3e
 2179 0024 0B       		.uleb128 0xb
 2180 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 77


 2181 0026 08       		.uleb128 0x8
 2182 0027 00       		.byte	0
 2183 0028 00       		.byte	0
 2184 0029 04       		.uleb128 0x4
 2185 002a 16       		.uleb128 0x16
 2186 002b 00       		.byte	0
 2187 002c 03       		.uleb128 0x3
 2188 002d 0E       		.uleb128 0xe
 2189 002e 3A       		.uleb128 0x3a
 2190 002f 0B       		.uleb128 0xb
 2191 0030 3B       		.uleb128 0x3b
 2192 0031 05       		.uleb128 0x5
 2193 0032 49       		.uleb128 0x49
 2194 0033 13       		.uleb128 0x13
 2195 0034 00       		.byte	0
 2196 0035 00       		.byte	0
 2197 0036 05       		.uleb128 0x5
 2198 0037 35       		.uleb128 0x35
 2199 0038 00       		.byte	0
 2200 0039 49       		.uleb128 0x49
 2201 003a 13       		.uleb128 0x13
 2202 003b 00       		.byte	0
 2203 003c 00       		.byte	0
 2204 003d 06       		.uleb128 0x6
 2205 003e 2E       		.uleb128 0x2e
 2206 003f 01       		.byte	0x1
 2207 0040 3F       		.uleb128 0x3f
 2208 0041 19       		.uleb128 0x19
 2209 0042 03       		.uleb128 0x3
 2210 0043 0E       		.uleb128 0xe
 2211 0044 3A       		.uleb128 0x3a
 2212 0045 0B       		.uleb128 0xb
 2213 0046 3B       		.uleb128 0x3b
 2214 0047 05       		.uleb128 0x5
 2215 0048 27       		.uleb128 0x27
 2216 0049 19       		.uleb128 0x19
 2217 004a 11       		.uleb128 0x11
 2218 004b 01       		.uleb128 0x1
 2219 004c 12       		.uleb128 0x12
 2220 004d 06       		.uleb128 0x6
 2221 004e 40       		.uleb128 0x40
 2222 004f 18       		.uleb128 0x18
 2223 0050 9742     		.uleb128 0x2117
 2224 0052 19       		.uleb128 0x19
 2225 0053 01       		.uleb128 0x1
 2226 0054 13       		.uleb128 0x13
 2227 0055 00       		.byte	0
 2228 0056 00       		.byte	0
 2229 0057 07       		.uleb128 0x7
 2230 0058 34       		.uleb128 0x34
 2231 0059 00       		.byte	0
 2232 005a 03       		.uleb128 0x3
 2233 005b 0E       		.uleb128 0xe
 2234 005c 3A       		.uleb128 0x3a
 2235 005d 0B       		.uleb128 0xb
 2236 005e 3B       		.uleb128 0x3b
 2237 005f 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 78


 2238 0060 49       		.uleb128 0x49
 2239 0061 13       		.uleb128 0x13
 2240 0062 02       		.uleb128 0x2
 2241 0063 17       		.uleb128 0x17
 2242 0064 00       		.byte	0
 2243 0065 00       		.byte	0
 2244 0066 08       		.uleb128 0x8
 2245 0067 898201   		.uleb128 0x4109
 2246 006a 00       		.byte	0
 2247 006b 11       		.uleb128 0x11
 2248 006c 01       		.uleb128 0x1
 2249 006d 31       		.uleb128 0x31
 2250 006e 13       		.uleb128 0x13
 2251 006f 00       		.byte	0
 2252 0070 00       		.byte	0
 2253 0071 09       		.uleb128 0x9
 2254 0072 898201   		.uleb128 0x4109
 2255 0075 01       		.byte	0x1
 2256 0076 11       		.uleb128 0x11
 2257 0077 01       		.uleb128 0x1
 2258 0078 31       		.uleb128 0x31
 2259 0079 13       		.uleb128 0x13
 2260 007a 00       		.byte	0
 2261 007b 00       		.byte	0
 2262 007c 0A       		.uleb128 0xa
 2263 007d 8A8201   		.uleb128 0x410a
 2264 0080 00       		.byte	0
 2265 0081 02       		.uleb128 0x2
 2266 0082 18       		.uleb128 0x18
 2267 0083 9142     		.uleb128 0x2111
 2268 0085 18       		.uleb128 0x18
 2269 0086 00       		.byte	0
 2270 0087 00       		.byte	0
 2271 0088 0B       		.uleb128 0xb
 2272 0089 2E       		.uleb128 0x2e
 2273 008a 01       		.byte	0x1
 2274 008b 3F       		.uleb128 0x3f
 2275 008c 19       		.uleb128 0x19
 2276 008d 03       		.uleb128 0x3
 2277 008e 0E       		.uleb128 0xe
 2278 008f 3A       		.uleb128 0x3a
 2279 0090 0B       		.uleb128 0xb
 2280 0091 3B       		.uleb128 0x3b
 2281 0092 05       		.uleb128 0x5
 2282 0093 27       		.uleb128 0x27
 2283 0094 19       		.uleb128 0x19
 2284 0095 49       		.uleb128 0x49
 2285 0096 13       		.uleb128 0x13
 2286 0097 11       		.uleb128 0x11
 2287 0098 01       		.uleb128 0x1
 2288 0099 12       		.uleb128 0x12
 2289 009a 06       		.uleb128 0x6
 2290 009b 40       		.uleb128 0x40
 2291 009c 18       		.uleb128 0x18
 2292 009d 9742     		.uleb128 0x2117
 2293 009f 19       		.uleb128 0x19
 2294 00a0 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 79


 2295 00a1 13       		.uleb128 0x13
 2296 00a2 00       		.byte	0
 2297 00a3 00       		.byte	0
 2298 00a4 0C       		.uleb128 0xc
 2299 00a5 05       		.uleb128 0x5
 2300 00a6 00       		.byte	0
 2301 00a7 03       		.uleb128 0x3
 2302 00a8 0E       		.uleb128 0xe
 2303 00a9 3A       		.uleb128 0x3a
 2304 00aa 0B       		.uleb128 0xb
 2305 00ab 3B       		.uleb128 0x3b
 2306 00ac 05       		.uleb128 0x5
 2307 00ad 49       		.uleb128 0x49
 2308 00ae 13       		.uleb128 0x13
 2309 00af 02       		.uleb128 0x2
 2310 00b0 17       		.uleb128 0x17
 2311 00b1 00       		.byte	0
 2312 00b2 00       		.byte	0
 2313 00b3 0D       		.uleb128 0xd
 2314 00b4 34       		.uleb128 0x34
 2315 00b5 00       		.byte	0
 2316 00b6 03       		.uleb128 0x3
 2317 00b7 08       		.uleb128 0x8
 2318 00b8 3A       		.uleb128 0x3a
 2319 00b9 0B       		.uleb128 0xb
 2320 00ba 3B       		.uleb128 0x3b
 2321 00bb 05       		.uleb128 0x5
 2322 00bc 49       		.uleb128 0x49
 2323 00bd 13       		.uleb128 0x13
 2324 00be 02       		.uleb128 0x2
 2325 00bf 18       		.uleb128 0x18
 2326 00c0 00       		.byte	0
 2327 00c1 00       		.byte	0
 2328 00c2 0E       		.uleb128 0xe
 2329 00c3 2E       		.uleb128 0x2e
 2330 00c4 00       		.byte	0
 2331 00c5 3F       		.uleb128 0x3f
 2332 00c6 19       		.uleb128 0x19
 2333 00c7 03       		.uleb128 0x3
 2334 00c8 0E       		.uleb128 0xe
 2335 00c9 3A       		.uleb128 0x3a
 2336 00ca 0B       		.uleb128 0xb
 2337 00cb 3B       		.uleb128 0x3b
 2338 00cc 05       		.uleb128 0x5
 2339 00cd 27       		.uleb128 0x27
 2340 00ce 19       		.uleb128 0x19
 2341 00cf 49       		.uleb128 0x49
 2342 00d0 13       		.uleb128 0x13
 2343 00d1 11       		.uleb128 0x11
 2344 00d2 01       		.uleb128 0x1
 2345 00d3 12       		.uleb128 0x12
 2346 00d4 06       		.uleb128 0x6
 2347 00d5 40       		.uleb128 0x40
 2348 00d6 18       		.uleb128 0x18
 2349 00d7 9742     		.uleb128 0x2117
 2350 00d9 19       		.uleb128 0x19
 2351 00da 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 80


 2352 00db 00       		.byte	0
 2353 00dc 0F       		.uleb128 0xf
 2354 00dd 34       		.uleb128 0x34
 2355 00de 00       		.byte	0
 2356 00df 03       		.uleb128 0x3
 2357 00e0 08       		.uleb128 0x8
 2358 00e1 3A       		.uleb128 0x3a
 2359 00e2 0B       		.uleb128 0xb
 2360 00e3 3B       		.uleb128 0x3b
 2361 00e4 05       		.uleb128 0x5
 2362 00e5 49       		.uleb128 0x49
 2363 00e6 13       		.uleb128 0x13
 2364 00e7 02       		.uleb128 0x2
 2365 00e8 17       		.uleb128 0x17
 2366 00e9 00       		.byte	0
 2367 00ea 00       		.byte	0
 2368 00eb 10       		.uleb128 0x10
 2369 00ec 898201   		.uleb128 0x4109
 2370 00ef 01       		.byte	0x1
 2371 00f0 11       		.uleb128 0x11
 2372 00f1 01       		.uleb128 0x1
 2373 00f2 31       		.uleb128 0x31
 2374 00f3 13       		.uleb128 0x13
 2375 00f4 01       		.uleb128 0x1
 2376 00f5 13       		.uleb128 0x13
 2377 00f6 00       		.byte	0
 2378 00f7 00       		.byte	0
 2379 00f8 11       		.uleb128 0x11
 2380 00f9 05       		.uleb128 0x5
 2381 00fa 00       		.byte	0
 2382 00fb 03       		.uleb128 0x3
 2383 00fc 0E       		.uleb128 0xe
 2384 00fd 3A       		.uleb128 0x3a
 2385 00fe 0B       		.uleb128 0xb
 2386 00ff 3B       		.uleb128 0x3b
 2387 0100 05       		.uleb128 0x5
 2388 0101 49       		.uleb128 0x49
 2389 0102 13       		.uleb128 0x13
 2390 0103 02       		.uleb128 0x2
 2391 0104 18       		.uleb128 0x18
 2392 0105 00       		.byte	0
 2393 0106 00       		.byte	0
 2394 0107 12       		.uleb128 0x12
 2395 0108 05       		.uleb128 0x5
 2396 0109 00       		.byte	0
 2397 010a 03       		.uleb128 0x3
 2398 010b 08       		.uleb128 0x8
 2399 010c 3A       		.uleb128 0x3a
 2400 010d 0B       		.uleb128 0xb
 2401 010e 3B       		.uleb128 0x3b
 2402 010f 05       		.uleb128 0x5
 2403 0110 49       		.uleb128 0x49
 2404 0111 13       		.uleb128 0x13
 2405 0112 02       		.uleb128 0x2
 2406 0113 18       		.uleb128 0x18
 2407 0114 00       		.byte	0
 2408 0115 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 81


 2409 0116 13       		.uleb128 0x13
 2410 0117 2E       		.uleb128 0x2e
 2411 0118 01       		.byte	0x1
 2412 0119 3F       		.uleb128 0x3f
 2413 011a 19       		.uleb128 0x19
 2414 011b 03       		.uleb128 0x3
 2415 011c 0E       		.uleb128 0xe
 2416 011d 3A       		.uleb128 0x3a
 2417 011e 0B       		.uleb128 0xb
 2418 011f 3B       		.uleb128 0x3b
 2419 0120 0B       		.uleb128 0xb
 2420 0121 27       		.uleb128 0x27
 2421 0122 19       		.uleb128 0x19
 2422 0123 11       		.uleb128 0x11
 2423 0124 01       		.uleb128 0x1
 2424 0125 12       		.uleb128 0x12
 2425 0126 06       		.uleb128 0x6
 2426 0127 40       		.uleb128 0x40
 2427 0128 18       		.uleb128 0x18
 2428 0129 9742     		.uleb128 0x2117
 2429 012b 19       		.uleb128 0x19
 2430 012c 01       		.uleb128 0x1
 2431 012d 13       		.uleb128 0x13
 2432 012e 00       		.byte	0
 2433 012f 00       		.byte	0
 2434 0130 14       		.uleb128 0x14
 2435 0131 34       		.uleb128 0x34
 2436 0132 00       		.byte	0
 2437 0133 03       		.uleb128 0x3
 2438 0134 0E       		.uleb128 0xe
 2439 0135 3A       		.uleb128 0x3a
 2440 0136 0B       		.uleb128 0xb
 2441 0137 3B       		.uleb128 0x3b
 2442 0138 0B       		.uleb128 0xb
 2443 0139 49       		.uleb128 0x49
 2444 013a 13       		.uleb128 0x13
 2445 013b 02       		.uleb128 0x2
 2446 013c 17       		.uleb128 0x17
 2447 013d 00       		.byte	0
 2448 013e 00       		.byte	0
 2449 013f 15       		.uleb128 0x15
 2450 0140 34       		.uleb128 0x34
 2451 0141 00       		.byte	0
 2452 0142 03       		.uleb128 0x3
 2453 0143 0E       		.uleb128 0xe
 2454 0144 3A       		.uleb128 0x3a
 2455 0145 0B       		.uleb128 0xb
 2456 0146 3B       		.uleb128 0x3b
 2457 0147 0B       		.uleb128 0xb
 2458 0148 49       		.uleb128 0x49
 2459 0149 13       		.uleb128 0x13
 2460 014a 02       		.uleb128 0x2
 2461 014b 18       		.uleb128 0x18
 2462 014c 00       		.byte	0
 2463 014d 00       		.byte	0
 2464 014e 16       		.uleb128 0x16
 2465 014f 34       		.uleb128 0x34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 82


 2466 0150 00       		.byte	0
 2467 0151 03       		.uleb128 0x3
 2468 0152 0E       		.uleb128 0xe
 2469 0153 3A       		.uleb128 0x3a
 2470 0154 0B       		.uleb128 0xb
 2471 0155 3B       		.uleb128 0x3b
 2472 0156 0B       		.uleb128 0xb
 2473 0157 49       		.uleb128 0x49
 2474 0158 13       		.uleb128 0x13
 2475 0159 3F       		.uleb128 0x3f
 2476 015a 19       		.uleb128 0x19
 2477 015b 02       		.uleb128 0x2
 2478 015c 18       		.uleb128 0x18
 2479 015d 00       		.byte	0
 2480 015e 00       		.byte	0
 2481 015f 17       		.uleb128 0x17
 2482 0160 01       		.uleb128 0x1
 2483 0161 01       		.byte	0x1
 2484 0162 49       		.uleb128 0x49
 2485 0163 13       		.uleb128 0x13
 2486 0164 01       		.uleb128 0x1
 2487 0165 13       		.uleb128 0x13
 2488 0166 00       		.byte	0
 2489 0167 00       		.byte	0
 2490 0168 18       		.uleb128 0x18
 2491 0169 21       		.uleb128 0x21
 2492 016a 00       		.byte	0
 2493 016b 49       		.uleb128 0x49
 2494 016c 13       		.uleb128 0x13
 2495 016d 2F       		.uleb128 0x2f
 2496 016e 0B       		.uleb128 0xb
 2497 016f 00       		.byte	0
 2498 0170 00       		.byte	0
 2499 0171 19       		.uleb128 0x19
 2500 0172 0F       		.uleb128 0xf
 2501 0173 00       		.byte	0
 2502 0174 0B       		.uleb128 0xb
 2503 0175 0B       		.uleb128 0xb
 2504 0176 49       		.uleb128 0x49
 2505 0177 13       		.uleb128 0x13
 2506 0178 00       		.byte	0
 2507 0179 00       		.byte	0
 2508 017a 1A       		.uleb128 0x1a
 2509 017b 26       		.uleb128 0x26
 2510 017c 00       		.byte	0
 2511 017d 49       		.uleb128 0x49
 2512 017e 13       		.uleb128 0x13
 2513 017f 00       		.byte	0
 2514 0180 00       		.byte	0
 2515 0181 1B       		.uleb128 0x1b
 2516 0182 2E       		.uleb128 0x2e
 2517 0183 00       		.byte	0
 2518 0184 3F       		.uleb128 0x3f
 2519 0185 19       		.uleb128 0x19
 2520 0186 3C       		.uleb128 0x3c
 2521 0187 19       		.uleb128 0x19
 2522 0188 6E       		.uleb128 0x6e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 83


 2523 0189 0E       		.uleb128 0xe
 2524 018a 03       		.uleb128 0x3
 2525 018b 0E       		.uleb128 0xe
 2526 018c 3A       		.uleb128 0x3a
 2527 018d 0B       		.uleb128 0xb
 2528 018e 3B       		.uleb128 0x3b
 2529 018f 0B       		.uleb128 0xb
 2530 0190 00       		.byte	0
 2531 0191 00       		.byte	0
 2532 0192 00       		.byte	0
 2533              		.section	.debug_loc,"",%progbits
 2534              	.Ldebug_loc0:
 2535              	.LLST0:
 2536 0000 08000000 		.4byte	.LVL1
 2537 0004 58000000 		.4byte	.LVL6
 2538 0008 0100     		.2byte	0x1
 2539 000a 54       		.byte	0x54
 2540 000b 00000000 		.4byte	0
 2541 000f 00000000 		.4byte	0
 2542              	.LLST1:
 2543 0013 00000000 		.4byte	.LVL7
 2544 0017 00000000 		.4byte	.LVL7
 2545 001b 0100     		.2byte	0x1
 2546 001d 50       		.byte	0x50
 2547 001e 00000000 		.4byte	.LVL7
 2548 0022 04000000 		.4byte	.LVL8
 2549 0026 0400     		.2byte	0x4
 2550 0028 F3       		.byte	0xf3
 2551 0029 01       		.uleb128 0x1
 2552 002a 50       		.byte	0x50
 2553 002b 9F       		.byte	0x9f
 2554 002c 04000000 		.4byte	.LVL8
 2555 0030 20000000 		.4byte	.LFE4
 2556 0034 0100     		.2byte	0x1
 2557 0036 50       		.byte	0x50
 2558 0037 00000000 		.4byte	0
 2559 003b 00000000 		.4byte	0
 2560              	.LLST2:
 2561 003f 12000000 		.4byte	.LVL9
 2562 0043 1A000000 		.4byte	.LVL10
 2563 0047 0100     		.2byte	0x1
 2564 0049 53       		.byte	0x53
 2565 004a 00000000 		.4byte	0
 2566 004e 00000000 		.4byte	0
 2567              	.LLST3:
 2568 0052 00000000 		.4byte	.LVL11
 2569 0056 06000000 		.4byte	.LVL12
 2570 005a 0100     		.2byte	0x1
 2571 005c 50       		.byte	0x50
 2572 005d 06000000 		.4byte	.LVL12
 2573 0061 0C000000 		.4byte	.LFE9
 2574 0065 0400     		.2byte	0x4
 2575 0067 F3       		.byte	0xf3
 2576 0068 01       		.uleb128 0x1
 2577 0069 50       		.byte	0x50
 2578 006a 9F       		.byte	0x9f
 2579 006b 00000000 		.4byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 84


 2580 006f 00000000 		.4byte	0
 2581              	.LLST4:
 2582 0073 00000000 		.4byte	.LVL13
 2583 0077 2D000000 		.4byte	.LVL17-1
 2584 007b 0100     		.2byte	0x1
 2585 007d 50       		.byte	0x50
 2586 007e 2D000000 		.4byte	.LVL17-1
 2587 0082 34000000 		.4byte	.LFE11
 2588 0086 0400     		.2byte	0x4
 2589 0088 F3       		.byte	0xf3
 2590 0089 01       		.uleb128 0x1
 2591 008a 50       		.byte	0x50
 2592 008b 9F       		.byte	0x9f
 2593 008c 00000000 		.4byte	0
 2594 0090 00000000 		.4byte	0
 2595              	.LLST5:
 2596 0094 06000000 		.4byte	.LVL14
 2597 0098 2D000000 		.4byte	.LVL17-1
 2598 009c 0100     		.2byte	0x1
 2599 009e 51       		.byte	0x51
 2600 009f 00000000 		.4byte	0
 2601 00a3 00000000 		.4byte	0
 2602              	.LLST6:
 2603 00a7 0A000000 		.4byte	.LVL15
 2604 00ab 30000000 		.4byte	.LVL18
 2605 00af 0100     		.2byte	0x1
 2606 00b1 54       		.byte	0x54
 2607 00b2 00000000 		.4byte	0
 2608 00b6 00000000 		.4byte	0
 2609              	.LLST7:
 2610 00ba 00000000 		.4byte	.LVL19
 2611 00be 0F000000 		.4byte	.LVL22-1
 2612 00c2 0100     		.2byte	0x1
 2613 00c4 50       		.byte	0x50
 2614 00c5 0F000000 		.4byte	.LVL22-1
 2615 00c9 38000000 		.4byte	.LFE12
 2616 00cd 0400     		.2byte	0x4
 2617 00cf F3       		.byte	0xf3
 2618 00d0 01       		.uleb128 0x1
 2619 00d1 50       		.byte	0x50
 2620 00d2 9F       		.byte	0x9f
 2621 00d3 00000000 		.4byte	0
 2622 00d7 00000000 		.4byte	0
 2623              	.LLST8:
 2624 00db 08000000 		.4byte	.LVL20
 2625 00df 1C000000 		.4byte	.LVL24
 2626 00e3 0100     		.2byte	0x1
 2627 00e5 54       		.byte	0x54
 2628 00e6 00000000 		.4byte	0
 2629 00ea 00000000 		.4byte	0
 2630              	.LLST9:
 2631 00ee 0C000000 		.4byte	.LVL21
 2632 00f2 34000000 		.4byte	.LVL25
 2633 00f6 0100     		.2byte	0x1
 2634 00f8 56       		.byte	0x56
 2635 00f9 00000000 		.4byte	0
 2636 00fd 00000000 		.4byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 85


 2637              	.LLST10:
 2638 0101 02000000 		.4byte	.LVL26
 2639 0105 06000000 		.4byte	.LVL27
 2640 0109 0200     		.2byte	0x2
 2641 010b 30       		.byte	0x30
 2642 010c 9F       		.byte	0x9f
 2643 010d 06000000 		.4byte	.LVL27
 2644 0111 0E000000 		.4byte	.LVL29
 2645 0115 0100     		.2byte	0x1
 2646 0117 54       		.byte	0x54
 2647 0118 10000000 		.4byte	.LVL30
 2648 011c 16000000 		.4byte	.LFE10
 2649 0120 0100     		.2byte	0x1
 2650 0122 54       		.byte	0x54
 2651 0123 00000000 		.4byte	0
 2652 0127 00000000 		.4byte	0
 2653              	.LLST11:
 2654 012b 00000000 		.4byte	.LVL35
 2655 012f 27000000 		.4byte	.LVL36-1
 2656 0133 0100     		.2byte	0x1
 2657 0135 50       		.byte	0x50
 2658 0136 27000000 		.4byte	.LVL36-1
 2659 013a 4C000000 		.4byte	.LFE14
 2660 013e 0400     		.2byte	0x4
 2661 0140 F3       		.byte	0xf3
 2662 0141 01       		.uleb128 0x1
 2663 0142 50       		.byte	0x50
 2664 0143 9F       		.byte	0x9f
 2665 0144 00000000 		.4byte	0
 2666 0148 00000000 		.4byte	0
 2667              	.LLST12:
 2668 014c 00000000 		.4byte	.LVL38
 2669 0150 06000000 		.4byte	.LVL39
 2670 0154 0100     		.2byte	0x1
 2671 0156 50       		.byte	0x50
 2672 0157 06000000 		.4byte	.LVL39
 2673 015b 08000000 		.4byte	.LVL40
 2674 015f 0200     		.2byte	0x2
 2675 0161 73       		.byte	0x73
 2676 0162 00       		.sleb128 0
 2677 0163 08000000 		.4byte	.LVL40
 2678 0167 0A000000 		.4byte	.LVL41
 2679 016b 0500     		.2byte	0x5
 2680 016d 0C       		.byte	0xc
 2681 016e 2B640040 		.4byte	0x4000642b
 2682 0172 0A000000 		.4byte	.LVL41
 2683 0176 10000000 		.4byte	.LFE15
 2684 017a 0400     		.2byte	0x4
 2685 017c F3       		.byte	0xf3
 2686 017d 01       		.uleb128 0x1
 2687 017e 50       		.byte	0x50
 2688 017f 9F       		.byte	0x9f
 2689 0180 00000000 		.4byte	0
 2690 0184 00000000 		.4byte	0
 2691              	.LLST13:
 2692 0188 00000000 		.4byte	.LVL42
 2693 018c 0E000000 		.4byte	.LVL44
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 86


 2694 0190 0100     		.2byte	0x1
 2695 0192 50       		.byte	0x50
 2696 0193 0E000000 		.4byte	.LVL44
 2697 0197 34000000 		.4byte	.LFE5
 2698 019b 0400     		.2byte	0x4
 2699 019d F3       		.byte	0xf3
 2700 019e 01       		.uleb128 0x1
 2701 019f 50       		.byte	0x50
 2702 01a0 9F       		.byte	0x9f
 2703 01a1 00000000 		.4byte	0
 2704 01a5 00000000 		.4byte	0
 2705              	.LLST14:
 2706 01a9 0A000000 		.4byte	.LVL43
 2707 01ad 16000000 		.4byte	.LVL46
 2708 01b1 0100     		.2byte	0x1
 2709 01b3 55       		.byte	0x55
 2710 01b4 16000000 		.4byte	.LVL46
 2711 01b8 28000000 		.4byte	.LVL48
 2712 01bc 0900     		.2byte	0x9
 2713 01be 75       		.byte	0x75
 2714 01bf 00       		.sleb128 0
 2715 01c0 03       		.byte	0x3
 2716 01c1 00000000 		.4byte	.LANCHOR0
 2717 01c5 1C       		.byte	0x1c
 2718 01c6 9F       		.byte	0x9f
 2719 01c7 00000000 		.4byte	0
 2720 01cb 00000000 		.4byte	0
 2721              	.LLST15:
 2722 01cf 00000000 		.4byte	.LVL49
 2723 01d3 07000000 		.4byte	.LVL50-1
 2724 01d7 0100     		.2byte	0x1
 2725 01d9 50       		.byte	0x50
 2726 01da 07000000 		.4byte	.LVL50-1
 2727 01de 34000000 		.4byte	.LFE13
 2728 01e2 0400     		.2byte	0x4
 2729 01e4 F3       		.byte	0xf3
 2730 01e5 01       		.uleb128 0x1
 2731 01e6 50       		.byte	0x50
 2732 01e7 9F       		.byte	0x9f
 2733 01e8 00000000 		.4byte	0
 2734 01ec 00000000 		.4byte	0
 2735              	.LLST16:
 2736 01f0 00000000 		.4byte	.LVL52
 2737 01f4 13000000 		.4byte	.LVL53-1
 2738 01f8 0100     		.2byte	0x1
 2739 01fa 50       		.byte	0x50
 2740 01fb 13000000 		.4byte	.LVL53-1
 2741 01ff 20000000 		.4byte	.LFE6
 2742 0203 0400     		.2byte	0x4
 2743 0205 F3       		.byte	0xf3
 2744 0206 01       		.uleb128 0x1
 2745 0207 50       		.byte	0x50
 2746 0208 9F       		.byte	0x9f
 2747 0209 00000000 		.4byte	0
 2748 020d 00000000 		.4byte	0
 2749              	.LLST17:
 2750 0211 00000000 		.4byte	.LVL56
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 87


 2751 0215 04000000 		.4byte	.LVL57
 2752 0219 0200     		.2byte	0x2
 2753 021b 30       		.byte	0x30
 2754 021c 9F       		.byte	0x9f
 2755 021d 04000000 		.4byte	.LVL57
 2756 0221 0C000000 		.4byte	.LFE16
 2757 0225 0100     		.2byte	0x1
 2758 0227 50       		.byte	0x50
 2759 0228 00000000 		.4byte	0
 2760 022c 00000000 		.4byte	0
 2761              	.LLST18:
 2762 0230 10000000 		.4byte	.LVL62
 2763 0234 27000000 		.4byte	.LVL63-1
 2764 0238 0100     		.2byte	0x1
 2765 023a 50       		.byte	0x50
 2766 023b 42000000 		.4byte	.LVL64
 2767 023f 59000000 		.4byte	.LVL65-1
 2768 0243 0100     		.2byte	0x1
 2769 0245 50       		.byte	0x50
 2770 0246 00000000 		.4byte	0
 2771 024a 00000000 		.4byte	0
 2772              		.section	.debug_aranges,"",%progbits
 2773 0000 AC000000 		.4byte	0xac
 2774 0004 0200     		.2byte	0x2
 2775 0006 00000000 		.4byte	.Ldebug_info0
 2776 000a 04       		.byte	0x4
 2777 000b 00       		.byte	0
 2778 000c 0000     		.2byte	0
 2779 000e 0000     		.2byte	0
 2780 0010 00000000 		.4byte	.LFB1
 2781 0014 68000000 		.4byte	.LFE1-.LFB1
 2782 0018 00000000 		.4byte	.LFB4
 2783 001c 20000000 		.4byte	.LFE4-.LFB4
 2784 0020 00000000 		.4byte	.LFB8
 2785 0024 10000000 		.4byte	.LFE8-.LFB8
 2786 0028 00000000 		.4byte	.LFB9
 2787 002c 0C000000 		.4byte	.LFE9-.LFB9
 2788 0030 00000000 		.4byte	.LFB11
 2789 0034 34000000 		.4byte	.LFE11-.LFB11
 2790 0038 00000000 		.4byte	.LFB12
 2791 003c 38000000 		.4byte	.LFE12-.LFB12
 2792 0040 00000000 		.4byte	.LFB10
 2793 0044 16000000 		.4byte	.LFE10-.LFB10
 2794 0048 00000000 		.4byte	.LFB3
 2795 004c 68000000 		.4byte	.LFE3-.LFB3
 2796 0050 00000000 		.4byte	.LFB14
 2797 0054 4C000000 		.4byte	.LFE14-.LFB14
 2798 0058 00000000 		.4byte	.LFB15
 2799 005c 10000000 		.4byte	.LFE15-.LFB15
 2800 0060 00000000 		.4byte	.LFB5
 2801 0064 34000000 		.4byte	.LFE5-.LFB5
 2802 0068 00000000 		.4byte	.LFB13
 2803 006c 34000000 		.4byte	.LFE13-.LFB13
 2804 0070 00000000 		.4byte	.LFB6
 2805 0074 20000000 		.4byte	.LFE6-.LFB6
 2806 0078 00000000 		.4byte	.LFB7
 2807 007c 38000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 88


 2808 0080 00000000 		.4byte	.LFB16
 2809 0084 0C000000 		.4byte	.LFE16-.LFB16
 2810 0088 00000000 		.4byte	.LFB17
 2811 008c 0C000000 		.4byte	.LFE17-.LFB17
 2812 0090 00000000 		.4byte	.LFB18
 2813 0094 20000000 		.4byte	.LFE18-.LFB18
 2814 0098 00000000 		.4byte	.LFB0
 2815 009c E4000000 		.4byte	.LFE0-.LFB0
 2816 00a0 00000000 		.4byte	.LFB2
 2817 00a4 1C000000 		.4byte	.LFE2-.LFB2
 2818 00a8 00000000 		.4byte	0
 2819 00ac 00000000 		.4byte	0
 2820              		.section	.debug_ranges,"",%progbits
 2821              	.Ldebug_ranges0:
 2822 0000 00000000 		.4byte	.LFB1
 2823 0004 68000000 		.4byte	.LFE1
 2824 0008 00000000 		.4byte	.LFB4
 2825 000c 20000000 		.4byte	.LFE4
 2826 0010 00000000 		.4byte	.LFB8
 2827 0014 10000000 		.4byte	.LFE8
 2828 0018 00000000 		.4byte	.LFB9
 2829 001c 0C000000 		.4byte	.LFE9
 2830 0020 00000000 		.4byte	.LFB11
 2831 0024 34000000 		.4byte	.LFE11
 2832 0028 00000000 		.4byte	.LFB12
 2833 002c 38000000 		.4byte	.LFE12
 2834 0030 00000000 		.4byte	.LFB10
 2835 0034 16000000 		.4byte	.LFE10
 2836 0038 00000000 		.4byte	.LFB3
 2837 003c 68000000 		.4byte	.LFE3
 2838 0040 00000000 		.4byte	.LFB14
 2839 0044 4C000000 		.4byte	.LFE14
 2840 0048 00000000 		.4byte	.LFB15
 2841 004c 10000000 		.4byte	.LFE15
 2842 0050 00000000 		.4byte	.LFB5
 2843 0054 34000000 		.4byte	.LFE5
 2844 0058 00000000 		.4byte	.LFB13
 2845 005c 34000000 		.4byte	.LFE13
 2846 0060 00000000 		.4byte	.LFB6
 2847 0064 20000000 		.4byte	.LFE6
 2848 0068 00000000 		.4byte	.LFB7
 2849 006c 38000000 		.4byte	.LFE7
 2850 0070 00000000 		.4byte	.LFB16
 2851 0074 0C000000 		.4byte	.LFE16
 2852 0078 00000000 		.4byte	.LFB17
 2853 007c 0C000000 		.4byte	.LFE17
 2854 0080 00000000 		.4byte	.LFB18
 2855 0084 20000000 		.4byte	.LFE18
 2856 0088 00000000 		.4byte	.LFB0
 2857 008c E4000000 		.4byte	.LFE0
 2858 0090 00000000 		.4byte	.LFB2
 2859 0094 1C000000 		.4byte	.LFE2
 2860 0098 00000000 		.4byte	0
 2861 009c 00000000 		.4byte	0
 2862              		.section	.debug_line,"",%progbits
 2863              	.Ldebug_line0:
 2864 0000 A6020000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 89


 2864      0200BB00 
 2864      00000201 
 2864      FB0E0D00 
 2864      01010101 
 2865              	.LASF10:
 2866 0000 75696E74 		.ascii	"uint16\000"
 2866      313600
 2867              	.LASF49:
 2868 0007 43617053 		.ascii	"CapSense_csv\000"
 2868      656E7365 
 2868      5F637376 
 2868      00
 2869              	.LASF65:
 2870 0014 43794578 		.ascii	"CyExitCriticalSection\000"
 2870      69744372 
 2870      69746963 
 2870      616C5365 
 2870      6374696F 
 2871              	.LASF80:
 2872 002a 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
 2872      72617465 
 2872      645F536F 
 2872      75726365 
 2872      5C50536F 
 2873              	.LASF48:
 2874 004c 43617053 		.ascii	"CapSense_initVar\000"
 2874      656E7365 
 2874      5F696E69 
 2874      74566172 
 2874      00
 2875              	.LASF53:
 2876 005d 43617053 		.ascii	"CapSense_pcTable\000"
 2876      656E7365 
 2876      5F706354 
 2876      61626C65 
 2876      00
 2877              	.LASF71:
 2878 006e 43617053 		.ascii	"CapSense_IdacCH0_SetValue\000"
 2878      656E7365 
 2878      5F496461 
 2878      63434830 
 2878      5F536574 
 2879              	.LASF24:
 2880 0088 736E7349 		.ascii	"snsIndex\000"
 2880      6E646578 
 2880      00
 2881              	.LASF7:
 2882 0091 6C6F6E67 		.ascii	"long long unsigned int\000"
 2882      206C6F6E 
 2882      6720756E 
 2882      7369676E 
 2882      65642069 
 2883              	.LASF63:
 2884 00a8 43617053 		.ascii	"CapSense_CompCH0_Enable\000"
 2884      656E7365 
 2884      5F436F6D 
 2884      70434830 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 90


 2884      5F456E61 
 2885              	.LASF26:
 2886 00c0 43617053 		.ascii	"CapSense_Enable\000"
 2886      656E7365 
 2886      5F456E61 
 2886      626C6500 
 2887              	.LASF34:
 2888 00d0 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2888      656E7365 
 2888      5F536574 
 2888      50726573 
 2888      63616C65 
 2889              	.LASF6:
 2890 00e6 6C6F6E67 		.ascii	"long long int\000"
 2890      206C6F6E 
 2890      6720696E 
 2890      7400
 2891              	.LASF0:
 2892 00f4 7369676E 		.ascii	"signed char\000"
 2892      65642063 
 2892      68617200 
 2893              	.LASF45:
 2894 0100 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2894      656E7365 
 2894      5F536574 
 2894      416E616C 
 2894      6F675377 
 2895              	.LASF4:
 2896 0121 6C6F6E67 		.ascii	"long int\000"
 2896      20696E74 
 2896      00
 2897              	.LASF16:
 2898 012a 72656731 		.ascii	"reg16\000"
 2898      3600
 2899              	.LASF9:
 2900 0130 75696E74 		.ascii	"uint8\000"
 2900      3800
 2901              	.LASF74:
 2902 0136 43617053 		.ascii	"CapSense_AMuxCH0_Init\000"
 2902      656E7365 
 2902      5F414D75 
 2902      78434830 
 2902      5F496E69 
 2903              	.LASF13:
 2904 014c 646F7562 		.ascii	"double\000"
 2904      6C6500
 2905              	.LASF27:
 2906 0153 43617053 		.ascii	"CapSense_EnableSensor\000"
 2906      656E7365 
 2906      5F456E61 
 2906      626C6553 
 2906      656E736F 
 2907              	.LASF70:
 2908 0169 43617053 		.ascii	"CapSense_IdacCH0_Stop\000"
 2908      656E7365 
 2908      5F496461 
 2908      63434830 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 91


 2908      5F53746F 
 2909              	.LASF60:
 2910 017f 43617053 		.ascii	"CapSense_widgetNumber\000"
 2910      656E7365 
 2910      5F776964 
 2910      6765744E 
 2910      756D6265 
 2911              	.LASF23:
 2912 0195 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2912      656E7365 
 2912      5F526561 
 2912      6453656E 
 2912      736F7252 
 2913              	.LASF11:
 2914 01ac 75696E74 		.ascii	"uint32\000"
 2914      333200
 2915              	.LASF81:
 2916 01b3 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Documents\\SnyderphonicsDevK"
 2916      73657273 
 2916      5C4A6566 
 2916      66536E79 
 2916      6465725C 
 2917 01e2 69745C77 		.ascii	"it\\weston_1\\weston_1.cydsn\000"
 2917      6573746F 
 2917      6E5F315C 
 2917      77657374 
 2917      6F6E5F31 
 2918              	.LASF72:
 2919 01fd 4379496E 		.ascii	"CyIntSetVector\000"
 2919      74536574 
 2919      56656374 
 2919      6F7200
 2920              	.LASF29:
 2921 020c 6D61736B 		.ascii	"mask\000"
 2921      00
 2922              	.LASF75:
 2923 0211 43617053 		.ascii	"CapSense_CompCH0_Init\000"
 2923      656E7365 
 2923      5F436F6D 
 2923      70434830 
 2923      5F496E69 
 2924              	.LASF28:
 2925 0227 706F7274 		.ascii	"port\000"
 2925      00
 2926              	.LASF50:
 2927 022c 43617053 		.ascii	"CapSense_sensorIndex\000"
 2927      656E7365 
 2927      5F73656E 
 2927      736F7249 
 2927      6E646578 
 2928              	.LASF40:
 2929 0241 43617053 		.ascii	"CapSense_ScanSensor\000"
 2929      656E7365 
 2929      5F536361 
 2929      6E53656E 
 2929      736F7200 
 2930              	.LASF8:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 92


 2931 0255 756E7369 		.ascii	"unsigned int\000"
 2931      676E6564 
 2931      20696E74 
 2931      00
 2932              	.LASF31:
 2933 0262 43617053 		.ascii	"CapSense_ClearSensors\000"
 2933      656E7365 
 2933      5F436C65 
 2933      61725365 
 2933      6E736F72 
 2934              	.LASF78:
 2935 0278 43617053 		.ascii	"CapSense_IdacCH0_SetRange\000"
 2935      656E7365 
 2935      5F496461 
 2935      63434830 
 2935      5F536574 
 2936              	.LASF5:
 2937 0292 6C6F6E67 		.ascii	"long unsigned int\000"
 2937      20756E73 
 2937      69676E65 
 2937      6420696E 
 2937      7400
 2938              	.LASF55:
 2939 02a4 43617053 		.ascii	"CapSense_maskTable\000"
 2939      656E7365 
 2939      5F6D6173 
 2939      6B546162 
 2939      6C6500
 2940              	.LASF54:
 2941 02b7 43617053 		.ascii	"CapSense_portTable\000"
 2941      656E7365 
 2941      5F706F72 
 2941      74546162 
 2941      6C6500
 2942              	.LASF62:
 2943 02ca 43617053 		.ascii	"CapSense_IntClock_Start\000"
 2943      656E7365 
 2943      5F496E74 
 2943      436C6F63 
 2943      6B5F5374 
 2944              	.LASF61:
 2945 02e2 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2945      74657243 
 2945      72697469 
 2945      63616C53 
 2945      65637469 
 2946              	.LASF3:
 2947 02f9 73686F72 		.ascii	"short unsigned int\000"
 2947      7420756E 
 2947      7369676E 
 2947      65642069 
 2947      6E7400
 2948              	.LASF68:
 2949 030c 43617053 		.ascii	"CapSense_IntClock_Stop\000"
 2949      656E7365 
 2949      5F496E74 
 2949      436C6F63 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 93


 2949      6B5F5374 
 2950              	.LASF25:
 2951 0323 73656E73 		.ascii	"sensor\000"
 2951      6F7200
 2952              	.LASF52:
 2953 032a 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2953      656E7365 
 2953      5F73656E 
 2953      736F7245 
 2953      6E61626C 
 2954              	.LASF37:
 2955 0344 736C6F74 		.ascii	"slot\000"
 2955      00
 2956              	.LASF17:
 2957 0349 72656733 		.ascii	"reg32\000"
 2957      3200
 2958              	.LASF59:
 2959 034f 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2959      656E7365 
 2959      5F616E61 
 2959      6C6F6753 
 2959      77697463 
 2960              	.LASF19:
 2961 036c 73697A65 		.ascii	"sizetype\000"
 2961      74797065 
 2961      00
 2962              	.LASF56:
 2963 0375 43617053 		.ascii	"CapSense_csTable\000"
 2963      656E7365 
 2963      5F637354 
 2963      61626C65 
 2963      00
 2964              	.LASF18:
 2965 0386 6C6F6E67 		.ascii	"long double\000"
 2965      20646F75 
 2965      626C6500 
 2966              	.LASF32:
 2967 0392 43617053 		.ascii	"CapSense_Stop\000"
 2967      656E7365 
 2967      5F53746F 
 2967      7000
 2968              	.LASF44:
 2969 03a0 7363616E 		.ascii	"scanSpeed\000"
 2969      53706565 
 2969      6400
 2970              	.LASF21:
 2971 03aa 656E4D61 		.ascii	"enMask\000"
 2971      736B00
 2972              	.LASF77:
 2973 03b1 43617053 		.ascii	"CapSense_IdacCH0_SetPolarity\000"
 2973      656E7365 
 2973      5F496461 
 2973      63434830 
 2973      5F536574 
 2974              	.LASF73:
 2975 03ce 4379496E 		.ascii	"CyIntSetPriority\000"
 2975      74536574 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 94


 2975      5072696F 
 2975      72697479 
 2975      00
 2976              	.LASF57:
 2977 03df 43617053 		.ascii	"CapSense_idacSettings\000"
 2977      656E7365 
 2977      5F696461 
 2977      63536574 
 2977      74696E67 
 2978              	.LASF12:
 2979 03f5 666C6F61 		.ascii	"float\000"
 2979      7400
 2980              	.LASF35:
 2981 03fb 70726573 		.ascii	"prescaler\000"
 2981      63616C65 
 2981      7200
 2982              	.LASF15:
 2983 0405 72656738 		.ascii	"reg8\000"
 2983      00
 2984              	.LASF22:
 2985 040a 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2985      656E7365 
 2985      5F46696E 
 2985      644E6578 
 2985      7453656E 
 2986              	.LASF1:
 2987 0422 756E7369 		.ascii	"unsigned char\000"
 2987      676E6564 
 2987      20636861 
 2987      7200
 2988              	.LASF76:
 2989 0430 43617053 		.ascii	"CapSense_IdacCH0_Init\000"
 2989      656E7365 
 2989      5F496461 
 2989      63434830 
 2989      5F496E69 
 2990              	.LASF58:
 2991 0446 43617053 		.ascii	"CapSense_widgetResolution\000"
 2991      656E7365 
 2991      5F776964 
 2991      67657452 
 2991      65736F6C 
 2992              	.LASF2:
 2993 0460 73686F72 		.ascii	"short int\000"
 2993      7420696E 
 2993      7400
 2994              	.LASF38:
 2995 046a 77696467 		.ascii	"widget\000"
 2995      657400
 2996              	.LASF36:
 2997 0471 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2997      656E7365 
 2997      5F536574 
 2997      5363616E 
 2997      536C6F74 
 2998              	.LASF42:
 2999 048e 43617053 		.ascii	"CapSense_GetPrescaler\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 95


 2999      656E7365 
 2999      5F476574 
 2999      50726573 
 2999      63616C65 
 3000              	.LASF79:
 3001 04a4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3001      43313120 
 3001      352E342E 
 3001      31203230 
 3001      31363036 
 3002 04d7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3002      20726576 
 3002      6973696F 
 3002      6E203233 
 3002      37373135 
 3003 050a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3003      66756E63 
 3003      74696F6E 
 3003      2D736563 
 3003      74696F6E 
 3004              	.LASF14:
 3005 0532 63686172 		.ascii	"char\000"
 3005      00
 3006              	.LASF64:
 3007 0537 43617053 		.ascii	"CapSense_IdacCH0_Enable\000"
 3007      656E7365 
 3007      5F496461 
 3007      63434830 
 3007      5F456E61 
 3008              	.LASF43:
 3009 054f 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 3009      656E7365 
 3009      5F536574 
 3009      5363616E 
 3009      53706565 
 3010              	.LASF66:
 3011 0565 43617053 		.ascii	"CapSense_AMuxCH0_Set\000"
 3011      656E7365 
 3011      5F414D75 
 3011      78434830 
 3011      5F536574 
 3012              	.LASF47:
 3013 057a 43617053 		.ascii	"CapSense_Start\000"
 3013      656E7365 
 3013      5F537461 
 3013      727400
 3014              	.LASF33:
 3015 0589 43617053 		.ascii	"CapSense_PostScan\000"
 3015      656E7365 
 3015      5F506F73 
 3015      74536361 
 3015      6E00
 3016              	.LASF20:
 3017 059b 656E6162 		.ascii	"enableInterrupts\000"
 3017      6C65496E 
 3017      74657272 
 3017      75707473 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccMiIv9P.s 			page 96


 3017      00
 3018              	.LASF69:
 3019 05ac 43617053 		.ascii	"CapSense_CompCH0_Stop\000"
 3019      656E7365 
 3019      5F436F6D 
 3019      70434830 
 3019      5F53746F 
 3020              	.LASF30:
 3021 05c2 43617053 		.ascii	"CapSense_DisableSensor\000"
 3021      656E7365 
 3021      5F446973 
 3021      61626C65 
 3021      53656E73 
 3022              	.LASF39:
 3023 05d9 43617053 		.ascii	"CapSense_PreScan\000"
 3023      656E7365 
 3023      5F507265 
 3023      5363616E 
 3023      00
 3024              	.LASF46:
 3025 05ea 43617053 		.ascii	"CapSense_Init\000"
 3025      656E7365 
 3025      5F496E69 
 3025      7400
 3026              	.LASF51:
 3027 05f8 43617053 		.ascii	"CapSense_sensorRaw\000"
 3027      656E7365 
 3027      5F73656E 
 3027      736F7252 
 3027      617700
 3028              	.LASF41:
 3029 060b 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 3029      656E7365 
 3029      5F536361 
 3029      6E456E61 
 3029      626C6564 
 3030              	.LASF67:
 3031 0627 43617053 		.ascii	"CapSense_AMuxCH0_Unset\000"
 3031      656E7365 
 3031      5F414D75 
 3031      78434830 
 3031      5F556E73 
 3032              	.LASF82:
 3033 063e 43617053 		.ascii	"CapSense_IsBusy\000"
 3033      656E7365 
 3033      5F497342 
 3033      75737900 
 3034              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
