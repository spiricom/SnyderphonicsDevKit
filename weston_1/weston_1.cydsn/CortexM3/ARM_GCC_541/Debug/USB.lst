ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USB.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USB_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USB_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USB_Init, %function
  25              	USB_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USB.c"
   1:Generated_Source\PSoC5/USB.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USB.c **** * \file USB.c
   3:Generated_Source\PSoC5/USB.c **** * \version 3.20
   4:Generated_Source\PSoC5/USB.c **** *
   5:Generated_Source\PSoC5/USB.c **** * \brief
   6:Generated_Source\PSoC5/USB.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USB.c **** *
   8:Generated_Source\PSoC5/USB.c **** * Note:
   9:Generated_Source\PSoC5/USB.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USB.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USB.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USB.c **** *
  13:Generated_Source\PSoC5/USB.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USB.c **** * \copyright
  15:Generated_Source\PSoC5/USB.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USB.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USB.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USB.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USB.c **** 
  21:Generated_Source\PSoC5/USB.c **** #include "USB_pvt.h"
  22:Generated_Source\PSoC5/USB.c **** #include "USB_cydmac.h"
  23:Generated_Source\PSoC5/USB.c **** #include "USB_hid.h"
  24:Generated_Source\PSoC5/USB.c **** #include "USB_Dp.h"
  25:Generated_Source\PSoC5/USB.c **** 
  26:Generated_Source\PSoC5/USB.c **** 
  27:Generated_Source\PSoC5/USB.c **** /***************************************
  28:Generated_Source\PSoC5/USB.c **** * Global data allocation
  29:Generated_Source\PSoC5/USB.c **** ***************************************/
  30:Generated_Source\PSoC5/USB.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 2


  31:Generated_Source\PSoC5/USB.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USB.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USB.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USB.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USB.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USB.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USB.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USB.c **** * functions.
  39:Generated_Source\PSoC5/USB.c **** */
  40:Generated_Source\PSoC5/USB.c **** uint8 USB_initVar = 0u;
  41:Generated_Source\PSoC5/USB.c **** 
  42:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USB.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USB.c ****         static void USB_InitEpDma(void);
  45:Generated_Source\PSoC5/USB.c **** 
  46:Generated_Source\PSoC5/USB.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USB.c ****         const uint8 USB_DmaChan[USB_MAX_EP] =
  48:Generated_Source\PSoC5/USB.c ****         {
  49:Generated_Source\PSoC5/USB.c ****             0u,
  50:Generated_Source\PSoC5/USB.c ****             0u,
  51:Generated_Source\PSoC5/USB.c ****             0u,
  52:Generated_Source\PSoC5/USB.c ****             0u,
  53:Generated_Source\PSoC5/USB.c ****             0u,
  54:Generated_Source\PSoC5/USB.c ****             0u,
  55:Generated_Source\PSoC5/USB.c ****             0u,
  56:Generated_Source\PSoC5/USB.c ****             0u,
  57:Generated_Source\PSoC5/USB.c ****             0u,
  58:Generated_Source\PSoC5/USB.c ****         };        
  59:Generated_Source\PSoC5/USB.c ****     #else
  60:Generated_Source\PSoC5/USB.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USB.c ****         uint8 USB_DmaChan[USB_MAX_EP];
  62:Generated_Source\PSoC5/USB.c ****         
  63:Generated_Source\PSoC5/USB.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USB.c ****         uint8 USB_DmaTd[USB_MAX_EP];
  65:Generated_Source\PSoC5/USB.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USB.c **** 
  68:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USB.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USB.c ****     uint8  USB_DmaEpBurstCnt   [USB_MAX_EP];
  72:Generated_Source\PSoC5/USB.c ****     
  73:Generated_Source\PSoC5/USB.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USB.c ****     uint8  USB_DmaEpLastBurstEl[USB_MAX_EP];
  75:Generated_Source\PSoC5/USB.c **** 
  76:Generated_Source\PSoC5/USB.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USB.c ****     uint8  USB_DmaEpBurstCntBackup  [USB_MAX_EP];
  78:Generated_Source\PSoC5/USB.c ****     uint32 USB_DmaEpBufferAddrBackup[USB_MAX_EP];
  79:Generated_Source\PSoC5/USB.c ****      
  80:Generated_Source\PSoC5/USB.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USB.c ****     const uint8 USB_DmaReqOut[USB_MAX_EP] =
  82:Generated_Source\PSoC5/USB.c ****     {
  83:Generated_Source\PSoC5/USB.c ****         0u,
  84:Generated_Source\PSoC5/USB.c ****         USB_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USB.c ****         USB_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USB.c ****         0u,
  87:Generated_Source\PSoC5/USB.c ****         0u,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 3


  88:Generated_Source\PSoC5/USB.c ****         0u,
  89:Generated_Source\PSoC5/USB.c ****         0u,
  90:Generated_Source\PSoC5/USB.c ****         0u,
  91:Generated_Source\PSoC5/USB.c ****         0u,
  92:Generated_Source\PSoC5/USB.c ****     };
  93:Generated_Source\PSoC5/USB.c **** 
  94:Generated_Source\PSoC5/USB.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USB.c ****     const uint8 USB_DmaBurstEndOut[USB_MAX_EP] =
  96:Generated_Source\PSoC5/USB.c ****     {
  97:Generated_Source\PSoC5/USB.c ****         0u,
  98:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USB.c ****     };
 107:Generated_Source\PSoC5/USB.c ****     
 108:Generated_Source\PSoC5/USB.c **** #else
 109:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USB.c ****         static uint8 clearInDataRdyStatus = USB_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USB.c ****         uint8 USB_DmaNextTd[USB_MAX_EP];
 112:Generated_Source\PSoC5/USB.c ****         const uint8 USB_epX_TD_TERMOUT_EN[USB_MAX_EP] =
 113:Generated_Source\PSoC5/USB.c ****         {
 114:Generated_Source\PSoC5/USB.c ****             0u,
 115:Generated_Source\PSoC5/USB.c ****             0u,
 116:Generated_Source\PSoC5/USB.c ****             0u,
 117:Generated_Source\PSoC5/USB.c ****             0u,
 118:Generated_Source\PSoC5/USB.c ****             0u,
 119:Generated_Source\PSoC5/USB.c ****             0u,
 120:Generated_Source\PSoC5/USB.c ****             0u,
 121:Generated_Source\PSoC5/USB.c ****             0u,
 122:Generated_Source\PSoC5/USB.c ****             0u,
 123:Generated_Source\PSoC5/USB.c ****         };
 124:Generated_Source\PSoC5/USB.c **** 
 125:Generated_Source\PSoC5/USB.c ****         volatile uint16 USB_inLength[USB_MAX_EP];
 126:Generated_Source\PSoC5/USB.c ****         const uint8 *USB_inDataPointer[USB_MAX_EP];
 127:Generated_Source\PSoC5/USB.c ****         volatile uint8 USB_inBufFull[USB_MAX_EP];
 128:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USB.c **** 
 132:Generated_Source\PSoC5/USB.c **** 
 133:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USB.c **** * Function Name: USB_Start
 135:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USB.c **** *
 137:Generated_Source\PSoC5/USB.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USB.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USB.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USB.c **** *   operation.
 141:Generated_Source\PSoC5/USB.c **** *
 142:Generated_Source\PSoC5/USB.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USB.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USB.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 4


 145:Generated_Source\PSoC5/USB.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USB.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USB.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USB.c **** *
 149:Generated_Source\PSoC5/USB.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USB.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USB.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USB.c **** *
 153:Generated_Source\PSoC5/USB.c **** *  \param device
 154:Generated_Source\PSoC5/USB.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USB.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USB.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USB.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USB.c **** *  \param mode:
 159:Generated_Source\PSoC5/USB.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USB.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USB.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USB.c **** *   following list.
 163:Generated_Source\PSoC5/USB.c **** *
 164:Generated_Source\PSoC5/USB.c **** *       *USB_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USB.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USB.c **** *
 167:Generated_Source\PSoC5/USB.c **** *       *USB_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USB.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USB.c **** *
 170:Generated_Source\PSoC5/USB.c **** *       *USB_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USB.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USB.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USB.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USB.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USB.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USB.c **** * \globalvars
 177:Generated_Source\PSoC5/USB.c **** *  \ref USB_initVar
 178:Generated_Source\PSoC5/USB.c **** *
 179:Generated_Source\PSoC5/USB.c **** * \sideeffect
 180:Generated_Source\PSoC5/USB.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USB.c **** *
 182:Generated_Source\PSoC5/USB.c **** * \reentrant
 183:Generated_Source\PSoC5/USB.c **** *  No.
 184:Generated_Source\PSoC5/USB.c **** *
 185:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USB.c **** void USB_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USB.c **** {
 188:Generated_Source\PSoC5/USB.c ****     if (0u == USB_initVar)
 189:Generated_Source\PSoC5/USB.c ****     {
 190:Generated_Source\PSoC5/USB.c ****         USB_Init();
 191:Generated_Source\PSoC5/USB.c ****         USB_initVar = 1u;
 192:Generated_Source\PSoC5/USB.c ****     }
 193:Generated_Source\PSoC5/USB.c **** 
 194:Generated_Source\PSoC5/USB.c ****     USB_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USB.c **** }
 196:Generated_Source\PSoC5/USB.c **** 
 197:Generated_Source\PSoC5/USB.c **** 
 198:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USB.c **** * Function Name: USB_Init
 200:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USB.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 5


 202:Generated_Source\PSoC5/USB.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USB.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USB.c **** * USB_Init() because the USB_Start() routine calls
 205:Generated_Source\PSoC5/USB.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USB.c **** *
 207:Generated_Source\PSoC5/USB.c **** * \reentrant
 208:Generated_Source\PSoC5/USB.c **** *  No.
 209:Generated_Source\PSoC5/USB.c **** *
 210:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USB.c **** void USB_Init(void) 
 212:Generated_Source\PSoC5/USB.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USB.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USB.c ****     USB_USB_CLK_EN_REG = USB_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USB.c **** 
 217:Generated_Source\PSoC5/USB.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USB.c ****     * USB_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USB.c ****     */
 220:Generated_Source\PSoC5/USB.c **** 
 221:Generated_Source\PSoC5/USB.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR1_REG &= ~ (uint32) USB_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USB.c **** 
 224:Generated_Source\PSoC5/USB.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USB.c ****     USB_BUS_RST_CNT_REG = USB_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USB.c **** 
 227:Generated_Source\PSoC5/USB.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USB.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USB.c ****     */
 230:Generated_Source\PSoC5/USB.c ****     USB_POWER_CTRL_REG = USB_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USB.c **** 
 232:Generated_Source\PSoC5/USB.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USB.c ****     USB_POWER_CTRL_REG |= USB_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USB.c **** 
 235:Generated_Source\PSoC5/USB.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USB.c ****     USB_POWER_CTRL_REG &= (uint32) ~USB_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USB.c ****     CyDelayUs(USB_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USB.c ****     USB_POWER_CTRL_REG &= (uint32) ~USB_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USB.c **** 
 240:Generated_Source\PSoC5/USB.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USB.c ****     USB_CR1_REG = USB_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USB.c **** 
 243:Generated_Source\PSoC5/USB.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USB.c ****     USB_INTR_LVL_SEL_REG = USB_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USB.c **** 
 246:Generated_Source\PSoC5/USB.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 6


 247:Generated_Source\PSoC5/USB.c ****     USB_INTR_SIE_MASK_REG = USB_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USB.c **** 
 249:Generated_Source\PSoC5/USB.c **** #else
 250:Generated_Source\PSoC5/USB.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
  43 0006 0546     		mov	r5, r0
  44              	.LVL1:
 251:Generated_Source\PSoC5/USB.c **** 
 252:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USB.c ****     uint16 i;
 254:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USB.c **** 
 256:Generated_Source\PSoC5/USB.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USB.c ****     USB_PM_ACT_CFG_REG |= USB_PM_ACT_EN_FSUSB;
  45              		.loc 1 257 0
  46 0008 3C4A     		ldr	r2, .L3
  47 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USB.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USB.c ****     USB_PM_STBY_CFG_REG |= USB_PM_STBY_EN_FSUSB;
  50              		.loc 1 259 0
  51 0012 1032     		adds	r2, r2, #16
  52 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0016 43F00103 		orr	r3, r3, #1
  54 001a 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USB.c **** 
 261:Generated_Source\PSoC5/USB.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USB.c ****     USB_USB_CLK_EN_REG = USB_USB_CLK_ENABLE;
  55              		.loc 1 262 0
  56 001c 0127     		movs	r7, #1
  57 001e 384B     		ldr	r3, .L3+4
  58 0020 1F70     		strb	r7, [r3]
 263:Generated_Source\PSoC5/USB.c **** 
 264:Generated_Source\PSoC5/USB.c ****     USB_CR1_REG = USB_CR1_ENABLE_LOCK;
  59              		.loc 1 264 0
  60 0022 0226     		movs	r6, #2
  61 0024 943B     		subs	r3, r3, #148
  62 0026 1E70     		strb	r6, [r3]
 265:Generated_Source\PSoC5/USB.c **** 
 266:Generated_Source\PSoC5/USB.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USB.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR0_REG &= (uint8) ~USB_USBIO_CR0_TEN;
  63              		.loc 1 268 0
  64 0028 02F5E252 		add	r2, r2, #7232
  65 002c 1B32     		adds	r2, r2, #27
  66 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0030 03F07F03 		and	r3, r3, #127
  68 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USB.c ****     CyDelayUs(USB_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  69              		.loc 1 269 0
  70 0036 0020     		movs	r0, #0
  71 0038 FFF7FEFF 		bl	CyDelayUs
  72              	.LVL2:
 270:Generated_Source\PSoC5/USB.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 7


 271:Generated_Source\PSoC5/USB.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USB.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USB.c ****     */
 274:Generated_Source\PSoC5/USB.c ****     USB_PM_USB_CR0_REG &= (uint8) ~(USB_PM_USB_CR0_PD_N |
  73              		.loc 1 274 0
  74 003c 314C     		ldr	r4, .L3+8
  75 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  76 0040 03F0F903 		and	r3, r3, #249
  77 0044 2370     		strb	r3, [r4]
 275:Generated_Source\PSoC5/USB.c ****                                                  USB_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USB.c **** 
 277:Generated_Source\PSoC5/USB.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR1_REG &= (uint8) ~USB_USBIO_CR1_IOMODE;
  78              		.loc 1 278 0
  79 0046 304A     		ldr	r2, .L3+12
  80 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  81 004a 03F0DF03 		and	r3, r3, #223
  82 004e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USB.c **** 
 280:Generated_Source\PSoC5/USB.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USB.c ****     USB_PM_USB_CR0_REG |= USB_PM_USB_CR0_REF_EN;
  83              		.loc 1 281 0
  84 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  85 0052 3B43     		orrs	r3, r3, r7
  86 0054 2370     		strb	r3, [r4]
 282:Generated_Source\PSoC5/USB.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USB.c ****     CyDelayUs(USB_WAIT_REG_STABILITY_1US);
  87              		.loc 1 283 0
  88 0056 3846     		mov	r0, r7
  89 0058 FFF7FEFF 		bl	CyDelayUs
  90              	.LVL3:
 284:Generated_Source\PSoC5/USB.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USB.c ****     CyDelayUs(USB_WAIT_VREF_RESTORE);
  91              		.loc 1 285 0
  92 005c 2820     		movs	r0, #40
  93 005e FFF7FEFF 		bl	CyDelayUs
  94              	.LVL4:
 286:Generated_Source\PSoC5/USB.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USB.c ****     USB_DM_INP_DIS_REG &= (uint8) ~USB_DM_MASK;
  95              		.loc 1 287 0
  96 0062 2A4B     		ldr	r3, .L3+16
  97 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98 0066 02F07F02 		and	r2, r2, #127
  99 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USB.c ****     USB_DP_INP_DIS_REG &= (uint8) ~USB_DP_MASK;
 100              		.loc 1 288 0
 101 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 102 006e 02F0BF02 		and	r2, r2, #191
 103 0072 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/USB.c **** 
 290:Generated_Source\PSoC5/USB.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USB.c ****     USB_PM_USB_CR0_REG |= USB_PM_USB_CR0_PD_N;
 104              		.loc 1 291 0
 105 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 106 0076 3343     		orrs	r3, r3, r6
 107 0078 2370     		strb	r3, [r4]
 292:Generated_Source\PSoC5/USB.c ****     CyDelayUs(USB_WAIT_PD_PULLUP_N_ENABLE);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 8


 108              		.loc 1 292 0
 109 007a 3046     		mov	r0, r6
 110 007c FFF7FEFF 		bl	CyDelayUs
 111              	.LVL5:
 293:Generated_Source\PSoC5/USB.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USB.c ****     USB_PM_USB_CR0_REG |= USB_PM_USB_CR0_PD_PULLUP_N;
 112              		.loc 1 294 0
 113 0080 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 114 0082 43F00403 		orr	r3, r3, #4
 115 0086 2370     		strb	r3, [r4]
 295:Generated_Source\PSoC5/USB.c **** 
 296:Generated_Source\PSoC5/USB.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USB.c ****     CY_SET_REG8(USB_ARB_RW1_WA_PTR,     0u);
 116              		.loc 1 297 0
 117 0088 0023     		movs	r3, #0
 118 008a 214A     		ldr	r2, .L3+20
 119 008c 1370     		strb	r3, [r2]
 298:Generated_Source\PSoC5/USB.c ****     CY_SET_REG8(USB_ARB_RW1_WA_MSB_PTR, 0u);
 120              		.loc 1 298 0
 121 008e 0132     		adds	r2, r2, #1
 122 0090 1370     		strb	r3, [r2]
 299:Generated_Source\PSoC5/USB.c **** 
 300:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USB.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USB.c ****     for (i = 0u; i < USB_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USB.c ****     {
 304:Generated_Source\PSoC5/USB.c ****         USB_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USB.c **** 
 306:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USB.c ****         USB_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USB.c ****     }
 310:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USB.c **** 
 312:Generated_Source\PSoC5/USB.c ****     CyExitCriticalSection(enableInterrupts);
 123              		.loc 1 312 0
 124 0092 2846     		mov	r0, r5
 125 0094 FFF7FEFF 		bl	CyExitCriticalSection
 126              	.LVL6:
 313:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USB.c **** 
 315:Generated_Source\PSoC5/USB.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USB.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority     (USB_INTR_HI_VECT_NUM,  USB_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_INTR_HI_VECT_NUM, &USB_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USB.c **** 
 321:Generated_Source\PSoC5/USB.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority     (USB_INTR_LO_VECT_NUM,  USB_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_INTR_LO_VECT_NUM, &USB_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USB.c **** 
 325:Generated_Source\PSoC5/USB.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority     (USB_INTR_MED_VECT_NUM,  USB_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_INTR_MED_VECT_NUM, &USB_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USB.c **** 
 329:Generated_Source\PSoC5/USB.c **** #else
 330:Generated_Source\PSoC5/USB.c ****     /* Set bus reset interrupt. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 9


 331:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority(USB_BUS_RESET_VECT_NUM, USB_BUS_RESET_PRIOR);
 127              		.loc 1 331 0
 128 0098 0721     		movs	r1, #7
 129 009a 1720     		movs	r0, #23
 130 009c FFF7FEFF 		bl	CyIntSetPriority
 131              	.LVL7:
 332:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_BUS_RESET_VECT_NUM,   &USB_BUS_RESET_ISR);
 132              		.loc 1 332 0
 133 00a0 1C49     		ldr	r1, .L3+24
 134 00a2 1720     		movs	r0, #23
 135 00a4 FFF7FEFF 		bl	CyIntSetVector
 136              	.LVL8:
 333:Generated_Source\PSoC5/USB.c **** 
 334:Generated_Source\PSoC5/USB.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority(USB_EP_0_VECT_NUM, USB_EP_0_PRIOR);
 137              		.loc 1 335 0
 138 00a8 0721     		movs	r1, #7
 139 00aa 1820     		movs	r0, #24
 140 00ac FFF7FEFF 		bl	CyIntSetPriority
 141              	.LVL9:
 336:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_EP_0_VECT_NUM,   &USB_EP_0_ISR);
 142              		.loc 1 336 0
 143 00b0 1949     		ldr	r1, .L3+28
 144 00b2 1820     		movs	r0, #24
 145 00b4 FFF7FEFF 		bl	CyIntSetVector
 146              	.LVL10:
 337:Generated_Source\PSoC5/USB.c **** 
 338:Generated_Source\PSoC5/USB.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USB.c ****     #if (USB_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_SOF_VECT_NUM,  USB_SOF_PRIOR);
 147              		.loc 1 340 0
 148 00b8 0721     		movs	r1, #7
 149 00ba 1520     		movs	r0, #21
 150 00bc FFF7FEFF 		bl	CyIntSetPriority
 151              	.LVL11:
 341:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_SOF_VECT_NUM, &USB_SOF_ISR);
 152              		.loc 1 341 0
 153 00c0 1649     		ldr	r1, .L3+32
 154 00c2 1520     		movs	r0, #21
 155 00c4 FFF7FEFF 		bl	CyIntSetVector
 156              	.LVL12:
 342:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USB.c **** 
 344:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USB.c ****     #if (USB_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_1_VECT_NUM,  USB_EP_1_PRIOR);
 157              		.loc 1 346 0
 158 00c8 0721     		movs	r1, #7
 159 00ca 0420     		movs	r0, #4
 160 00cc FFF7FEFF 		bl	CyIntSetPriority
 161              	.LVL13:
 347:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_1_VECT_NUM,  &USB_EP_1_ISR);
 162              		.loc 1 347 0
 163 00d0 1349     		ldr	r1, .L3+36
 164 00d2 0420     		movs	r0, #4
 165 00d4 FFF7FEFF 		bl	CyIntSetVector
 166              	.LVL14:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 10


 348:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USB.c **** 
 350:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USB.c ****     #if (USB_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_2_VECT_NUM,  USB_EP_2_PRIOR);
 167              		.loc 1 352 0
 168 00d8 0721     		movs	r1, #7
 169 00da 0520     		movs	r0, #5
 170 00dc FFF7FEFF 		bl	CyIntSetPriority
 171              	.LVL15:
 353:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_2_VECT_NUM, &USB_EP_2_ISR);
 172              		.loc 1 353 0
 173 00e0 1049     		ldr	r1, .L3+40
 174 00e2 0520     		movs	r0, #5
 175 00e4 FFF7FEFF 		bl	CyIntSetVector
 176              	.LVL16:
 354:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USB.c **** 
 356:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USB.c ****     #if (USB_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_3_VECT_NUM,  USB_EP_3_PRIOR);
 359:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_3_VECT_NUM, &USB_EP_3_ISR);
 360:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USB.c **** 
 362:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USB.c ****     #if (USB_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_4_VECT_NUM,  USB_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_4_VECT_NUM, &USB_EP_4_ISR);
 366:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USB.c **** 
 368:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USB.c ****     #if (USB_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_5_VECT_NUM,  USB_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_5_VECT_NUM, &USB_EP_5_ISR);
 372:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USB.c **** 
 374:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USB.c ****     #if (USB_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_6_VECT_NUM,  USB_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_6_VECT_NUM, &USB_EP_6_ISR);
 378:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USB.c **** 
 380:Generated_Source\PSoC5/USB.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USB.c ****     #if (USB_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_7_VECT_NUM,  USB_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_7_VECT_NUM, &USB_EP_7_ISR);
 384:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USB.c **** 
 386:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USB.c ****     #if (USB_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_8_VECT_NUM,  USB_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_8_VECT_NUM, &USB_EP_8_ISR);
 390:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USB.c **** 
 392:Generated_Source\PSoC5/USB.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_DMA && USB_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_ARB_VECT_NUM,  USB_ARB_PRIOR);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 11


 395:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_ARB_VECT_NUM, &USB_ARB_ISR);
 396:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_DMA && USB_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USB.c **** 
 399:Generated_Source\PSoC5/USB.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USB.c **** #if (USB_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority     (USB_DP_INTC_VECT_NUM,  USB_DP_INTC_PRIORITY);
 177              		.loc 1 401 0
 178 00e8 0721     		movs	r1, #7
 179 00ea 0C20     		movs	r0, #12
 180 00ec FFF7FEFF 		bl	CyIntSetPriority
 181              	.LVL17:
 402:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_DP_INTC_VECT_NUM, &USB_DP_ISR);
 182              		.loc 1 402 0
 183 00f0 0D49     		ldr	r1, .L3+44
 184 00f2 0C20     		movs	r0, #12
 185 00f4 FFF7FEFF 		bl	CyIntSetVector
 186              	.LVL18:
 187 00f8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 188              	.LVL19:
 189              	.L4:
 190 00fa 00BF     		.align	2
 191              	.L3:
 192 00fc A5430040 		.word	1073759141
 193 0100 9D600040 		.word	1073766557
 194 0104 94430040 		.word	1073759124
 195 0108 12600040 		.word	1073766418
 196 010c F8510040 		.word	1073762808
 197 0110 84600040 		.word	1073766532
 198 0114 00000000 		.word	USB_BUS_RESET_ISR
 199 0118 00000000 		.word	USB_EP_0_ISR
 200 011c 00000000 		.word	USB_SOF_ISR
 201 0120 00000000 		.word	USB_EP_1_ISR
 202 0124 00000000 		.word	USB_EP_2_ISR
 203 0128 00000000 		.word	USB_DP_ISR
 204              		.cfi_endproc
 205              	.LFE1:
 206              		.size	USB_Init, .-USB_Init
 207              		.section	.text.USB_InitComponent,"ax",%progbits
 208              		.align	2
 209              		.global	USB_InitComponent
 210              		.thumb
 211              		.thumb_func
 212              		.type	USB_InitComponent, %function
 213              	USB_InitComponent:
 214              	.LFB2:
 403:Generated_Source\PSoC5/USB.c **** #endif /* (USB_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USB.c **** 
 405:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USB.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USB.c ****     USB_InitEpDma();
 408:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USB.c **** }
 410:Generated_Source\PSoC5/USB.c **** 
 411:Generated_Source\PSoC5/USB.c **** 
 412:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USB.c **** * Function Name: USB_InitComponent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 12


 414:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USB.c **** *
 416:Generated_Source\PSoC5/USB.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USB.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USB.c **** *
 419:Generated_Source\PSoC5/USB.c **** * \param device:
 420:Generated_Source\PSoC5/USB.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USB.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USB.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USB.c **** *   field.
 424:Generated_Source\PSoC5/USB.c **** *  \param mode:
 425:Generated_Source\PSoC5/USB.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USB.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USB.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USB.c **** *   following list.
 429:Generated_Source\PSoC5/USB.c **** *
 430:Generated_Source\PSoC5/USB.c **** *       *USB_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USB.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USB.c **** *
 433:Generated_Source\PSoC5/USB.c **** *       *USB_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USB.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USB.c **** *
 436:Generated_Source\PSoC5/USB.c **** *       *USB_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USB.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USB.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USB.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USB.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USB.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USB.c **** *
 443:Generated_Source\PSoC5/USB.c **** * \globalvars
 444:Generated_Source\PSoC5/USB.c **** *   \ref USB_device
 445:Generated_Source\PSoC5/USB.c **** *   \ref USB_transferState
 446:Generated_Source\PSoC5/USB.c **** *   \ref USB_configuration
 447:Generated_Source\PSoC5/USB.c **** *   \ref USB_deviceStatus
 448:Generated_Source\PSoC5/USB.c **** *
 449:Generated_Source\PSoC5/USB.c **** *   \ref USB_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USB.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USB.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USB.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USB.c **** *
 454:Generated_Source\PSoC5/USB.c **** *   \ref USB_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USB.c **** *
 456:Generated_Source\PSoC5/USB.c **** * \reentrant
 457:Generated_Source\PSoC5/USB.c **** *  No.
 458:Generated_Source\PSoC5/USB.c **** *
 459:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USB.c **** void USB_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USB.c **** {
 215              		.loc 1 461 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              	.LVL20:
 220 0000 08B5     		push	{r3, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 13


 462:Generated_Source\PSoC5/USB.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USB.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USB.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USB.c ****     */
 466:Generated_Source\PSoC5/USB.c **** #if defined(USB_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USB.c ****     uint8 i;
 468:Generated_Source\PSoC5/USB.c **** 
 469:Generated_Source\PSoC5/USB.c ****     for (i = 0u; i < USB_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USB.c ****     {
 471:Generated_Source\PSoC5/USB.c ****         USB_hidProtocol[i] = USB_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USB.c ****     }
 473:Generated_Source\PSoC5/USB.c **** #endif /* USB_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USB.c **** 
 475:Generated_Source\PSoC5/USB.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USB.c ****     USB_device = device;
 224              		.loc 1 476 0
 225 0002 204B     		ldr	r3, .L12
 226 0004 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC5/USB.c **** 
 478:Generated_Source\PSoC5/USB.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USB.c ****     USB_transferState   = USB_TRANS_STATE_IDLE;
 227              		.loc 1 479 0
 228 0006 0023     		movs	r3, #0
 229 0008 1F4A     		ldr	r2, .L12+4
 230 000a 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/USB.c ****     USB_configurationChanged = 0u;
 231              		.loc 1 480 0
 232 000c 1F4A     		ldr	r2, .L12+8
 233 000e 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC5/USB.c ****     USB_configuration   = 0u;
 234              		.loc 1 481 0
 235 0010 1F4A     		ldr	r2, .L12+12
 236 0012 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC5/USB.c ****     USB_interfaceNumber = 0u;
 237              		.loc 1 482 0
 238 0014 1F4A     		ldr	r2, .L12+16
 239 0016 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC5/USB.c ****     USB_deviceAddress   = 0u;
 240              		.loc 1 483 0
 241 0018 1F4A     		ldr	r2, .L12+20
 242 001a 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC5/USB.c ****     USB_deviceStatus    = 0u;
 243              		.loc 1 484 0
 244 001c 1F4A     		ldr	r2, .L12+24
 245 001e 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC5/USB.c ****     USB_lastPacketSize  = 0u;
 246              		.loc 1 485 0
 247 0020 1F4A     		ldr	r2, .L12+28
 248 0022 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USB.c **** 
 487:Generated_Source\PSoC5/USB.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USB.c ****     CyIntEnable(USB_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USB.c ****     CyIntEnable(USB_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USB.c ****     CyIntEnable(USB_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USB.c **** #else
 493:Generated_Source\PSoC5/USB.c ****     CyIntEnable(USB_BUS_RESET_VECT_NUM);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 14


 249              		.loc 1 493 0
 250 0024 1F4B     		ldr	r3, .L12+32
 251 0026 4FF40002 		mov	r2, #8388608
 252 002a 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USB.c ****     CyIntEnable(USB_EP_0_VECT_NUM);
 253              		.loc 1 494 0
 254 002c 4FF08072 		mov	r2, #16777216
 255 0030 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USB.c **** 
 496:Generated_Source\PSoC5/USB.c ****     #if (USB_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_SOF_VECT_NUM);
 256              		.loc 1 497 0
 257 0032 4FF40012 		mov	r2, #2097152
 258 0036 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USB.c **** 
 500:Generated_Source\PSoC5/USB.c ****     #if (USB_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_1_VECT_NUM);
 259              		.loc 1 501 0
 260 0038 1022     		movs	r2, #16
 261 003a 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USB.c **** 
 504:Generated_Source\PSoC5/USB.c ****     #if (USB_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_2_VECT_NUM);
 262              		.loc 1 505 0
 263 003c 2022     		movs	r2, #32
 264 003e 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USB.c **** 
 508:Generated_Source\PSoC5/USB.c ****     #if (USB_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_3_VECT_NUM);
 510:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USB.c **** 
 512:Generated_Source\PSoC5/USB.c ****     #if (USB_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USB.c **** 
 516:Generated_Source\PSoC5/USB.c ****     #if (USB_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USB.c **** 
 520:Generated_Source\PSoC5/USB.c ****     #if (USB_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USB.c ****     #endif /* USB_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USB.c **** 
 524:Generated_Source\PSoC5/USB.c ****     #if (USB_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USB.c **** 
 528:Generated_Source\PSoC5/USB.c ****     #if (USB_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USB.c **** 
 533:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA && USB_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USB.c ****     /* Enable ARB EP interrupt sources. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 15


 535:Generated_Source\PSoC5/USB.c ****     USB_ARB_INT_EN_REG = USB_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USB.c **** 
 537:Generated_Source\PSoC5/USB.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USB.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USB.c **** #endif   /* (USB_EP_MANAGEMENT_DMA && USB_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USB.c **** 
 542:Generated_Source\PSoC5/USB.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USB.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USB.c ****     USB_ARB_CFG_REG = USB_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USB.c **** 
 547:Generated_Source\PSoC5/USB.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USB.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USB.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USB.c **** 
 551:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USB.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USB.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USB_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USB.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USB.c **** 
 557:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USB.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USB.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USB.c ****         #else
 562:Generated_Source\PSoC5/USB.c ****             #if (USB_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USB.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USB.c ****                 USB_EP_DMA_Done_isr_StartEx(&USB_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USB.c ****                 USB_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USB.c ****                 USB_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USB.c ****             #endif /* (USB_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USB.c **** 
 572:Generated_Source\PSoC5/USB.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USB.c ****     switch(mode)
 265              		.loc 1 573 0
 266 0040 11B1     		cbz	r1, .L7
 267 0042 0129     		cmp	r1, #1
 268 0044 06D0     		beq	.L8
 269 0046 0BE0     		b	.L10
 270              	.L7:
 574:Generated_Source\PSoC5/USB.c ****     {
 575:Generated_Source\PSoC5/USB.c ****     case USB_3V_OPERATION:
 576:Generated_Source\PSoC5/USB.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USB.c ****         USB_CR1_REG &= (uint8) ~USB_CR1_REG_ENABLE;
 271              		.loc 1 577 0
 272 0048 174A     		ldr	r2, .L12+36
 273 004a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 274 004c 03F0FE03 		and	r3, r3, #254
 275 0050 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USB.c ****         break;
 276              		.loc 1 578 0
 277 0052 0AE0     		b	.L9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 16


 278              	.L8:
 579:Generated_Source\PSoC5/USB.c **** 
 580:Generated_Source\PSoC5/USB.c ****     case USB_5V_OPERATION:
 581:Generated_Source\PSoC5/USB.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USB.c ****         USB_CR1_REG |= (uint8)  USB_CR1_REG_ENABLE;
 279              		.loc 1 582 0
 280 0054 144A     		ldr	r2, .L12+36
 281 0056 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 282 0058 43F00103 		orr	r3, r3, #1
 283 005c 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USB.c ****         break;
 284              		.loc 1 583 0
 285 005e 04E0     		b	.L9
 286              	.L10:
 584:Generated_Source\PSoC5/USB.c **** 
 585:Generated_Source\PSoC5/USB.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USB.c ****     #if (USB_VDDD_MV < USB_3500MV)
 587:Generated_Source\PSoC5/USB.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USB.c ****         USB_CR1_REG &= (uint8) ~USB_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USB.c ****     #else
 590:Generated_Source\PSoC5/USB.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USB.c ****         USB_CR1_REG |= (uint8)  USB_CR1_REG_ENABLE;
 287              		.loc 1 591 0
 288 0060 114A     		ldr	r2, .L12+36
 289 0062 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 290 0064 43F00103 		orr	r3, r3, #1
 291 0068 1370     		strb	r3, [r2]
 292              	.L9:
 592:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_VDDD_MV < USB_3500MV) */
 593:Generated_Source\PSoC5/USB.c ****         break;
 594:Generated_Source\PSoC5/USB.c ****     }
 595:Generated_Source\PSoC5/USB.c **** 
 596:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USB.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USB.c ****     USB_CR1_REG &= (uint32) ~USB_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USB.c **** 
 600:Generated_Source\PSoC5/USB.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USB.c ****     USB_EP0_CNT_REG = USB_CLEAR_REG;
 602:Generated_Source\PSoC5/USB.c **** 
 603:Generated_Source\PSoC5/USB.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USB.c ****     USB_EP0_CR_REG = USB_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USB.c **** 
 606:Generated_Source\PSoC5/USB.c ****     #if (USB_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USB.c ****         if (NULL != USB_GetBOSPtr())
 608:Generated_Source\PSoC5/USB.c ****         {
 609:Generated_Source\PSoC5/USB.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USB.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USB.c ****             */
 612:Generated_Source\PSoC5/USB.c ****             USB_LPM_CTRL_REG = (USB_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USB.c ****                                              USB_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USB.c ****         }
 615:Generated_Source\PSoC5/USB.c ****         else
 616:Generated_Source\PSoC5/USB.c ****         {
 617:Generated_Source\PSoC5/USB.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USB.c ****             USB_LPM_CTRL_REG &= (uint32) ~USB_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USB.c ****         }
 620:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_LPM_ACTIVE) */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 17


 621:Generated_Source\PSoC5/USB.c **** 
 622:Generated_Source\PSoC5/USB.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USB.c ****     USB_CR0_REG = USB_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USB.c **** 
 625:Generated_Source\PSoC5/USB.c **** #else
 626:Generated_Source\PSoC5/USB.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USB.c ****     USB_EP0_CR_REG = USB_MODE_STALL_IN_OUT;
 293              		.loc 1 627 0
 294 006a 0322     		movs	r2, #3
 295 006c 0F4B     		ldr	r3, .L12+40
 296 006e 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USB.c **** 
 629:Generated_Source\PSoC5/USB.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USB.c ****     USB_CR0_REG = USB_DEFUALT_CR0;
 297              		.loc 1 630 0
 298 0070 8022     		movs	r2, #128
 299 0072 203B     		subs	r3, r3, #32
 300 0074 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USB.c ****     CyDelayCycles(USB_WAIT_CR0_REG_STABILITY);
 301              		.loc 1 631 0
 302 0076 0120     		movs	r0, #1
 303              	.LVL21:
 304 0078 FFF7FEFF 		bl	CyDelayCycles
 305              	.LVL22:
 632:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USB.c **** 
 634:Generated_Source\PSoC5/USB.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR1_REG = USB_USBIO_CR1_USBPUEN;
 306              		.loc 1 635 0
 307 007c 0422     		movs	r2, #4
 308 007e 0C4B     		ldr	r3, .L12+44
 309 0080 1A70     		strb	r2, [r3]
 310 0082 08BD     		pop	{r3, pc}
 311              	.L13:
 312              		.align	2
 313              	.L12:
 314 0084 00000000 		.word	USB_device
 315 0088 00000000 		.word	USB_transferState
 316 008c 00000000 		.word	USB_configurationChanged
 317 0090 00000000 		.word	USB_configuration
 318 0094 00000000 		.word	USB_interfaceNumber
 319 0098 00000000 		.word	USB_deviceAddress
 320 009c 00000000 		.word	USB_deviceStatus
 321 00a0 00000000 		.word	USB_lastPacketSize
 322 00a4 00E100E0 		.word	-536813312
 323 00a8 09600040 		.word	1073766409
 324 00ac 28600040 		.word	1073766440
 325 00b0 12600040 		.word	1073766418
 326              		.cfi_endproc
 327              	.LFE2:
 328              		.size	USB_InitComponent, .-USB_InitComponent
 329              		.section	.text.USB_Start,"ax",%progbits
 330              		.align	2
 331              		.global	USB_Start
 332              		.thumb
 333              		.thumb_func
 334              		.type	USB_Start, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 18


 335              	USB_Start:
 336              	.LFB0:
 187:Generated_Source\PSoC5/USB.c ****     if (0u == USB_initVar)
 337              		.loc 1 187 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              	.LVL23:
 342 0000 38B5     		push	{r3, r4, r5, lr}
 343              		.cfi_def_cfa_offset 16
 344              		.cfi_offset 3, -16
 345              		.cfi_offset 4, -12
 346              		.cfi_offset 5, -8
 347              		.cfi_offset 14, -4
 348 0002 0446     		mov	r4, r0
 349 0004 0D46     		mov	r5, r1
 188:Generated_Source\PSoC5/USB.c ****     {
 350              		.loc 1 188 0
 351 0006 064B     		ldr	r3, .L17
 352 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 353 000a 23B9     		cbnz	r3, .L15
 190:Generated_Source\PSoC5/USB.c ****         USB_initVar = 1u;
 354              		.loc 1 190 0
 355 000c FFF7FEFF 		bl	USB_Init
 356              	.LVL24:
 191:Generated_Source\PSoC5/USB.c ****     }
 357              		.loc 1 191 0
 358 0010 0122     		movs	r2, #1
 359 0012 034B     		ldr	r3, .L17
 360 0014 1A70     		strb	r2, [r3]
 361              	.L15:
 194:Generated_Source\PSoC5/USB.c **** }
 362              		.loc 1 194 0
 363 0016 2946     		mov	r1, r5
 364 0018 2046     		mov	r0, r4
 365 001a FFF7FEFF 		bl	USB_InitComponent
 366              	.LVL25:
 367 001e 38BD     		pop	{r3, r4, r5, pc}
 368              	.L18:
 369              		.align	2
 370              	.L17:
 371 0020 00000000 		.word	.LANCHOR0
 372              		.cfi_endproc
 373              	.LFE0:
 374              		.size	USB_Start, .-USB_Start
 375              		.section	.text.USB_ReInitComponent,"ax",%progbits
 376              		.align	2
 377              		.global	USB_ReInitComponent
 378              		.thumb
 379              		.thumb_func
 380              		.type	USB_ReInitComponent, %function
 381              	USB_ReInitComponent:
 382              	.LFB3:
 636:Generated_Source\PSoC5/USB.c **** }
 637:Generated_Source\PSoC5/USB.c **** 
 638:Generated_Source\PSoC5/USB.c **** 
 639:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 19


 640:Generated_Source\PSoC5/USB.c **** * Function Name: USB_ReInitComponent
 641:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USB.c **** *
 643:Generated_Source\PSoC5/USB.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USB.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USB.c **** *
 646:Generated_Source\PSoC5/USB.c **** * \globalvars
 647:Generated_Source\PSoC5/USB.c **** *   USB_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USB.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USB.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USB.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USB.c **** *   USB_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USB.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USB.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USB.c **** *   USB_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USB.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USB.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USB.c **** *   USB_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USB.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USB.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USB.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USB.c **** *   USB_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USB.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USB.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USB.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USB.c **** *   USB_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USB.c **** *
 667:Generated_Source\PSoC5/USB.c **** * \reentrant
 668:Generated_Source\PSoC5/USB.c **** *  No.
 669:Generated_Source\PSoC5/USB.c **** *
 670:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USB.c **** void USB_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USB.c **** {
 383              		.loc 1 672 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 673:Generated_Source\PSoC5/USB.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USB.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USB.c ****     */
 676:Generated_Source\PSoC5/USB.c **** #if defined(USB_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USB.c ****     uint8 i;
 678:Generated_Source\PSoC5/USB.c **** 
 679:Generated_Source\PSoC5/USB.c ****     for (i = 0u; i < USB_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USB.c ****     {
 681:Generated_Source\PSoC5/USB.c ****         USB_hidProtocol[i] = USB_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USB.c ****     }
 683:Generated_Source\PSoC5/USB.c **** #endif /* USB_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USB.c **** 
 685:Generated_Source\PSoC5/USB.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USB.c ****     USB_transferState   = USB_TRANS_STATE_IDLE;
 388              		.loc 1 686 0
 389 0000 0023     		movs	r3, #0
 390 0002 0A4A     		ldr	r2, .L20
 391 0004 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USB.c ****     USB_configurationChanged = 0u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 20


 392              		.loc 1 687 0
 393 0006 0A4A     		ldr	r2, .L20+4
 394 0008 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USB.c ****     USB_configuration   = 0u;
 395              		.loc 1 688 0
 396 000a 0A4A     		ldr	r2, .L20+8
 397 000c 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USB.c ****     USB_interfaceNumber = 0u;
 398              		.loc 1 689 0
 399 000e 0A4A     		ldr	r2, .L20+12
 400 0010 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USB.c ****     USB_deviceAddress   = 0u;
 401              		.loc 1 690 0
 402 0012 0A4A     		ldr	r2, .L20+16
 403 0014 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USB.c ****     USB_deviceStatus    = 0u;
 404              		.loc 1 691 0
 405 0016 0A4A     		ldr	r2, .L20+20
 406 0018 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USB.c ****     USB_lastPacketSize  = 0u;
 407              		.loc 1 692 0
 408 001a 0A4A     		ldr	r2, .L20+24
 409 001c 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USB.c **** 
 694:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USB.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USB.c ****     USB_EP0_CR_REG = USB_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USB.c **** #else
 698:Generated_Source\PSoC5/USB.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USB.c ****     USB_EP0_CR_REG = USB_MODE_STALL_IN_OUT;
 410              		.loc 1 699 0
 411 001e 0322     		movs	r2, #3
 412 0020 094B     		ldr	r3, .L20+28
 413 0022 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USB.c **** 
 702:Generated_Source\PSoC5/USB.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USB.c ****     USB_CR0_REG = USB_DEFUALT_CR0;
 414              		.loc 1 703 0
 415 0024 8022     		movs	r2, #128
 416 0026 203B     		subs	r3, r3, #32
 417 0028 1A70     		strb	r2, [r3]
 418 002a 7047     		bx	lr
 419              	.L21:
 420              		.align	2
 421              	.L20:
 422 002c 00000000 		.word	USB_transferState
 423 0030 00000000 		.word	USB_configurationChanged
 424 0034 00000000 		.word	USB_configuration
 425 0038 00000000 		.word	USB_interfaceNumber
 426 003c 00000000 		.word	USB_deviceAddress
 427 0040 00000000 		.word	USB_deviceStatus
 428 0044 00000000 		.word	USB_lastPacketSize
 429 0048 28600040 		.word	1073766440
 430              		.cfi_endproc
 431              	.LFE3:
 432              		.size	USB_ReInitComponent, .-USB_ReInitComponent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 21


 433              		.section	.text.USB_Stop,"ax",%progbits
 434              		.align	2
 435              		.global	USB_Stop
 436              		.thumb
 437              		.thumb_func
 438              		.type	USB_Stop, %function
 439              	USB_Stop:
 440              	.LFB4:
 704:Generated_Source\PSoC5/USB.c **** }
 705:Generated_Source\PSoC5/USB.c **** 
 706:Generated_Source\PSoC5/USB.c **** 
 707:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USB.c **** * Function Name: USB_Stop
 709:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USB.c **** *
 711:Generated_Source\PSoC5/USB.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USB.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USB.c **** *
 714:Generated_Source\PSoC5/USB.c **** * \globalvars
 715:Generated_Source\PSoC5/USB.c **** *   \ref USB_configuration
 716:Generated_Source\PSoC5/USB.c **** *
 717:Generated_Source\PSoC5/USB.c **** *   USB_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USB.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USB.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USB.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USB.c **** *
 722:Generated_Source\PSoC5/USB.c **** *   \ref USB_deviceStatus
 723:Generated_Source\PSoC5/USB.c **** *
 724:Generated_Source\PSoC5/USB.c **** *   \ref USB_configurationChanged
 725:Generated_Source\PSoC5/USB.c **** *
 726:Generated_Source\PSoC5/USB.c **** *   USB_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USB.c **** *
 728:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USB.c **** void USB_Stop(void) 
 730:Generated_Source\PSoC5/USB.c **** {
 441              		.loc 1 730 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 08B5     		push	{r3, lr}
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 3, -8
 448              		.cfi_offset 14, -4
 731:Generated_Source\PSoC5/USB.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USB.c **** 
 733:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USB.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USB.c ****     USB_Stop_DMA(USB_MAX_EP);
 736:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USB.c **** 
 738:Generated_Source\PSoC5/USB.c ****     enableInterrupts = CyEnterCriticalSection();
 449              		.loc 1 738 0
 450 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 451              	.LVL26:
 739:Generated_Source\PSoC5/USB.c **** 
 740:Generated_Source\PSoC5/USB.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USB.c ****     USB_CR0_REG &= (uint8) ~USB_CR0_ENABLE;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 22


 452              		.loc 1 741 0
 453 0006 214A     		ldr	r2, .L24
 454 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 455 000a 03F07F03 		and	r3, r3, #127
 456 000e 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USB.c **** 
 743:Generated_Source\PSoC5/USB.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR1_REG &= (uint8) ~ USB_USBIO_CR1_USBPUEN;
 457              		.loc 1 744 0
 458 0010 0A32     		adds	r2, r2, #10
 459 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 460 0014 03F0FB03 		and	r3, r3, #251
 461 0018 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USB.c **** 
 746:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USB.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USB.c ****     USB_POWER_CTRL_REG &= (uint32) ~USB_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USB.c **** #else
 750:Generated_Source\PSoC5/USB.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USB.c ****     USB_PM_ACT_CFG_REG  &= (uint8) ~USB_PM_ACT_EN_FSUSB;
 462              		.loc 1 751 0
 463 001a A2F5E352 		sub	r2, r2, #7264
 464 001e 0D3A     		subs	r2, r2, #13
 465 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 466 0022 03F0FE03 		and	r3, r3, #254
 467 0026 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USB.c ****     USB_PM_STBY_CFG_REG &= (uint8) ~USB_PM_STBY_EN_FSUSB;
 468              		.loc 1 752 0
 469 0028 1032     		adds	r2, r2, #16
 470 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 471 002c 03F0FE03 		and	r3, r3, #254
 472 0030 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USB.c **** 
 754:Generated_Source\PSoC5/USB.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USB.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USB.c ****     USB_DM_INP_DIS_REG |= (uint8) USB_DM_MASK;
 473              		.loc 1 756 0
 474 0032 174B     		ldr	r3, .L24+4
 475 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 476 0036 42F08002 		orr	r2, r2, #128
 477 003a 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USB.c ****     USB_DP_INP_DIS_REG |= (uint8) USB_DP_MASK;
 478              		.loc 1 757 0
 479 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 480 003e 42F04002 		orr	r2, r2, #64
 481 0042 1A70     		strb	r2, [r3]
 758:Generated_Source\PSoC5/USB.c **** 
 759:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USB.c **** 
 761:Generated_Source\PSoC5/USB.c ****     CyExitCriticalSection(enableInterrupts);
 482              		.loc 1 761 0
 483 0044 FFF7FEFF 		bl	CyExitCriticalSection
 484              	.LVL27:
 762:Generated_Source\PSoC5/USB.c **** 
 763:Generated_Source\PSoC5/USB.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USB.c ****     CyIntDisable(USB_INTR_HI_VECT_NUM);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 23


 766:Generated_Source\PSoC5/USB.c ****     CyIntDisable(USB_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USB.c ****     CyIntDisable(USB_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USB.c **** #else
 769:Generated_Source\PSoC5/USB.c **** 
 770:Generated_Source\PSoC5/USB.c ****     CyIntDisable(USB_BUS_RESET_VECT_NUM);
 485              		.loc 1 770 0
 486 0048 124B     		ldr	r3, .L24+8
 487 004a 4FF40002 		mov	r2, #8388608
 488 004e 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USB.c ****     CyIntDisable(USB_EP_0_VECT_NUM);
 489              		.loc 1 771 0
 490 0050 4FF08072 		mov	r2, #16777216
 491 0054 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USB.c **** 
 773:Generated_Source\PSoC5/USB.c ****     #if (USB_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_SOF_VECT_NUM);
 492              		.loc 1 774 0
 493 0056 4FF40012 		mov	r2, #2097152
 494 005a 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USB.c **** 
 777:Generated_Source\PSoC5/USB.c ****     #if (USB_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_1_VECT_NUM);
 495              		.loc 1 778 0
 496 005c 1022     		movs	r2, #16
 497 005e 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USB.c **** 
 781:Generated_Source\PSoC5/USB.c ****     #if (USB_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_2_VECT_NUM);
 498              		.loc 1 782 0
 499 0060 2022     		movs	r2, #32
 500 0062 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USB.c **** 
 785:Generated_Source\PSoC5/USB.c ****     #if (USB_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_3_VECT_NUM);
 787:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USB.c **** 
 789:Generated_Source\PSoC5/USB.c ****     #if (USB_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USB.c **** 
 793:Generated_Source\PSoC5/USB.c ****     #if (USB_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USB.c **** 
 797:Generated_Source\PSoC5/USB.c ****     #if (USB_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USB.c ****     #endif /* USB_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USB.c **** 
 801:Generated_Source\PSoC5/USB.c ****     #if (USB_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USB.c **** 
 805:Generated_Source\PSoC5/USB.c ****     #if (USB_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_8_VECT_NUM);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 24


 807:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USB.c **** 
 809:Generated_Source\PSoC5/USB.c ****     #if (USB_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USB.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USB.c ****         (void) USB_Dp_ClearInterrupt();
 501              		.loc 1 811 0
 502 0064 FFF7FEFF 		bl	USB_Dp_ClearInterrupt
 503              	.LVL28:
 812:Generated_Source\PSoC5/USB.c ****         CyIntClearPending(USB_DP_INTC_VECT_NUM);
 504              		.loc 1 812 0
 505 0068 4FF48052 		mov	r2, #4096
 506 006c 0A4B     		ldr	r3, .L24+12
 507 006e 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USB.c **** 
 815:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USB.c **** 
 817:Generated_Source\PSoC5/USB.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USB.c ****     USB_configurationChanged = 0u;
 508              		.loc 1 818 0
 509 0070 0023     		movs	r3, #0
 510 0072 0A4A     		ldr	r2, .L24+16
 511 0074 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USB.c ****     USB_configuration   = 0u;
 512              		.loc 1 819 0
 513 0076 0A4A     		ldr	r2, .L24+20
 514 0078 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USB.c ****     USB_interfaceNumber = 0u;
 515              		.loc 1 820 0
 516 007a 0A4A     		ldr	r2, .L24+24
 517 007c 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USB.c ****     USB_deviceAddress   = 0u;
 518              		.loc 1 821 0
 519 007e 0A4A     		ldr	r2, .L24+28
 520 0080 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USB.c ****     USB_deviceStatus    = 0u;
 521              		.loc 1 822 0
 522 0082 0A4A     		ldr	r2, .L24+32
 523 0084 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC5/USB.c **** 
 824:Generated_Source\PSoC5/USB.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USB.c ****     USB_initVar = 0u;
 524              		.loc 1 825 0
 525 0086 0A4A     		ldr	r2, .L24+36
 526 0088 1370     		strb	r3, [r2]
 527 008a 08BD     		pop	{r3, pc}
 528              	.L25:
 529              		.align	2
 530              	.L24:
 531 008c 08600040 		.word	1073766408
 532 0090 F8510040 		.word	1073762808
 533 0094 80E100E0 		.word	-536813184
 534 0098 80E200E0 		.word	-536812928
 535 009c 00000000 		.word	USB_configurationChanged
 536 00a0 00000000 		.word	USB_configuration
 537 00a4 00000000 		.word	USB_interfaceNumber
 538 00a8 00000000 		.word	USB_deviceAddress
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 25


 539 00ac 00000000 		.word	USB_deviceStatus
 540 00b0 00000000 		.word	.LANCHOR0
 541              		.cfi_endproc
 542              	.LFE4:
 543              		.size	USB_Stop, .-USB_Stop
 544              		.section	.text.USB_CheckActivity,"ax",%progbits
 545              		.align	2
 546              		.global	USB_CheckActivity
 547              		.thumb
 548              		.thumb_func
 549              		.type	USB_CheckActivity, %function
 550              	USB_CheckActivity:
 551              	.LFB5:
 826:Generated_Source\PSoC5/USB.c **** }
 827:Generated_Source\PSoC5/USB.c **** 
 828:Generated_Source\PSoC5/USB.c **** 
 829:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USB.c **** * Function Name: USB_CheckActivity
 831:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USB.c **** *
 833:Generated_Source\PSoC5/USB.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USB.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USB.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USB.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USB.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USB.c **** *
 839:Generated_Source\PSoC5/USB.c **** *
 840:Generated_Source\PSoC5/USB.c **** * \return
 841:Generated_Source\PSoC5/USB.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USB.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USB.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USB.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USB.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USB.c **** *
 847:Generated_Source\PSoC5/USB.c **** *
 848:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USB.c **** uint8 USB_CheckActivity(void) 
 850:Generated_Source\PSoC5/USB.c **** {
 552              		.loc 1 850 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USB.c ****     uint8 cr1Reg = USB_CR1_REG;
 557              		.loc 1 851 0
 558 0000 064A     		ldr	r2, .L28
 559 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 560 0004 DBB2     		uxtb	r3, r3
 561              	.LVL29:
 852:Generated_Source\PSoC5/USB.c **** 
 853:Generated_Source\PSoC5/USB.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USB.c ****     USB_CR1_REG = (cr1Reg & (uint8) ~USB_CR1_BUS_ACTIVITY);
 562              		.loc 1 854 0
 563 0006 03F0FB01 		and	r1, r3, #251
 564 000a 1170     		strb	r1, [r2]
 565 000c 03F00403 		and	r3, r3, #4
 566              	.LVL30:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 26


 855:Generated_Source\PSoC5/USB.c **** 
 856:Generated_Source\PSoC5/USB.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USB.c ****     return ((0u != (cr1Reg & USB_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 567              		.loc 1 857 0
 568 0010 03F0FF00 		and	r0, r3, #255
 569 0014 03B1     		cbz	r3, .L27
 570 0016 0120     		movs	r0, #1
 571              	.L27:
 858:Generated_Source\PSoC5/USB.c **** }
 572              		.loc 1 858 0 discriminator 4
 573 0018 7047     		bx	lr
 574              	.L29:
 575 001a 00BF     		.align	2
 576              	.L28:
 577 001c 09600040 		.word	1073766409
 578              		.cfi_endproc
 579              	.LFE5:
 580              		.size	USB_CheckActivity, .-USB_CheckActivity
 581              		.section	.text.USB_GetConfiguration,"ax",%progbits
 582              		.align	2
 583              		.global	USB_GetConfiguration
 584              		.thumb
 585              		.thumb_func
 586              		.type	USB_GetConfiguration, %function
 587              	USB_GetConfiguration:
 588              	.LFB6:
 859:Generated_Source\PSoC5/USB.c **** 
 860:Generated_Source\PSoC5/USB.c **** 
 861:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetConfiguration
 863:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USB.c **** *
 865:Generated_Source\PSoC5/USB.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USB.c **** *
 867:Generated_Source\PSoC5/USB.c **** * \return
 868:Generated_Source\PSoC5/USB.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USB.c **** *  is not configured
 870:Generated_Source\PSoC5/USB.c **** *
 871:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USB.c **** uint8 USB_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USB.c **** {
 589              		.loc 1 873 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USB.c ****     return (USB_configuration);
 594              		.loc 1 874 0
 595 0000 014B     		ldr	r3, .L31
 596 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USB.c **** }
 597              		.loc 1 875 0
 598 0004 7047     		bx	lr
 599              	.L32:
 600 0006 00BF     		.align	2
 601              	.L31:
 602 0008 00000000 		.word	USB_configuration
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 27


 603              		.cfi_endproc
 604              	.LFE6:
 605              		.size	USB_GetConfiguration, .-USB_GetConfiguration
 606              		.section	.text.USB_IsConfigurationChanged,"ax",%progbits
 607              		.align	2
 608              		.global	USB_IsConfigurationChanged
 609              		.thumb
 610              		.thumb_func
 611              		.type	USB_IsConfigurationChanged, %function
 612              	USB_IsConfigurationChanged:
 613              	.LFB7:
 876:Generated_Source\PSoC5/USB.c **** 
 877:Generated_Source\PSoC5/USB.c **** 
 878:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USB.c **** * Function Name: USB_IsConfigurationChanged
 880:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USB.c **** *
 882:Generated_Source\PSoC5/USB.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USB.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USB.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USB.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USB.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USB.c **** *
 888:Generated_Source\PSoC5/USB.c **** * \return
 889:Generated_Source\PSoC5/USB.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USB.c **** *  returned.
 891:Generated_Source\PSoC5/USB.c **** *
 892:Generated_Source\PSoC5/USB.c **** * \globalvars
 893:Generated_Source\PSoC5/USB.c **** *
 894:Generated_Source\PSoC5/USB.c **** *  \ref USB_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USB.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USB.c **** *
 897:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USB.c **** uint8 USB_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USB.c **** {
 614              		.loc 1 899 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619              	.LVL31:
 900:Generated_Source\PSoC5/USB.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USB.c **** 
 902:Generated_Source\PSoC5/USB.c ****     if (USB_configurationChanged != 0u)
 620              		.loc 1 902 0
 621 0000 064B     		ldr	r3, .L36
 622 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 623 0004 13F0FF0F 		tst	r3, #255
 624 0008 05D0     		beq	.L35
 903:Generated_Source\PSoC5/USB.c ****     {
 904:Generated_Source\PSoC5/USB.c ****         res = USB_configurationChanged;
 625              		.loc 1 904 0
 626 000a 044B     		ldr	r3, .L36
 627 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 628 000e C0B2     		uxtb	r0, r0
 629              	.LVL32:
 905:Generated_Source\PSoC5/USB.c ****         USB_configurationChanged = 0u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 28


 630              		.loc 1 905 0
 631 0010 0022     		movs	r2, #0
 632 0012 1A70     		strb	r2, [r3]
 633 0014 7047     		bx	lr
 634              	.LVL33:
 635              	.L35:
 900:Generated_Source\PSoC5/USB.c ****     uint8 res = 0u;
 636              		.loc 1 900 0
 637 0016 0020     		movs	r0, #0
 638              	.LVL34:
 906:Generated_Source\PSoC5/USB.c ****     }
 907:Generated_Source\PSoC5/USB.c **** 
 908:Generated_Source\PSoC5/USB.c ****     return (res);
 909:Generated_Source\PSoC5/USB.c **** }
 639              		.loc 1 909 0
 640 0018 7047     		bx	lr
 641              	.L37:
 642 001a 00BF     		.align	2
 643              	.L36:
 644 001c 00000000 		.word	USB_configurationChanged
 645              		.cfi_endproc
 646              	.LFE7:
 647              		.size	USB_IsConfigurationChanged, .-USB_IsConfigurationChanged
 648              		.section	.text.USB_GetInterfaceSetting,"ax",%progbits
 649              		.align	2
 650              		.global	USB_GetInterfaceSetting
 651              		.thumb
 652              		.thumb_func
 653              		.type	USB_GetInterfaceSetting, %function
 654              	USB_GetInterfaceSetting:
 655              	.LFB8:
 910:Generated_Source\PSoC5/USB.c **** 
 911:Generated_Source\PSoC5/USB.c **** 
 912:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetInterfaceSetting
 914:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USB.c **** *
 916:Generated_Source\PSoC5/USB.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USB.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USB.c **** *  interface.
 919:Generated_Source\PSoC5/USB.c **** *
 920:Generated_Source\PSoC5/USB.c **** *  \param
 921:Generated_Source\PSoC5/USB.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USB.c **** *
 923:Generated_Source\PSoC5/USB.c **** * \return
 924:Generated_Source\PSoC5/USB.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USB.c **** *
 926:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USB.c **** uint8  USB_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USB.c ****                                                     
 929:Generated_Source\PSoC5/USB.c **** {
 656              		.loc 1 929 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661              	.LVL35:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 29


 930:Generated_Source\PSoC5/USB.c ****     return (USB_interfaceSetting[interfaceNumber]);
 662              		.loc 1 930 0
 663 0000 014B     		ldr	r3, .L39
 664 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 665              	.LVL36:
 931:Generated_Source\PSoC5/USB.c **** }
 666              		.loc 1 931 0
 667 0004 7047     		bx	lr
 668              	.L40:
 669 0006 00BF     		.align	2
 670              	.L39:
 671 0008 00000000 		.word	USB_interfaceSetting
 672              		.cfi_endproc
 673              	.LFE8:
 674              		.size	USB_GetInterfaceSetting, .-USB_GetInterfaceSetting
 675              		.section	.text.USB_GetEPState,"ax",%progbits
 676              		.align	2
 677              		.global	USB_GetEPState
 678              		.thumb
 679              		.thumb_func
 680              		.type	USB_GetEPState, %function
 681              	USB_GetEPState:
 682              	.LFB9:
 932:Generated_Source\PSoC5/USB.c **** 
 933:Generated_Source\PSoC5/USB.c **** 
 934:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetEPState
 936:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USB.c **** *
 938:Generated_Source\PSoC5/USB.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USB.c **** *
 940:Generated_Source\PSoC5/USB.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USB.c **** *
 942:Generated_Source\PSoC5/USB.c **** * \return
 943:Generated_Source\PSoC5/USB.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USB.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USB.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USB.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USB.c **** *
 948:Generated_Source\PSoC5/USB.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USB.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USB.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USB.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USB.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USB.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USB.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USB.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USB.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USB.c **** *
 958:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USB.c **** uint8 USB_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USB.c **** {
 683              		.loc 1 960 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 30


 688              	.LVL37:
 961:Generated_Source\PSoC5/USB.c ****     return (USB_EP[epNumber].apiEpState);
 689              		.loc 1 961 0
 690 0000 00EB4000 		add	r0, r0, r0, lsl #1
 691              	.LVL38:
 692 0004 8300     		lsls	r3, r0, #2
 693 0006 024A     		ldr	r2, .L42
 694 0008 1344     		add	r3, r3, r2
 695 000a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USB.c **** }
 696              		.loc 1 962 0
 697 000c 7047     		bx	lr
 698              	.L43:
 699 000e 00BF     		.align	2
 700              	.L42:
 701 0010 00000000 		.word	USB_EP
 702              		.cfi_endproc
 703              	.LFE9:
 704              		.size	USB_GetEPState, .-USB_GetEPState
 705              		.section	.text.USB_GetEPCount,"ax",%progbits
 706              		.align	2
 707              		.global	USB_GetEPCount
 708              		.thumb
 709              		.thumb_func
 710              		.type	USB_GetEPCount, %function
 711              	USB_GetEPCount:
 712              	.LFB10:
 963:Generated_Source\PSoC5/USB.c **** 
 964:Generated_Source\PSoC5/USB.c **** 
 965:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetEPCount
 967:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USB.c **** *
 969:Generated_Source\PSoC5/USB.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USB.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USB.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USB.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USB.c **** *
 974:Generated_Source\PSoC5/USB.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USB.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USB.c **** *
 977:Generated_Source\PSoC5/USB.c **** * \return
 978:Generated_Source\PSoC5/USB.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USB.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USB.c **** *
 981:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USB.c **** uint16 USB_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USB.c **** {
 713              		.loc 1 983 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 718              	.LVL39:
 984:Generated_Source\PSoC5/USB.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USB.c **** 
 986:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 31


 719              		.loc 1 986 0
 720 0000 431E     		subs	r3, r0, #1
 721 0002 DBB2     		uxtb	r3, r3
 722 0004 072B     		cmp	r3, #7
 723 0006 0BD8     		bhi	.L46
 987:Generated_Source\PSoC5/USB.c ****     {
 988:Generated_Source\PSoC5/USB.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USB.c ****         cntr  = ((uint16) USB_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USB_EPX_CNT0_MASK;
 724              		.loc 1 989 0
 725 0008 064B     		ldr	r3, .L47
 726 000a 0001     		lsls	r0, r0, #4
 727              	.LVL40:
 728 000c 1A18     		adds	r2, r3, r0
 729 000e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 730 0010 00F00F00 		and	r0, r0, #15
 731              	.LVL41:
 990:Generated_Source\PSoC5/USB.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USB_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 732              		.loc 1 990 0
 733 0014 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 734 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 735              	.LVL42:
 991:Generated_Source\PSoC5/USB.c ****         cntr -= USB_EPX_CNTX_CRC_COUNT;
 736              		.loc 1 991 0
 737 001a 0238     		subs	r0, r0, #2
 738              	.LVL43:
 739 001c 80B2     		uxth	r0, r0
 740              	.LVL44:
 741 001e 7047     		bx	lr
 742              	.LVL45:
 743              	.L46:
 984:Generated_Source\PSoC5/USB.c **** 
 744              		.loc 1 984 0
 745 0020 0020     		movs	r0, #0
 746              	.LVL46:
 992:Generated_Source\PSoC5/USB.c ****     }
 993:Generated_Source\PSoC5/USB.c **** 
 994:Generated_Source\PSoC5/USB.c ****     return (cntr);
 995:Generated_Source\PSoC5/USB.c **** }
 747              		.loc 1 995 0
 748 0022 7047     		bx	lr
 749              	.L48:
 750              		.align	2
 751              	.L47:
 752 0024 FC5F0040 		.word	1073766396
 753              		.cfi_endproc
 754              	.LFE10:
 755              		.size	USB_GetEPCount, .-USB_GetEPCount
 756              		.section	.text.USB_LoadInEP,"ax",%progbits
 757              		.align	2
 758              		.global	USB_LoadInEP
 759              		.thumb
 760              		.thumb_func
 761              		.type	USB_LoadInEP, %function
 762              	USB_LoadInEP:
 763              	.LFB11:
 996:Generated_Source\PSoC5/USB.c **** 
 997:Generated_Source\PSoC5/USB.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 32


 998:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USB.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USB.c ****     * Function Name: USB_InitEpDma
1002:Generated_Source\PSoC5/USB.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USB.c ****     *
1004:Generated_Source\PSoC5/USB.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USB.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USB.c ****     *
1007:Generated_Source\PSoC5/USB.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USB.c ****     static void USB_InitEpDma(void)
1009:Generated_Source\PSoC5/USB.c ****     {
1010:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep1_dma_CHANNEL] = USB_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USB.c **** 
1014:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep2_dma_CHANNEL] = USB_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USB.c **** 
1018:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep3_dma_CHANNEL] = USB_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USB.c **** 
1022:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep4_dma_CHANNEL] = USB_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USB.c **** 
1026:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep5_dma_CHANNEL] = USB_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USB.c **** 
1030:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep6_dma_CHANNEL] = USB_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USB.c **** 
1034:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep7_dma_CHANNEL] = USB_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USB.c **** 
1038:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep8_dma_CHANNEL] = USB_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USB.c **** 
1042:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USB.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USB.c ****             (void) USB_ep1_dma_SetInterruptCallback(&USB_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USB.c **** 
1048:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USB.c ****             (void) USB_ep2_dma_SetInterruptCallback(&USB_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USB.c **** 
1052:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USB.c ****             (void) USB_ep3_dma_SetInterruptCallback(&USB_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA3_ACTIVE) */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 33


1055:Generated_Source\PSoC5/USB.c **** 
1056:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USB.c ****             (void) USB_ep4_dma_SetInterruptCallback(&USB_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USB.c **** 
1060:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USB.c ****             (void) USB_ep5_dma_SetInterruptCallback(&USB_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USB.c **** 
1064:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USB.c ****             (void) USB_ep6_dma_SetInterruptCallback(&USB_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USB.c **** 
1068:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USB.c ****             (void) USB_ep7_dma_SetInterruptCallback(&USB_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USB.c **** 
1072:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USB.c ****             (void) USB_ep8_dma_SetInterruptCallback(&USB_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USB.c ****     }
1077:Generated_Source\PSoC5/USB.c **** #else
1078:Generated_Source\PSoC5/USB.c **** 
1079:Generated_Source\PSoC5/USB.c **** 
1080:Generated_Source\PSoC5/USB.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USB.c ****     * Function Name: USB_InitEP_DMA
1082:Generated_Source\PSoC5/USB.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USB.c ****     *
1084:Generated_Source\PSoC5/USB.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USB.c ****     *  USB_LoadInEP() or USB_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USB.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USB.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USB.c ****     *
1089:Generated_Source\PSoC5/USB.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USB.c ****     *
1091:Generated_Source\PSoC5/USB.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USB.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USB.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USB.c ****     *
1095:Generated_Source\PSoC5/USB.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USB.c ****     *
1097:Generated_Source\PSoC5/USB.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USB.c ****     void USB_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USB.c ****                                                                     
1100:Generated_Source\PSoC5/USB.c ****     {
1101:Generated_Source\PSoC5/USB.c ****         uint16 src;
1102:Generated_Source\PSoC5/USB.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USB.c **** 
1104:Generated_Source\PSoC5/USB.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USB.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USB.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USB.c ****         pData = pData;
1108:Generated_Source\PSoC5/USB.c ****     #else
1109:Generated_Source\PSoC5/USB.c ****         if ((USB_EP[epNumber].addr & USB_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USB.c ****         {
1111:Generated_Source\PSoC5/USB.c ****             /* IN endpoint: source is memory buffer. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 34


1112:Generated_Source\PSoC5/USB.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USB.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USB.c ****         }
1115:Generated_Source\PSoC5/USB.c ****         else
1116:Generated_Source\PSoC5/USB.c ****         {
1117:Generated_Source\PSoC5/USB.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USB.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USB.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USB.c ****         }
1121:Generated_Source\PSoC5/USB.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USB.c **** 
1123:Generated_Source\PSoC5/USB.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USB.c ****         {
1125:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USB.c ****         case USB_EP1:
1127:Generated_Source\PSoC5/USB.c ****             USB_DmaChan[epNumber] = USB_ep1_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USB.c ****                                                                                     USB_DMA_REQUEST
1129:Generated_Source\PSoC5/USB.c ****             break;
1130:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USB.c **** 
1132:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USB.c ****         case USB_EP2:
1134:Generated_Source\PSoC5/USB.c ****             USB_DmaChan[epNumber] = USB_ep2_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USB.c ****                                                                                     USB_DMA_REQUEST
1136:Generated_Source\PSoC5/USB.c ****             break;
1137:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USB.c **** 
1139:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USB.c ****             case USB_EP3:
1141:Generated_Source\PSoC5/USB.c ****                 USB_DmaChan[epNumber] = USB_ep3_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USB.c ****                                                                                         USB_DMA_REQ
1143:Generated_Source\PSoC5/USB.c ****             break;
1144:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USB.c **** 
1146:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USB.c ****             case USB_EP4:
1148:Generated_Source\PSoC5/USB.c ****                 USB_DmaChan[epNumber] = USB_ep4_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USB.c ****                                                                                         USB_DMA_REQ
1150:Generated_Source\PSoC5/USB.c ****             break;
1151:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USB.c **** 
1153:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USB.c ****             case USB_EP5:
1155:Generated_Source\PSoC5/USB.c ****                 USB_DmaChan[epNumber] = USB_ep5_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USB.c ****                                                                                         USB_DMA_REQ
1157:Generated_Source\PSoC5/USB.c ****             break;
1158:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USB.c **** 
1160:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USB.c ****         case USB_EP6:
1162:Generated_Source\PSoC5/USB.c ****             USB_DmaChan[epNumber] = USB_ep6_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USB.c ****                                                                                     USB_DMA_REQUEST
1164:Generated_Source\PSoC5/USB.c ****             break;
1165:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USB.c **** 
1167:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USB.c ****         case USB_EP7:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 35


1169:Generated_Source\PSoC5/USB.c ****                 USB_DmaChan[epNumber] = USB_ep7_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USB.c ****                                                                                         USB_DMA_REQ
1171:Generated_Source\PSoC5/USB.c ****             break;
1172:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USB.c **** 
1174:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USB.c ****         case USB_EP8:
1176:Generated_Source\PSoC5/USB.c ****                 USB_DmaChan[epNumber] = USB_ep8_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USB.c ****                                                                                         USB_DMA_REQ
1178:Generated_Source\PSoC5/USB.c ****             break;
1179:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USB.c **** 
1181:Generated_Source\PSoC5/USB.c ****         default:
1182:Generated_Source\PSoC5/USB.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USB.c ****             break;
1184:Generated_Source\PSoC5/USB.c ****         }
1185:Generated_Source\PSoC5/USB.c **** 
1186:Generated_Source\PSoC5/USB.c ****         if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
1187:Generated_Source\PSoC5/USB.c ****         {
1188:Generated_Source\PSoC5/USB.c ****             USB_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USB.c **** 
1190:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USB.c ****             USB_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USB.c ****         }
1194:Generated_Source\PSoC5/USB.c ****     }
1195:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USB.c **** 
1197:Generated_Source\PSoC5/USB.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USB.c ****     * Function Name: USB_Stop_DMA
1199:Generated_Source\PSoC5/USB.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USB.c ****     *  
1201:Generated_Source\PSoC5/USB.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USB.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USB.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USB.c ****     *  to trigger DMA re-configuration when USB_LoadInEP() or 
1205:Generated_Source\PSoC5/USB.c ****     *  USB_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USB.c ****     *  
1207:Generated_Source\PSoC5/USB.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USB.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USB.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USB.c ****     *  USB_MAX_EP argument.
1211:Generated_Source\PSoC5/USB.c ****     *
1212:Generated_Source\PSoC5/USB.c ****     * \reentrant
1213:Generated_Source\PSoC5/USB.c ****     *  No.
1214:Generated_Source\PSoC5/USB.c ****     *
1215:Generated_Source\PSoC5/USB.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USB.c ****     void USB_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USB.c ****     {
1218:Generated_Source\PSoC5/USB.c ****         uint8 i;
1219:Generated_Source\PSoC5/USB.c **** 
1220:Generated_Source\PSoC5/USB.c ****         i = (epNumber < USB_MAX_EP) ? epNumber : USB_EP1;
1221:Generated_Source\PSoC5/USB.c **** 
1222:Generated_Source\PSoC5/USB.c ****         do
1223:Generated_Source\PSoC5/USB.c ****         {
1224:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USB.c ****             if (0u != USB_DmaChan[i])
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 36


1226:Generated_Source\PSoC5/USB.c ****             {
1227:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChDisable(USB_DmaChan[i]);
1228:Generated_Source\PSoC5/USB.c ****             }
1229:Generated_Source\PSoC5/USB.c ****         #else
1230:Generated_Source\PSoC5/USB.c ****             if(USB_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USB.c ****             {
1232:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChDisable(USB_DmaChan[i]);
1233:Generated_Source\PSoC5/USB.c ****                 CyDmaTdFree(USB_DmaTd[i]);
1234:Generated_Source\PSoC5/USB.c ****                 USB_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USB.c ****             }
1236:Generated_Source\PSoC5/USB.c **** 
1237:Generated_Source\PSoC5/USB.c ****             #if (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USB.c ****                 if(USB_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USB.c ****                 {
1240:Generated_Source\PSoC5/USB.c ****                     CyDmaTdFree(USB_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USB.c ****                     USB_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USB.c ****                 }
1243:Generated_Source\PSoC5/USB.c ****             #endif /* (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USB.c **** 
1245:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USB.c ****             i++;
1247:Generated_Source\PSoC5/USB.c ****         }
1248:Generated_Source\PSoC5/USB.c ****         while ((i < USB_MAX_EP) && (epNumber == USB_MAX_EP));
1249:Generated_Source\PSoC5/USB.c ****     }
1250:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USB.c **** 
1252:Generated_Source\PSoC5/USB.c **** 
1253:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USB.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USB.c ****     * Function Name: USB_LoadNextInEP
1257:Generated_Source\PSoC5/USB.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USB.c ****     *
1259:Generated_Source\PSoC5/USB.c ****     * Summary:
1260:Generated_Source\PSoC5/USB.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USB.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USB.c ****     *
1263:Generated_Source\PSoC5/USB.c ****     * Parameters:
1264:Generated_Source\PSoC5/USB.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USB.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USB.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USB.c ****     *
1268:Generated_Source\PSoC5/USB.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USB.c ****     void USB_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USB.c ****     {
1271:Generated_Source\PSoC5/USB.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USB.c **** 
1273:Generated_Source\PSoC5/USB.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USB.c ****         {
1275:Generated_Source\PSoC5/USB.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USB.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USB.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USB_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USB.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USB.c ****             CY_SET_REG16(convert, USB_inLength[epNumber] - USB_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USB.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USB.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USB_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USB.c ****             CY_SET_REG16(convert, LO16((uint32)USB_inDataPointer[epNumber] +
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 37


1283:Generated_Source\PSoC5/USB.c ****                                             USB_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USB.c ****             USB_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USB.c ****         }
1286:Generated_Source\PSoC5/USB.c ****         else
1287:Generated_Source\PSoC5/USB.c ****         {
1288:Generated_Source\PSoC5/USB.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USB.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USB.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USB_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USB.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USB.c ****             CY_SET_REG16(convert, USB_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USB.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USB.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USB_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USB.c ****             CY_SET_REG16(convert,  LO16((uint32)USB_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USB.c ****                                    (USB_DMA_BYTES_PER_BURST - USB_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USB.c ****         }
1298:Generated_Source\PSoC5/USB.c **** 
1299:Generated_Source\PSoC5/USB.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USB.c ****         CY_DMA_CH_STRUCT_PTR[USB_DmaChan[epNumber]].basic_status[1u] = USB_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USB.c ****     }
1302:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USB.c **** 
1305:Generated_Source\PSoC5/USB.c **** 
1306:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USB.c **** * Function Name: USB_LoadInEP
1308:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USB.c **** *
1310:Generated_Source\PSoC5/USB.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USB.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USB.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USB.c **** *
1314:Generated_Source\PSoC5/USB.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USB.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USB.c **** *  data transfer.
1317:Generated_Source\PSoC5/USB.c **** *
1318:Generated_Source\PSoC5/USB.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USB.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USB.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USB.c **** *
1322:Generated_Source\PSoC5/USB.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USB.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USB.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USB.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USB.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USB.c **** *
1328:Generated_Source\PSoC5/USB.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USB.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USB.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USB.c **** *          is loaded.
1332:Generated_Source\PSoC5/USB.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USB.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USB.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USB.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USB.c **** *
1337:Generated_Source\PSoC5/USB.c **** *
1338:Generated_Source\PSoC5/USB.c **** * \reentrant
1339:Generated_Source\PSoC5/USB.c **** *  No.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 38


1340:Generated_Source\PSoC5/USB.c **** *
1341:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USB.c **** void USB_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USB.c ****                                                                         
1344:Generated_Source\PSoC5/USB.c **** {
 764              		.loc 1 1344 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769              	.LVL47:
1345:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 770              		.loc 1 1345 0
 771 0000 431E     		subs	r3, r0, #1
 772 0002 DBB2     		uxtb	r3, r3
 773 0004 072B     		cmp	r3, #7
 774 0006 3CD8     		bhi	.L58
1344:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 775              		.loc 1 1344 0
 776 0008 F0B4     		push	{r4, r5, r6, r7}
 777              		.cfi_def_cfa_offset 16
 778              		.cfi_offset 4, -16
 779              		.cfi_offset 5, -12
 780              		.cfi_offset 6, -8
 781              		.cfi_offset 7, -4
1346:Generated_Source\PSoC5/USB.c ****     {
1347:Generated_Source\PSoC5/USB.c ****     #if (!USB_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USB.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USB.c ****         if (length > (USB_EPX_DATA_BUF_MAX - USB_EP[epNumber].buffOffset))
 782              		.loc 1 1349 0
 783 000a 0746     		mov	r7, r0
 784 000c 00EB4004 		add	r4, r0, r0, lsl #1
 785 0010 A300     		lsls	r3, r4, #2
 786 0012 1C4C     		ldr	r4, .L59
 787 0014 2344     		add	r3, r3, r4
 788 0016 DB88     		ldrh	r3, [r3, #6]
 789 0018 9BB2     		uxth	r3, r3
 790 001a C3F50073 		rsb	r3, r3, #512
 791 001e 9A42     		cmp	r2, r3
 792 0020 08D9     		bls	.L51
1350:Generated_Source\PSoC5/USB.c ****         {
1351:Generated_Source\PSoC5/USB.c ****             length = USB_EPX_DATA_BUF_MAX - USB_EP[epNumber].buffOffset;
 793              		.loc 1 1351 0
 794 0022 00EB4002 		add	r2, r0, r0, lsl #1
 795              	.LVL48:
 796 0026 9300     		lsls	r3, r2, #2
 797 0028 2344     		add	r3, r3, r4
 798 002a DA88     		ldrh	r2, [r3, #6]
 799 002c 92B2     		uxth	r2, r2
 800 002e C2F50072 		rsb	r2, r2, #512
 801 0032 92B2     		uxth	r2, r2
 802              	.LVL49:
 803              	.L51:
1352:Generated_Source\PSoC5/USB.c ****         }
1353:Generated_Source\PSoC5/USB.c ****     #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USB.c **** 
1355:Generated_Source\PSoC5/USB.c ****         /* Set count and data toggle. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 39


1356:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USB_EP[epNumber].epToggle;
 804              		.loc 1 1356 0
 805 0034 00EB4004 		add	r4, r0, r0, lsl #1
 806 0038 A300     		lsls	r3, r4, #2
 807 003a 124C     		ldr	r4, .L59
 808 003c 2344     		add	r3, r3, r4
 809 003e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 810 0040 43EA1223 		orr	r3, r3, r2, lsr #8
 811 0044 104D     		ldr	r5, .L59+4
 812 0046 0401     		lsls	r4, r0, #4
 813 0048 2E19     		adds	r6, r5, r4
 814 004a 2B55     		strb	r3, [r5, r4]
1357:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 815              		.loc 1 1357 0
 816 004c D3B2     		uxtb	r3, r2
 817 004e 7370     		strb	r3, [r6, #1]
1358:Generated_Source\PSoC5/USB.c **** 
1359:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USB.c ****         if (NULL != pData)
 818              		.loc 1 1360 0
 819 0050 39B9     		cbnz	r1, .L55
 820              	.LBB2:
 821 0052 09E0     		b	.L53
 822              	.LVL50:
 823              	.L54:
1361:Generated_Source\PSoC5/USB.c ****         {
1362:Generated_Source\PSoC5/USB.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USB.c ****             uint16 i;
1364:Generated_Source\PSoC5/USB.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USB.c ****             {
1366:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 824              		.loc 1 1366 0 discriminator 3
 825 0054 CE5C     		ldrb	r6, [r1, r3]	@ zero_extendqisi2
 826 0056 3D01     		lsls	r5, r7, #4
 827 0058 0C4C     		ldr	r4, .L59+8
 828 005a 6655     		strb	r6, [r4, r5]
1364:Generated_Source\PSoC5/USB.c ****             {
 829              		.loc 1 1364 0 discriminator 3
 830 005c 0133     		adds	r3, r3, #1
 831              	.LVL51:
 832 005e 9BB2     		uxth	r3, r3
 833              	.LVL52:
 834 0060 00E0     		b	.L52
 835              	.LVL53:
 836              	.L55:
 837              	.LBE2:
 838 0062 0023     		movs	r3, #0
 839              	.L52:
 840              	.LVL54:
 841              	.LBB3:
1364:Generated_Source\PSoC5/USB.c ****             {
 842              		.loc 1 1364 0 is_stmt 0 discriminator 1
 843 0064 9A42     		cmp	r2, r3
 844 0066 F5D8     		bhi	.L54
 845              	.LVL55:
 846              	.L53:
 847              	.LBE3:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 40


1367:Generated_Source\PSoC5/USB.c ****             }
1368:Generated_Source\PSoC5/USB.c ****         }
1369:Generated_Source\PSoC5/USB.c **** 
1370:Generated_Source\PSoC5/USB.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USB.c ****         USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
 848              		.loc 1 1371 0 is_stmt 1
 849 0068 4200     		lsls	r2, r0, #1
 850              	.LVL56:
 851 006a 0244     		add	r2, r2, r0
 852 006c 9300     		lsls	r3, r2, #2
 853 006e 054A     		ldr	r2, .L59
 854 0070 1344     		add	r3, r3, r2
 855 0072 0022     		movs	r2, #0
 856 0074 5A70     		strb	r2, [r3, #1]
1372:Generated_Source\PSoC5/USB.c **** 
1373:Generated_Source\PSoC5/USB.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
 857              		.loc 1 1374 0
 858 0076 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 859 0078 D2B2     		uxtb	r2, r2
 860 007a 0001     		lsls	r0, r0, #4
 861              	.LVL57:
 862 007c 044B     		ldr	r3, .L59+12
 863 007e 1A54     		strb	r2, [r3, r0]
1375:Generated_Source\PSoC5/USB.c **** 
1376:Generated_Source\PSoC5/USB.c ****     #else
1377:Generated_Source\PSoC5/USB.c **** 
1378:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USB.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USB.c ****             if (DMA_INVALID_TD == USB_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USB.c ****             {
1382:Generated_Source\PSoC5/USB.c ****                 USB_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USB.c ****             }
1384:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USB.c **** 
1386:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USB.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USB.c ****             USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USB.c **** 
1390:Generated_Source\PSoC5/USB.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USB.c ****             {
1392:Generated_Source\PSoC5/USB.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USB.c ****                 uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USB.c **** 
1395:Generated_Source\PSoC5/USB.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USB.c **** 
1398:Generated_Source\PSoC5/USB.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP_BASE.arbEp[e
1401:Generated_Source\PSoC5/USB.c **** 
1402:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USB.c ****                 --length;
1404:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG | length |
1405:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USB.c **** 
1407:Generated_Source\PSoC5/USB.c ****                 /* Validate descriptor to execute on following DMA request. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 41


1408:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
1409:Generated_Source\PSoC5/USB.c **** 
1410:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USB.c ****             #else
1413:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChDisable(USB_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaTdSetConfiguration(USB_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1416:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32) pData), LO16((uint32) &
1417:Generated_Source\PSoC5/USB.c **** 
1418:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChSetInitialTd(USB_DmaChan[epNumber], USB_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChEnable(USB_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USB.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USB.c **** 
1423:Generated_Source\PSoC5/USB.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USB_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USB_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USB.c **** 
1427:Generated_Source\PSoC5/USB.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USB.c ****             }
1429:Generated_Source\PSoC5/USB.c ****             else
1430:Generated_Source\PSoC5/USB.c ****             {
1431:Generated_Source\PSoC5/USB.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USB.c ****                 USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USB.c ****             }
1434:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USB.c **** 
1436:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USB.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USB.c ****             {
1439:Generated_Source\PSoC5/USB.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USB.c ****                 uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USB.c **** 
1442:Generated_Source\PSoC5/USB.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USB.c ****                 USB_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USB.c **** 
1445:Generated_Source\PSoC5/USB.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USB.c **** 
1448:Generated_Source\PSoC5/USB.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP_BASE.arbEp[e
1450:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR1, (void*) &USB_ARB_EP_BASE.arbEp[e
1451:Generated_Source\PSoC5/USB.c **** 
1452:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG  |
1454:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USB.c **** 
1456:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR1, USB_DMA_COMMON_CFG  |
1458:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USB.c **** 
1460:Generated_Source\PSoC5/USB.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USB.c **** 
1463:Generated_Source\PSoC5/USB.c **** 
1464:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA channel: configuration complete. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 42


1465:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USB.c **** 
1467:Generated_Source\PSoC5/USB.c ****             #else
1468:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChDisable(USB_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USB.c **** 
1470:Generated_Source\PSoC5/USB.c ****                 #if (USB_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USB.c ****                     USB_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USB.c ****                     USB_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USB.c **** 
1474:Generated_Source\PSoC5/USB.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetConfiguration(USB_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USB.c ****                         (length > USB_DMA_BYTES_PER_BURST) ? USB_DMA_BYTES_PER_BURST : length,
1477:Generated_Source\PSoC5/USB.c ****                         USB_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USB.c ****                                                                                LO16((uint32) &USB_A
1480:Generated_Source\PSoC5/USB.c **** 
1481:Generated_Source\PSoC5/USB.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USB.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USB.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USB.c ****                     */
1485:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetConfiguration(USB_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USB.c ****                                                    USB_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USB.c ****                                                    USB_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USB.c **** 
1489:Generated_Source\PSoC5/USB.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetAddress(USB_DmaNextTd[epNumber], LO16((uint32) &clearInDataRdy
1491:Generated_Source\PSoC5/USB.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USB.c ****                 #else
1493:Generated_Source\PSoC5/USB.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetConfiguration(USB_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USB.c ****                                                    USB_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_A
1496:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USB.c ****                                                                                LO16((uint32) &USB_A
1498:Generated_Source\PSoC5/USB.c ****                 #endif /* (USB_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USB.c **** 
1500:Generated_Source\PSoC5/USB.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaClearPendingDrq(USB_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChSetInitialTd(USB_DmaChan[epNumber], USB_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChEnable(USB_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USB.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USB.c ****             }
1507:Generated_Source\PSoC5/USB.c ****             else
1508:Generated_Source\PSoC5/USB.c ****             {
1509:Generated_Source\PSoC5/USB.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USB.c ****                 USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USB.c **** 
1512:Generated_Source\PSoC5/USB.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USB.c ****                 {
1514:Generated_Source\PSoC5/USB.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USB.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USB.c ****                     uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USB.c **** 
1518:Generated_Source\PSoC5/USB.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] = (uint8) (length / USB_DMA_BYTES_PER_BURST);
1520:Generated_Source\PSoC5/USB.c **** 
1521:Generated_Source\PSoC5/USB.c ****                     /* Get number of elements in the last burst. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 43


1522:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] = (uint8) (length % USB_DMA_BYTES_PER_BURST);
1523:Generated_Source\PSoC5/USB.c **** 
1524:Generated_Source\PSoC5/USB.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] += (0u != USB_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1526:Generated_Source\PSoC5/USB.c **** 
1527:Generated_Source\PSoC5/USB.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] = (0u != USB_DmaEpLastBurstEl[epNumber]) ?
1529:Generated_Source\PSoC5/USB.c ****                                                                           (USB_DmaEpLastBurstEl[epN
1530:Generated_Source\PSoC5/USB.c ****                                                                           (USB_DMA_BYTES_PER_BURST 
1531:Generated_Source\PSoC5/USB.c **** 
1532:Generated_Source\PSoC5/USB.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USB.c ****                     lengthDescr0 = (1u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNum
1534:Generated_Source\PSoC5/USB.c ****                     lengthDescr1 = (2u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNum
1535:Generated_Source\PSoC5/USB.c **** 
1536:Generated_Source\PSoC5/USB.c **** 
1537:Generated_Source\PSoC5/USB.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] |= (0u != (USB_DmaEpBurstCnt[epNumber] & 0x1u)) 
1539:Generated_Source\PSoC5/USB.c ****                                                                             USB_DMA_DESCR0_MASK : U
1540:Generated_Source\PSoC5/USB.c **** 
1541:Generated_Source\PSoC5/USB.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USB.c **** 
1544:Generated_Source\PSoC5/USB.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) ((uint32) USB_DmaEpB
1546:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR1, (void*) ((uint32) USB_DmaEpB
1547:Generated_Source\PSoC5/USB.c ****                                                                                                    
1548:Generated_Source\PSoC5/USB.c **** 
1549:Generated_Source\PSoC5/USB.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetNumDataElements(channelNum, USB_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetNumDataElements(channelNum, USB_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USB.c **** 
1553:Generated_Source\PSoC5/USB.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
1555:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USB.c **** 
1557:Generated_Source\PSoC5/USB.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USB.c ****                     if (USB_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USB.c ****                     {
1560:Generated_Source\PSoC5/USB.c ****                         USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USB.c ****                     }                   
1562:Generated_Source\PSoC5/USB.c **** 
1563:Generated_Source\PSoC5/USB.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] = USB_DMA_GET_BURST_CNT(USB_DmaEpBurstCnt[epNumber]
1565:Generated_Source\PSoC5/USB.c **** 
1566:Generated_Source\PSoC5/USB.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USB.c **** 
1569:Generated_Source\PSoC5/USB.c ****                 #elif (USB_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USB.c ****                     USB_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USB.c ****                     USB_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USB.c **** 
1573:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaChDisable(USB_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USB.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USB.c ****                         USB_DmaTd[epNumber], (length > USB_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USB.c ****                         USB_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USB.c ****                         USB_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 44


1579:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32)  USB_inDataPointer[
1580:Generated_Source\PSoC5/USB.c ****                                                                                LO16((uint32) &USB_A
1581:Generated_Source\PSoC5/USB.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaClearPendingDrq(USB_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USB.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaChSetInitialTd(USB_DmaChan[epNumber], USB_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaChEnable(USB_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USB.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USB.c **** 
1588:Generated_Source\PSoC5/USB.c ****                 #if !defined (USB_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USB.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USB.c ****                     USB_ARB_EP_BASE.arbEp[epNumber].epCfg |= USB_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USB.c ****                 #endif  /* (USB_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USB.c **** 
1593:Generated_Source\PSoC5/USB.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USB.c ****                 }
1595:Generated_Source\PSoC5/USB.c ****                 else
1596:Generated_Source\PSoC5/USB.c ****                 {
1597:Generated_Source\PSoC5/USB.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USB.c ****                     USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USB.c ****                 }
1600:Generated_Source\PSoC5/USB.c ****             }
1601:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USB.c ****     }
1604:Generated_Source\PSoC5/USB.c **** }
 864              		.loc 1 1604 0
 865 0080 F0BC     		pop	{r4, r5, r6, r7}
 866              		.cfi_restore 7
 867              		.cfi_restore 6
 868              		.cfi_restore 5
 869              		.cfi_restore 4
 870              		.cfi_def_cfa_offset 0
 871              	.L58:
 872 0082 7047     		bx	lr
 873              	.L60:
 874              		.align	2
 875              	.L59:
 876 0084 00000000 		.word	USB_EP
 877 0088 FC5F0040 		.word	1073766396
 878 008c 78600040 		.word	1073766520
 879 0090 FE5F0040 		.word	1073766398
 880              		.cfi_endproc
 881              	.LFE11:
 882              		.size	USB_LoadInEP, .-USB_LoadInEP
 883              		.section	.text.USB_EnableOutEP,"ax",%progbits
 884              		.align	2
 885              		.global	USB_EnableOutEP
 886              		.thumb
 887              		.thumb_func
 888              		.type	USB_EnableOutEP, %function
 889              	USB_EnableOutEP:
 890              	.LFB13:
1605:Generated_Source\PSoC5/USB.c **** 
1606:Generated_Source\PSoC5/USB.c **** 
1607:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USB.c **** * Function Name: USB_ReadOutEP
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 45


1609:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USB.c **** *
1611:Generated_Source\PSoC5/USB.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USB.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USB.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USB.c **** *
1615:Generated_Source\PSoC5/USB.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USB.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USB.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USB.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USB.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USB.c **** *
1621:Generated_Source\PSoC5/USB.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USB.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USB.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USB.c **** *   transfer after calling the USB_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USB.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USB.c **** *
1627:Generated_Source\PSoC5/USB.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USB.c **** *
1629:Generated_Source\PSoC5/USB.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USB.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USB.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USB.c **** *
1633:Generated_Source\PSoC5/USB.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USB.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USB.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USB.c **** *
1637:Generated_Source\PSoC5/USB.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USB.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USB.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USB.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USB.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USB.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USB.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USB.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USB.c **** *
1646:Generated_Source\PSoC5/USB.c **** * \return
1647:Generated_Source\PSoC5/USB.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USB.c **** *
1649:Generated_Source\PSoC5/USB.c **** * \reentrant
1650:Generated_Source\PSoC5/USB.c **** *  No.
1651:Generated_Source\PSoC5/USB.c **** *
1652:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USB.c **** uint16 USB_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USB.c ****                                                                         
1655:Generated_Source\PSoC5/USB.c **** {
1656:Generated_Source\PSoC5/USB.c ****     if ((pData != NULL) && (epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
1657:Generated_Source\PSoC5/USB.c ****     {
1658:Generated_Source\PSoC5/USB.c ****     #if (!USB_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USB.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USB.c ****         length = (length > USB_GetEPCount(epNumber)) ? USB_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC5/USB.c ****     #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USB.c **** 
1663:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USB.c ****         {
1665:Generated_Source\PSoC5/USB.c ****             /* Copy data using arbiter data register. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 46


1666:Generated_Source\PSoC5/USB.c ****             uint16 i;
1667:Generated_Source\PSoC5/USB.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USB.c ****             {
1669:Generated_Source\PSoC5/USB.c ****                 pData[i] = (uint8) USB_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USB.c ****             }
1671:Generated_Source\PSoC5/USB.c ****         }
1672:Generated_Source\PSoC5/USB.c **** 
1673:Generated_Source\PSoC5/USB.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USB.c ****         USB_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USB.c ****     #else
1676:Generated_Source\PSoC5/USB.c **** 
1677:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USB.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USB.c ****             if (DMA_INVALID_TD == USB_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USB.c ****             {
1681:Generated_Source\PSoC5/USB.c ****                 USB_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USB.c ****             }
1683:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USB.c **** 
1685:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USB.c ****         {
1688:Generated_Source\PSoC5/USB.c ****             uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USB.c **** 
1690:Generated_Source\PSoC5/USB.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USB.c **** 
1693:Generated_Source\PSoC5/USB.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP_BASE.arbEp[epNum
1695:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USB.c **** 
1697:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG | (uint16)(len
1699:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USB.c **** 
1701:Generated_Source\PSoC5/USB.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USB.c ****             USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
1703:Generated_Source\PSoC5/USB.c **** 
1704:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USB.c ****         }
1707:Generated_Source\PSoC5/USB.c ****         #else
1708:Generated_Source\PSoC5/USB.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChDisable(USB_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USB.c ****             (void) CyDmaTdSetConfiguration(USB_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_TERMI
1711:Generated_Source\PSoC5/USB.c ****             (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32) &USB_ARB_EP_BASE.arbEp[epNu
1712:Generated_Source\PSoC5/USB.c **** 
1713:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChSetInitialTd(USB_DmaChan[epNumber], USB_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChEnable(USB_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USB.c **** 
1718:Generated_Source\PSoC5/USB.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USB.c ****             USB_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USB_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USB.c ****             USB_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USB_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USB.c **** 
1722:Generated_Source\PSoC5/USB.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 47


1723:Generated_Source\PSoC5/USB.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USB.c ****             */
1725:Generated_Source\PSoC5/USB.c **** 
1726:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USB.c **** 
1728:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USB.c ****         {
1731:Generated_Source\PSoC5/USB.c ****             uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USB.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USB.c **** 
1734:Generated_Source\PSoC5/USB.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] = (uint8) (length / USB_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USB.c **** 
1737:Generated_Source\PSoC5/USB.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] = (uint8) (length % USB_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USB.c **** 
1740:Generated_Source\PSoC5/USB.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] += (0u != USB_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
1742:Generated_Source\PSoC5/USB.c **** 
1743:Generated_Source\PSoC5/USB.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] = (0u != USB_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USB.c ****                                                                   (USB_DmaEpLastBurstEl[epNumber] -
1746:Generated_Source\PSoC5/USB.c ****                                                                   (USB_DMA_BYTES_PER_BURST - 1u);
1747:Generated_Source\PSoC5/USB.c **** 
1748:Generated_Source\PSoC5/USB.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USB.c ****             lengthDescr0 = (1u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNumber] : (
1750:Generated_Source\PSoC5/USB.c ****             lengthDescr1 = (2u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNumber] : (
1751:Generated_Source\PSoC5/USB.c **** 
1752:Generated_Source\PSoC5/USB.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] |= (USB_DmaEpBurstCnt[epNumber] > 2u) ? USB_DMA_DESCR_RE
1754:Generated_Source\PSoC5/USB.c **** 
1755:Generated_Source\PSoC5/USB.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] |= (0u != (USB_DmaEpBurstCnt[epNumber] & 0x1u)) ?
1757:Generated_Source\PSoC5/USB.c ****                                                                     USB_DMA_DESCR0_MASK : USB_DMA_D
1758:Generated_Source\PSoC5/USB.c **** 
1759:Generated_Source\PSoC5/USB.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCntBackup[epNumber]   = USB_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USB.c **** 
1763:Generated_Source\PSoC5/USB.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] = USB_DMA_GET_BURST_CNT(USB_DmaEpBurstCnt[epNumber]);
1765:Generated_Source\PSoC5/USB.c **** 
1766:Generated_Source\PSoC5/USB.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USB.c **** 
1769:Generated_Source\PSoC5/USB.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP_BASE.arbEp[epNum
1771:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR1, (void*) &USB_ARB_EP_BASE.arbEp[epNum
1772:Generated_Source\PSoC5/USB.c **** 
1773:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR1, (void*) ((uint32) pData + USB_DMA_BY
1775:Generated_Source\PSoC5/USB.c **** 
1776:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG  | lengthDescr
1778:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USB.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 48


1780:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR1, USB_DMA_COMMON_CFG  | lengthDescr
1782:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USB.c **** 
1784:Generated_Source\PSoC5/USB.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USB.c **** 
1787:Generated_Source\PSoC5/USB.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USB.c ****             USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
1789:Generated_Source\PSoC5/USB.c **** 
1790:Generated_Source\PSoC5/USB.c ****             if (USB_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USB.c ****             {
1792:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR1);
1793:Generated_Source\PSoC5/USB.c ****             }
1794:Generated_Source\PSoC5/USB.c **** 
1795:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USB.c ****         }
1798:Generated_Source\PSoC5/USB.c ****         #else
1799:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChDisable(USB_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USB.c ****             (void) CyDmaTdSetConfiguration(USB_DmaTd[epNumber], length,  USB_DmaTd[epNumber], TD_TE
1801:Generated_Source\PSoC5/USB.c ****             (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32) &USB_ARB_EP_BASE.arbEp[epNu
1802:Generated_Source\PSoC5/USB.c **** 
1803:Generated_Source\PSoC5/USB.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USB.c ****             (void) CyDmaClearPendingDrq(USB_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USB.c **** 
1806:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChSetInitialTd(USB_DmaChan[epNumber], USB_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChEnable(USB_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USB.c **** 
1811:Generated_Source\PSoC5/USB.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USB.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USB.c ****             */
1814:Generated_Source\PSoC5/USB.c **** 
1815:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USB.c ****     }
1818:Generated_Source\PSoC5/USB.c ****     else
1819:Generated_Source\PSoC5/USB.c ****     {
1820:Generated_Source\PSoC5/USB.c ****         length = 0u;
1821:Generated_Source\PSoC5/USB.c ****     }
1822:Generated_Source\PSoC5/USB.c **** 
1823:Generated_Source\PSoC5/USB.c ****     return (length);
1824:Generated_Source\PSoC5/USB.c **** }
1825:Generated_Source\PSoC5/USB.c **** 
1826:Generated_Source\PSoC5/USB.c **** 
1827:Generated_Source\PSoC5/USB.c **** #if (USB_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USB.c **** * Function Name: USB_LoadInEP16
1830:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USB.c **** *
1832:Generated_Source\PSoC5/USB.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USB.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USB.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USB.c **** *
1836:Generated_Source\PSoC5/USB.c **** *  *Manual (Static/Dynamic Allocation):*
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 49


1837:Generated_Source\PSoC5/USB.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USB.c **** *  data transfer.
1839:Generated_Source\PSoC5/USB.c **** *
1840:Generated_Source\PSoC5/USB.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USB.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USB.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USB.c **** *
1844:Generated_Source\PSoC5/USB.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USB.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USB.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USB.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USB.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USB.c **** *
1850:Generated_Source\PSoC5/USB.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USB.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USB.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USB.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USB.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USB.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USB.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USB.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USB.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USB.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USB.c **** *
1861:Generated_Source\PSoC5/USB.c **** * \reentrant
1862:Generated_Source\PSoC5/USB.c **** *  No.
1863:Generated_Source\PSoC5/USB.c **** *
1864:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USB.c **** void USB_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USB.c **** {
1867:Generated_Source\PSoC5/USB.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USB.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USB.c **** 
1870:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
1871:Generated_Source\PSoC5/USB.c ****     {
1872:Generated_Source\PSoC5/USB.c ****     #if (!USB_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USB.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USB.c ****         if (length > (USB_EPX_DATA_BUF_MAX - USB_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USB.c ****         {
1876:Generated_Source\PSoC5/USB.c ****             length = USB_EPX_DATA_BUF_MAX - USB_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USB.c ****         }
1878:Generated_Source\PSoC5/USB.c ****     #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USB.c **** 
1880:Generated_Source\PSoC5/USB.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USB_EP[epNumber].epToggle;
1882:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USB.c **** 
1884:Generated_Source\PSoC5/USB.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USB.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USB.c **** 
1887:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USB.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USB.c ****         {
1890:Generated_Source\PSoC5/USB.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USB.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USB.c **** 
1893:Generated_Source\PSoC5/USB.c ****             /* Copy data using 16-bits arbiter data register. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 50


1894:Generated_Source\PSoC5/USB.c ****             uint16 i;
1895:Generated_Source\PSoC5/USB.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USB.c ****             {
1897:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USB.c ****             }
1899:Generated_Source\PSoC5/USB.c ****         }
1900:Generated_Source\PSoC5/USB.c **** 
1901:Generated_Source\PSoC5/USB.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USB.c ****         USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USB.c **** 
1904:Generated_Source\PSoC5/USB.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USB.c **** 
1907:Generated_Source\PSoC5/USB.c ****     #else
1908:Generated_Source\PSoC5/USB.c **** 
1909:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USB.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USB.c ****             USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USB.c **** 
1913:Generated_Source\PSoC5/USB.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USB.c ****             {
1915:Generated_Source\PSoC5/USB.c ****                 uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USB.c **** 
1917:Generated_Source\PSoC5/USB.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USB.c **** 
1920:Generated_Source\PSoC5/USB.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP16_BASE.arbEp
1923:Generated_Source\PSoC5/USB.c **** 
1924:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USB.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG | length |
1927:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USB.c **** 
1929:Generated_Source\PSoC5/USB.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
1931:Generated_Source\PSoC5/USB.c **** 
1932:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USB.c **** 
1935:Generated_Source\PSoC5/USB.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USB_ARB_EPX_CFG_DMA_REQ;
1937:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USB_ARB_EPX_CFG_DMA_REQ;
1938:Generated_Source\PSoC5/USB.c **** 
1939:Generated_Source\PSoC5/USB.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USB.c ****             }
1941:Generated_Source\PSoC5/USB.c ****             else
1942:Generated_Source\PSoC5/USB.c ****             {
1943:Generated_Source\PSoC5/USB.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USB.c ****                 USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USB.c ****             }
1946:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USB.c **** 
1948:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USB.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USB.c ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 51


1951:Generated_Source\PSoC5/USB.c ****                 uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USB.c **** 
1953:Generated_Source\PSoC5/USB.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USB.c ****                 USB_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USB.c **** 
1956:Generated_Source\PSoC5/USB.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USB.c **** 
1959:Generated_Source\PSoC5/USB.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP16_BASE.arbEp
1961:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR1, (void*) &USB_ARB_EP16_BASE.arbEp
1962:Generated_Source\PSoC5/USB.c **** 
1963:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG  |
1965:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USB.c **** 
1967:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR1, USB_DMA_COMMON_CFG  |
1969:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USB.c **** 
1971:Generated_Source\PSoC5/USB.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USB.c **** 
1974:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USB.c ****             }
1977:Generated_Source\PSoC5/USB.c ****             else
1978:Generated_Source\PSoC5/USB.c ****             {
1979:Generated_Source\PSoC5/USB.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USB.c ****                 USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USB.c **** 
1982:Generated_Source\PSoC5/USB.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USB.c ****                 {
1984:Generated_Source\PSoC5/USB.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USB.c ****                     uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USB.c **** 
1987:Generated_Source\PSoC5/USB.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] = (uint8) (length / USB_DMA_BYTES_PER_BURST);
1989:Generated_Source\PSoC5/USB.c **** 
1990:Generated_Source\PSoC5/USB.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] = (uint8) (length % USB_DMA_BYTES_PER_BURST);
1992:Generated_Source\PSoC5/USB.c **** 
1993:Generated_Source\PSoC5/USB.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] += (0u != USB_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1995:Generated_Source\PSoC5/USB.c **** 
1996:Generated_Source\PSoC5/USB.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] = (0u != USB_DmaEpLastBurstEl[epNumber]) ?
1998:Generated_Source\PSoC5/USB.c ****                                                                           ((USB_DmaEpLastBurstEl[ep
1999:Generated_Source\PSoC5/USB.c ****                                                                            (USB_DMA_HALFWORDS_PER_B
2000:Generated_Source\PSoC5/USB.c **** 
2001:Generated_Source\PSoC5/USB.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USB.c ****                     lengthDescr0 = (1u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNum
2003:Generated_Source\PSoC5/USB.c ****                     lengthDescr1 = (2u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNum
2004:Generated_Source\PSoC5/USB.c **** 
2005:Generated_Source\PSoC5/USB.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] |= (0u != (USB_DmaEpBurstCnt[epNumber] & 0x1u)) 
2007:Generated_Source\PSoC5/USB.c ****                                                                             USB_DMA_DESCR0_MASK : U
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 52


2008:Generated_Source\PSoC5/USB.c **** 
2009:Generated_Source\PSoC5/USB.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USB.c **** 
2012:Generated_Source\PSoC5/USB.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) ((uint32) USB_DmaEpB
2014:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR1, (void*) ((uint32) USB_DmaEpB
2015:Generated_Source\PSoC5/USB.c ****                                                                                                    
2016:Generated_Source\PSoC5/USB.c **** 
2017:Generated_Source\PSoC5/USB.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetNumDataElements(channelNum, USB_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetNumDataElements(channelNum, USB_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USB.c **** 
2021:Generated_Source\PSoC5/USB.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
2023:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USB.c **** 
2025:Generated_Source\PSoC5/USB.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USB.c ****                     if (USB_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USB.c ****                     {
2028:Generated_Source\PSoC5/USB.c ****                         USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR1);
2029:Generated_Source\PSoC5/USB.c ****                     }
2030:Generated_Source\PSoC5/USB.c **** 
2031:Generated_Source\PSoC5/USB.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] = USB_DMA_GET_BURST_CNT(USB_DmaEpBurstCnt[epNumber]
2033:Generated_Source\PSoC5/USB.c **** 
2034:Generated_Source\PSoC5/USB.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USB.c **** 
2037:Generated_Source\PSoC5/USB.c ****                 #if !defined (USB_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USB.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USB.c ****                     USB_ARB_EP_BASE.arbEp[epNumber].epCfg |= USB_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USB.c ****                 #endif  /* (USB_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USB.c **** 
2042:Generated_Source\PSoC5/USB.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USB.c ****                 }
2044:Generated_Source\PSoC5/USB.c ****                 else
2045:Generated_Source\PSoC5/USB.c ****                 {
2046:Generated_Source\PSoC5/USB.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USB.c ****                     USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USB.c ****                 }
2049:Generated_Source\PSoC5/USB.c ****             }
2050:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USB.c ****     }
2053:Generated_Source\PSoC5/USB.c **** }
2054:Generated_Source\PSoC5/USB.c **** 
2055:Generated_Source\PSoC5/USB.c **** 
2056:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USB.c **** * Function Name: USB_ReadOutEP16
2058:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USB.c **** *
2060:Generated_Source\PSoC5/USB.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USB.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USB.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USB.c **** *
2064:Generated_Source\PSoC5/USB.c **** *   *Manual (Static/Dynamic Allocation):*
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 53


2065:Generated_Source\PSoC5/USB.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USB.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USB.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USB.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USB.c **** *
2070:Generated_Source\PSoC5/USB.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USB.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USB.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USB.c **** *   transfer after calling the USB_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USB.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USB.c **** *
2076:Generated_Source\PSoC5/USB.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USB.c **** *
2078:Generated_Source\PSoC5/USB.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USB.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USB.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USB.c **** *
2082:Generated_Source\PSoC5/USB.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USB.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USB.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USB.c **** *
2086:Generated_Source\PSoC5/USB.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USB.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USB.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USB.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USB.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USB.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USB.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USB.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USB.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USB.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USB.c **** *
2097:Generated_Source\PSoC5/USB.c **** * \return
2098:Generated_Source\PSoC5/USB.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USB.c **** *
2100:Generated_Source\PSoC5/USB.c **** * \reentrant
2101:Generated_Source\PSoC5/USB.c **** *  No.
2102:Generated_Source\PSoC5/USB.c **** *
2103:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USB.c **** uint16 USB_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USB.c **** {
2106:Generated_Source\PSoC5/USB.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USB.c **** 
2108:Generated_Source\PSoC5/USB.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USB.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USB.c **** 
2111:Generated_Source\PSoC5/USB.c ****     if ((pData != NULL) && (epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
2112:Generated_Source\PSoC5/USB.c ****     {
2113:Generated_Source\PSoC5/USB.c ****     #if (!USB_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USB.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USB.c ****         length = (length > USB_GetEPCount(epNumber)) ? USB_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USB.c ****     #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USB.c **** 
2118:Generated_Source\PSoC5/USB.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USB.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USB.c **** 
2121:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_MANUAL)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 54


2122:Generated_Source\PSoC5/USB.c ****         {
2123:Generated_Source\PSoC5/USB.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USB.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USB.c **** 
2126:Generated_Source\PSoC5/USB.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USB.c ****             uint16 i;
2128:Generated_Source\PSoC5/USB.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USB.c ****             {
2130:Generated_Source\PSoC5/USB.c ****                 dataBuf[i] = (uint16) USB_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USB.c ****             }
2132:Generated_Source\PSoC5/USB.c ****         }
2133:Generated_Source\PSoC5/USB.c **** 
2134:Generated_Source\PSoC5/USB.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USB.c ****         USB_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USB.c ****     #else
2137:Generated_Source\PSoC5/USB.c **** 
2138:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USB.c ****         {
2140:Generated_Source\PSoC5/USB.c ****             uint32 channelNum = (uint32) USB_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USB.c **** 
2142:Generated_Source\PSoC5/USB.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USB.c **** 
2145:Generated_Source\PSoC5/USB.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP16_BASE.arbEp[epN
2147:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USB.c **** 
2149:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG | (uint16)((ad
2151:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USB.c **** 
2153:Generated_Source\PSoC5/USB.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USB.c ****             USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
2155:Generated_Source\PSoC5/USB.c **** 
2156:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USB.c **** 
2159:Generated_Source\PSoC5/USB.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USB.c ****             USB_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USB_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USB.c ****             USB_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USB_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USB.c **** 
2163:Generated_Source\PSoC5/USB.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USB.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USB.c ****             */
2166:Generated_Source\PSoC5/USB.c ****         }
2167:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USB.c **** 
2169:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USB.c ****         {
2171:Generated_Source\PSoC5/USB.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USB.c ****             uint32 channelNum = (uint32) USB_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USB.c **** 
2174:Generated_Source\PSoC5/USB.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USB_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USB.c **** 
2177:Generated_Source\PSoC5/USB.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USB_DMA_BYTES_PER_BURST);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 55


2179:Generated_Source\PSoC5/USB.c **** 
2180:Generated_Source\PSoC5/USB.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] += (0u != USB_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
2182:Generated_Source\PSoC5/USB.c **** 
2183:Generated_Source\PSoC5/USB.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] = (0u != USB_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USB.c ****                                                                   ((USB_DmaEpLastBurstEl[epNumber] 
2186:Generated_Source\PSoC5/USB.c ****                                                                    (USB_DMA_HALFWORDS_PER_BURST - 1
2187:Generated_Source\PSoC5/USB.c **** 
2188:Generated_Source\PSoC5/USB.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USB.c ****             lengthDescr0 = (1u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNumber] : (
2190:Generated_Source\PSoC5/USB.c ****             lengthDescr1 = (2u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNumber] : (
2191:Generated_Source\PSoC5/USB.c **** 
2192:Generated_Source\PSoC5/USB.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] |= (0u != (USB_DmaEpBurstCnt[epNumber] & 0x1u)) ?
2194:Generated_Source\PSoC5/USB.c ****                                                                     USB_DMA_DESCR0_MASK : USB_DMA_D
2195:Generated_Source\PSoC5/USB.c **** 
2196:Generated_Source\PSoC5/USB.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] |= (USB_DmaEpBurstCnt[epNumber] > 2u) ? USB_DMA_DESCR_RE
2198:Generated_Source\PSoC5/USB.c **** 
2199:Generated_Source\PSoC5/USB.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] |= USB_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USB.c **** 
2202:Generated_Source\PSoC5/USB.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCntBackup[epNumber]   = USB_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USB.c **** 
2206:Generated_Source\PSoC5/USB.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] = USB_DMA_GET_BURST_CNT(USB_DmaEpBurstCnt[epNumber]);
2208:Generated_Source\PSoC5/USB.c **** 
2209:Generated_Source\PSoC5/USB.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USB.c **** 
2212:Generated_Source\PSoC5/USB.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP16_BASE.arbEp[epN
2214:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR1, (void*) &USB_ARB_EP16_BASE.arbEp[epN
2215:Generated_Source\PSoC5/USB.c **** 
2216:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR1, (void*) ((uint32) pData + USB_DMA_BY
2218:Generated_Source\PSoC5/USB.c **** 
2219:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG  | lengthDescr
2221:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USB.c **** 
2223:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR1, USB_DMA_COMMON_CFG  | lengthDescr
2225:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USB.c **** 
2227:Generated_Source\PSoC5/USB.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USB.c **** 
2230:Generated_Source\PSoC5/USB.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USB.c ****             USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
2232:Generated_Source\PSoC5/USB.c ****             
2233:Generated_Source\PSoC5/USB.c ****             if (USB_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USB.c ****             {
2235:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR1);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 56


2236:Generated_Source\PSoC5/USB.c ****             }
2237:Generated_Source\PSoC5/USB.c **** 
2238:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USB.c **** 
2241:Generated_Source\PSoC5/USB.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USB.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USB.c ****             */
2244:Generated_Source\PSoC5/USB.c ****         }
2245:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USB.c ****     }
2248:Generated_Source\PSoC5/USB.c ****     else
2249:Generated_Source\PSoC5/USB.c ****     {
2250:Generated_Source\PSoC5/USB.c ****         length = 0u;
2251:Generated_Source\PSoC5/USB.c ****     }
2252:Generated_Source\PSoC5/USB.c **** 
2253:Generated_Source\PSoC5/USB.c ****     return (length);
2254:Generated_Source\PSoC5/USB.c **** }
2255:Generated_Source\PSoC5/USB.c **** #endif /* (USB_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USB.c **** 
2257:Generated_Source\PSoC5/USB.c **** 
2258:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USB.c **** * Function Name: USB_EnableOutEP
2260:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USB.c **** *
2262:Generated_Source\PSoC5/USB.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USB.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USB.c **** *
2265:Generated_Source\PSoC5/USB.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USB.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USB.c **** *
2268:Generated_Source\PSoC5/USB.c **** * \globalvars
2269:Generated_Source\PSoC5/USB.c **** *
2270:Generated_Source\PSoC5/USB.c **** *  \ref USB_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USB.c **** *
2272:Generated_Source\PSoC5/USB.c **** * \reentrant
2273:Generated_Source\PSoC5/USB.c **** *  No.
2274:Generated_Source\PSoC5/USB.c **** *
2275:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USB.c **** void USB_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USB.c **** {
 891              		.loc 1 2277 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              		@ link register save eliminated.
 896              	.LVL58:
2278:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 897              		.loc 1 2278 0
 898 0000 431E     		subs	r3, r0, #1
 899 0002 DBB2     		uxtb	r3, r3
 900 0004 072B     		cmp	r3, #7
 901 0006 0BD8     		bhi	.L61
2279:Generated_Source\PSoC5/USB.c ****     {
2280:Generated_Source\PSoC5/USB.c ****         USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
 902              		.loc 1 2280 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 57


 903 0008 4200     		lsls	r2, r0, #1
 904 000a 0244     		add	r2, r2, r0
 905 000c 9300     		lsls	r3, r2, #2
 906 000e 054A     		ldr	r2, .L63
 907 0010 1344     		add	r3, r3, r2
 908 0012 0022     		movs	r2, #0
 909 0014 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USB.c **** 
2282:Generated_Source\PSoC5/USB.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
 910              		.loc 1 2283 0
 911 0016 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 912 0018 D2B2     		uxtb	r2, r2
 913 001a 0001     		lsls	r0, r0, #4
 914              	.LVL59:
 915 001c 024B     		ldr	r3, .L63+4
 916 001e 1A54     		strb	r2, [r3, r0]
 917              	.L61:
 918 0020 7047     		bx	lr
 919              	.L64:
 920 0022 00BF     		.align	2
 921              	.L63:
 922 0024 00000000 		.word	USB_EP
 923 0028 FE5F0040 		.word	1073766398
 924              		.cfi_endproc
 925              	.LFE13:
 926              		.size	USB_EnableOutEP, .-USB_EnableOutEP
 927              		.section	.text.USB_ReadOutEP,"ax",%progbits
 928              		.align	2
 929              		.global	USB_ReadOutEP
 930              		.thumb
 931              		.thumb_func
 932              		.type	USB_ReadOutEP, %function
 933              	USB_ReadOutEP:
 934              	.LFB12:
1655:Generated_Source\PSoC5/USB.c ****     if ((pData != NULL) && (epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 935              		.loc 1 1655 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              	.LVL60:
 940 0000 70B5     		push	{r4, r5, r6, lr}
 941              		.cfi_def_cfa_offset 16
 942              		.cfi_offset 4, -16
 943              		.cfi_offset 5, -12
 944              		.cfi_offset 6, -8
 945              		.cfi_offset 14, -4
1656:Generated_Source\PSoC5/USB.c ****     {
 946              		.loc 1 1656 0
 947 0002 D9B1     		cbz	r1, .L70
 948 0004 0546     		mov	r5, r0
 949 0006 1446     		mov	r4, r2
 950 0008 0E46     		mov	r6, r1
1656:Generated_Source\PSoC5/USB.c ****     {
 951              		.loc 1 1656 0 is_stmt 0 discriminator 1
 952 000a C8B1     		cbz	r0, .L71
1656:Generated_Source\PSoC5/USB.c ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 58


 953              		.loc 1 1656 0 discriminator 2
 954 000c 0828     		cmp	r0, #8
 955 000e 19D8     		bhi	.L72
1660:Generated_Source\PSoC5/USB.c ****     #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
 956              		.loc 1 1660 0 is_stmt 1
 957 0010 FFF7FEFF 		bl	USB_GetEPCount
 958              	.LVL61:
 959 0014 A042     		cmp	r0, r4
 960 0016 03D2     		bcs	.L67
1660:Generated_Source\PSoC5/USB.c ****     #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
 961              		.loc 1 1660 0 is_stmt 0 discriminator 1
 962 0018 2846     		mov	r0, r5
 963 001a FFF7FEFF 		bl	USB_GetEPCount
 964              	.LVL62:
 965 001e 0446     		mov	r4, r0
 966              	.L67:
 967              	.LVL63:
 968              	.LBB4:
1667:Generated_Source\PSoC5/USB.c ****             {
 969              		.loc 1 1667 0 is_stmt 1 discriminator 4
 970 0020 0023     		movs	r3, #0
 971 0022 05E0     		b	.L68
 972              	.LVL64:
 973              	.L69:
1669:Generated_Source\PSoC5/USB.c ****             }
 974              		.loc 1 1669 0 discriminator 3
 975 0024 2901     		lsls	r1, r5, #4
 976 0026 094A     		ldr	r2, .L74
 977 0028 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 978 002a F254     		strb	r2, [r6, r3]
1667:Generated_Source\PSoC5/USB.c ****             {
 979              		.loc 1 1667 0 discriminator 3
 980 002c 0133     		adds	r3, r3, #1
 981              	.LVL65:
 982 002e 9BB2     		uxth	r3, r3
 983              	.LVL66:
 984              	.L68:
1667:Generated_Source\PSoC5/USB.c ****             {
 985              		.loc 1 1667 0 is_stmt 0 discriminator 1
 986 0030 A342     		cmp	r3, r4
 987 0032 F7D3     		bcc	.L69
 988              	.LBE4:
1674:Generated_Source\PSoC5/USB.c ****     #else
 989              		.loc 1 1674 0 is_stmt 1
 990 0034 2846     		mov	r0, r5
 991 0036 FFF7FEFF 		bl	USB_EnableOutEP
 992              	.LVL67:
 993 003a 04E0     		b	.L66
 994              	.LVL68:
 995              	.L70:
1820:Generated_Source\PSoC5/USB.c ****     }
 996              		.loc 1 1820 0
 997 003c 0024     		movs	r4, #0
 998 003e 02E0     		b	.L66
 999              	.L71:
 1000 0040 0024     		movs	r4, #0
 1001 0042 00E0     		b	.L66
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 59


 1002              	.L72:
 1003 0044 0024     		movs	r4, #0
 1004              	.LVL69:
 1005              	.L66:
1824:Generated_Source\PSoC5/USB.c **** 
 1006              		.loc 1 1824 0
 1007 0046 2046     		mov	r0, r4
 1008 0048 70BD     		pop	{r4, r5, r6, pc}
 1009              	.LVL70:
 1010              	.L75:
 1011 004a 00BF     		.align	2
 1012              	.L74:
 1013 004c 78600040 		.word	1073766520
 1014              		.cfi_endproc
 1015              	.LFE12:
 1016              		.size	USB_ReadOutEP, .-USB_ReadOutEP
 1017              		.section	.text.USB_DisableOutEP,"ax",%progbits
 1018              		.align	2
 1019              		.global	USB_DisableOutEP
 1020              		.thumb
 1021              		.thumb_func
 1022              		.type	USB_DisableOutEP, %function
 1023              	USB_DisableOutEP:
 1024              	.LFB14:
2284:Generated_Source\PSoC5/USB.c ****         
2285:Generated_Source\PSoC5/USB.c ****     }
2286:Generated_Source\PSoC5/USB.c **** }
2287:Generated_Source\PSoC5/USB.c **** 
2288:Generated_Source\PSoC5/USB.c **** 
2289:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USB.c **** * Function Name: USB_DisableOutEP
2291:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USB.c **** *
2293:Generated_Source\PSoC5/USB.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USB.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USB.c **** *
2296:Generated_Source\PSoC5/USB.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USB.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USB.c **** *
2299:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USB.c **** void USB_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USB.c **** {
 1025              		.loc 1 2301 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              		@ link register save eliminated.
 1030              	.LVL71:
2302:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 1031              		.loc 1 2302 0
 1032 0000 431E     		subs	r3, r0, #1
 1033 0002 DBB2     		uxtb	r3, r3
 1034 0004 072B     		cmp	r3, #7
 1035 0006 03D8     		bhi	.L76
2303:Generated_Source\PSoC5/USB.c ****     {
2304:Generated_Source\PSoC5/USB.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_MODE_NAK_OUT;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 60


 1036              		.loc 1 2305 0
 1037 0008 0001     		lsls	r0, r0, #4
 1038              	.LVL72:
 1039 000a 024B     		ldr	r3, .L78
 1040 000c 0822     		movs	r2, #8
 1041 000e 1A54     		strb	r2, [r3, r0]
 1042              	.L76:
 1043 0010 7047     		bx	lr
 1044              	.L79:
 1045 0012 00BF     		.align	2
 1046              	.L78:
 1047 0014 FE5F0040 		.word	1073766398
 1048              		.cfi_endproc
 1049              	.LFE14:
 1050              		.size	USB_DisableOutEP, .-USB_DisableOutEP
 1051              		.section	.text.USB_Force,"ax",%progbits
 1052              		.align	2
 1053              		.global	USB_Force
 1054              		.thumb
 1055              		.thumb_func
 1056              		.type	USB_Force, %function
 1057              	USB_Force:
 1058              	.LFB15:
2306:Generated_Source\PSoC5/USB.c ****     }
2307:Generated_Source\PSoC5/USB.c **** }
2308:Generated_Source\PSoC5/USB.c **** 
2309:Generated_Source\PSoC5/USB.c **** 
2310:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USB.c **** * Function Name: USB_Force
2312:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USB.c **** *
2314:Generated_Source\PSoC5/USB.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USB.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USB.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USB.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USB.c **** *
2319:Generated_Source\PSoC5/USB.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USB.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USB.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USB.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USB.c **** *    USB_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USB.c **** *    USB_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USB.c **** *    USB_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USB.c **** *    USB_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USB.c **** *
2328:Generated_Source\PSoC5/USB.c **** *
2329:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USB.c **** void USB_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USB.c **** {
 1059              		.loc 1 2331 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
 1064              	.LVL73:
2332:Generated_Source\PSoC5/USB.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USB.c ****     * needed before write into it).
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 61


2334:Generated_Source\PSoC5/USB.c ****     */
2335:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR0_REG = bState;
 1065              		.loc 1 2335 0
 1066 0000 014B     		ldr	r3, .L81
 1067 0002 1870     		strb	r0, [r3]
 1068 0004 7047     		bx	lr
 1069              	.L82:
 1070 0006 00BF     		.align	2
 1071              	.L81:
 1072 0008 10600040 		.word	1073766416
 1073              		.cfi_endproc
 1074              	.LFE15:
 1075              		.size	USB_Force, .-USB_Force
 1076              		.section	.text.USB_GetEPAckState,"ax",%progbits
 1077              		.align	2
 1078              		.global	USB_GetEPAckState
 1079              		.thumb
 1080              		.thumb_func
 1081              		.type	USB_GetEPAckState, %function
 1082              	USB_GetEPAckState:
 1083              	.LFB16:
2336:Generated_Source\PSoC5/USB.c **** }
2337:Generated_Source\PSoC5/USB.c **** 
2338:Generated_Source\PSoC5/USB.c **** 
2339:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetEPAckState
2341:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USB.c **** *
2343:Generated_Source\PSoC5/USB.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USB.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USB.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USB.c **** *
2347:Generated_Source\PSoC5/USB.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USB.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USB.c **** *
2350:Generated_Source\PSoC5/USB.c **** *  \return
2351:Generated_Source\PSoC5/USB.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USB.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USB.c **** *
2354:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USB.c **** uint8 USB_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USB.c **** {
 1084              		.loc 1 2356 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089              	.LVL74:
2357:Generated_Source\PSoC5/USB.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USB.c **** 
2359:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 1090              		.loc 1 2359 0
 1091 0000 431E     		subs	r3, r0, #1
 1092 0002 DBB2     		uxtb	r3, r3
 1093 0004 072B     		cmp	r3, #7
 1094 0006 06D8     		bhi	.L85
2360:Generated_Source\PSoC5/USB.c ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 62


2361:Generated_Source\PSoC5/USB.c ****         cr = USB_SIE_EP_BASE.sieEp[epNumber].epCr0 & USB_MODE_ACKD;
 1095              		.loc 1 2361 0
 1096 0008 0001     		lsls	r0, r0, #4
 1097              	.LVL75:
 1098 000a 044B     		ldr	r3, .L86
 1099 000c 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1100 000e 00F01000 		and	r0, r0, #16
 1101 0012 C0B2     		uxtb	r0, r0
 1102              	.LVL76:
 1103 0014 7047     		bx	lr
 1104              	.LVL77:
 1105              	.L85:
2357:Generated_Source\PSoC5/USB.c ****     uint8 cr = 0u;
 1106              		.loc 1 2357 0
 1107 0016 0020     		movs	r0, #0
 1108              	.LVL78:
2362:Generated_Source\PSoC5/USB.c ****     }
2363:Generated_Source\PSoC5/USB.c **** 
2364:Generated_Source\PSoC5/USB.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USB.c **** }
 1109              		.loc 1 2365 0
 1110 0018 7047     		bx	lr
 1111              	.L87:
 1112 001a 00BF     		.align	2
 1113              	.L86:
 1114 001c FE5F0040 		.word	1073766398
 1115              		.cfi_endproc
 1116              	.LFE16:
 1117              		.size	USB_GetEPAckState, .-USB_GetEPAckState
 1118              		.section	.text.USB_SetPowerStatus,"ax",%progbits
 1119              		.align	2
 1120              		.global	USB_SetPowerStatus
 1121              		.thumb
 1122              		.thumb_func
 1123              		.type	USB_SetPowerStatus, %function
 1124              	USB_SetPowerStatus:
 1125              	.LFB17:
2366:Generated_Source\PSoC5/USB.c **** 
2367:Generated_Source\PSoC5/USB.c **** 
2368:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USB.c **** * Function Name: USB_SetPowerStatus
2370:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USB.c **** *
2372:Generated_Source\PSoC5/USB.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USB.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USB.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USB.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USB.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USB.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USB.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USB.c **** *
2380:Generated_Source\PSoC5/USB.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USB.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USB.c **** *        given here:
2383:Generated_Source\PSoC5/USB.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USB.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USB.c **** *  USB_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 63


2386:Generated_Source\PSoC5/USB.c **** *  USB_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USB.c **** *
2388:Generated_Source\PSoC5/USB.c **** * \globalvars
2389:Generated_Source\PSoC5/USB.c **** *
2390:Generated_Source\PSoC5/USB.c **** *  \ref USB_deviceStatus - set power status
2391:Generated_Source\PSoC5/USB.c **** *
2392:Generated_Source\PSoC5/USB.c **** * \reentrant
2393:Generated_Source\PSoC5/USB.c **** *  No.
2394:Generated_Source\PSoC5/USB.c **** *
2395:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USB.c **** void USB_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USB.c **** {
 1126              		.loc 1 2397 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              		@ link register save eliminated.
 1131              	.LVL79:
2398:Generated_Source\PSoC5/USB.c ****     if (powerStatus != USB_DEVICE_STATUS_BUS_POWERED)
 1132              		.loc 1 2398 0
 1133 0000 28B1     		cbz	r0, .L89
2399:Generated_Source\PSoC5/USB.c ****     {
2400:Generated_Source\PSoC5/USB.c ****         USB_deviceStatus |= (uint8)  USB_DEVICE_STATUS_SELF_POWERED;
 1134              		.loc 1 2400 0
 1135 0002 064A     		ldr	r2, .L91
 1136 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1137 0006 43F00103 		orr	r3, r3, #1
 1138 000a 1370     		strb	r3, [r2]
 1139 000c 7047     		bx	lr
 1140              	.L89:
2401:Generated_Source\PSoC5/USB.c ****     }
2402:Generated_Source\PSoC5/USB.c ****     else
2403:Generated_Source\PSoC5/USB.c ****     {
2404:Generated_Source\PSoC5/USB.c ****         USB_deviceStatus &= (uint8) ~USB_DEVICE_STATUS_SELF_POWERED;
 1141              		.loc 1 2404 0
 1142 000e 034A     		ldr	r2, .L91
 1143 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1144 0012 03F0FE03 		and	r3, r3, #254
 1145 0016 1370     		strb	r3, [r2]
 1146 0018 7047     		bx	lr
 1147              	.L92:
 1148 001a 00BF     		.align	2
 1149              	.L91:
 1150 001c 00000000 		.word	USB_deviceStatus
 1151              		.cfi_endproc
 1152              	.LFE17:
 1153              		.size	USB_SetPowerStatus, .-USB_SetPowerStatus
 1154              		.section	.text.USB_RWUEnabled,"ax",%progbits
 1155              		.align	2
 1156              		.global	USB_RWUEnabled
 1157              		.thumb
 1158              		.thumb_func
 1159              		.type	USB_RWUEnabled, %function
 1160              	USB_RWUEnabled:
 1161              	.LFB18:
2405:Generated_Source\PSoC5/USB.c ****     }
2406:Generated_Source\PSoC5/USB.c **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 64


2407:Generated_Source\PSoC5/USB.c **** 
2408:Generated_Source\PSoC5/USB.c **** 
2409:Generated_Source\PSoC5/USB.c **** #if (USB_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USB.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USB.c ****     * Function Name: USB_VBusPresent
2412:Generated_Source\PSoC5/USB.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USB.c ****     *
2414:Generated_Source\PSoC5/USB.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USB.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USB.c ****     *
2417:Generated_Source\PSoC5/USB.c ****     * \return
2418:Generated_Source\PSoC5/USB.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USB.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USB.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USB.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USB.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USB.c ****     *
2424:Generated_Source\PSoC5/USB.c ****     *
2425:Generated_Source\PSoC5/USB.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USB.c ****     uint8 USB_VBusPresent(void) 
2427:Generated_Source\PSoC5/USB.c ****     {
2428:Generated_Source\PSoC5/USB.c ****         return ((0u != (USB_VBUS_STATUS_REG & USB_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USB.c ****     }
2430:Generated_Source\PSoC5/USB.c **** #endif /* (USB_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USB.c **** 
2432:Generated_Source\PSoC5/USB.c **** 
2433:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USB.c **** * Function Name: USB_RWUEnabled
2435:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USB.c **** *
2437:Generated_Source\PSoC5/USB.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USB.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USB.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USB.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USB.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USB.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USB.c **** *  wakeup.
2444:Generated_Source\PSoC5/USB.c **** *
2445:Generated_Source\PSoC5/USB.c **** *
2446:Generated_Source\PSoC5/USB.c **** * \return
2447:Generated_Source\PSoC5/USB.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USB.c **** *
2449:Generated_Source\PSoC5/USB.c **** * \globalvars
2450:Generated_Source\PSoC5/USB.c **** *  USB_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USB.c **** *
2452:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USB.c **** uint8 USB_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USB.c **** {
 1162              		.loc 1 2454 0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              		@ link register save eliminated.
 1167              	.LVL80:
2455:Generated_Source\PSoC5/USB.c ****     uint8 result = USB_FALSE;
2456:Generated_Source\PSoC5/USB.c **** 
2457:Generated_Source\PSoC5/USB.c ****     if (0u != (USB_deviceStatus & USB_DEVICE_STATUS_REMOTE_WAKEUP))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 65


 1168              		.loc 1 2457 0
 1169 0000 044B     		ldr	r3, .L96
 1170 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1171 0004 13F0020F 		tst	r3, #2
 1172 0008 01D1     		bne	.L95
2455:Generated_Source\PSoC5/USB.c ****     uint8 result = USB_FALSE;
 1173              		.loc 1 2455 0
 1174 000a 0020     		movs	r0, #0
 1175 000c 7047     		bx	lr
 1176              	.L95:
2458:Generated_Source\PSoC5/USB.c ****     {
2459:Generated_Source\PSoC5/USB.c ****         result = USB_TRUE;
 1177              		.loc 1 2459 0
 1178 000e 0120     		movs	r0, #1
 1179              	.LVL81:
2460:Generated_Source\PSoC5/USB.c ****     }
2461:Generated_Source\PSoC5/USB.c **** 
2462:Generated_Source\PSoC5/USB.c ****     return (result);
2463:Generated_Source\PSoC5/USB.c **** }
 1180              		.loc 1 2463 0
 1181 0010 7047     		bx	lr
 1182              	.L97:
 1183 0012 00BF     		.align	2
 1184              	.L96:
 1185 0014 00000000 		.word	USB_deviceStatus
 1186              		.cfi_endproc
 1187              	.LFE18:
 1188              		.size	USB_RWUEnabled, .-USB_RWUEnabled
 1189              		.section	.text.USB_GetDeviceAddress,"ax",%progbits
 1190              		.align	2
 1191              		.global	USB_GetDeviceAddress
 1192              		.thumb
 1193              		.thumb_func
 1194              		.type	USB_GetDeviceAddress, %function
 1195              	USB_GetDeviceAddress:
 1196              	.LFB19:
2464:Generated_Source\PSoC5/USB.c **** 
2465:Generated_Source\PSoC5/USB.c **** 
2466:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetDeviceAddress
2468:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USB.c **** *
2470:Generated_Source\PSoC5/USB.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USB.c **** *
2472:Generated_Source\PSoC5/USB.c **** * \return
2473:Generated_Source\PSoC5/USB.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USB.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USB.c **** *
2476:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USB.c **** uint8 USB_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USB.c **** {
 1197              		.loc 1 2478 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USB.c ****     return (uint8)(USB_CR0_REG & USB_CR0_DEVICE_ADDRESS_MASK);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 66


 1202              		.loc 1 2479 0
 1203 0000 024B     		ldr	r3, .L99
 1204 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USB.c **** }
 1205              		.loc 1 2480 0
 1206 0004 00F07F00 		and	r0, r0, #127
 1207 0008 7047     		bx	lr
 1208              	.L100:
 1209 000a 00BF     		.align	2
 1210              	.L99:
 1211 000c 08600040 		.word	1073766408
 1212              		.cfi_endproc
 1213              	.LFE19:
 1214              		.size	USB_GetDeviceAddress, .-USB_GetDeviceAddress
 1215              		.section	.text.USB_EnableSofInt,"ax",%progbits
 1216              		.align	2
 1217              		.global	USB_EnableSofInt
 1218              		.thumb
 1219              		.thumb_func
 1220              		.type	USB_EnableSofInt, %function
 1221              	USB_EnableSofInt:
 1222              	.LFB20:
2481:Generated_Source\PSoC5/USB.c **** 
2482:Generated_Source\PSoC5/USB.c **** 
2483:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USB.c **** * Function Name: USB_EnableSofInt
2485:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USB.c **** *
2487:Generated_Source\PSoC5/USB.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USB.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USB.c **** *
2490:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USB.c **** void USB_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USB.c **** {
 1223              		.loc 1 2492 0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 0
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 1227              		@ link register save eliminated.
2493:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USB.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USB.c ****     USB_INTR_SIE_MASK_REG |= (uint32) USB_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USB.c **** #else
2497:Generated_Source\PSoC5/USB.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USB.c ****     #if (USB_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_SOF_VECT_NUM);
 1228              		.loc 1 2499 0
 1229 0000 4FF40012 		mov	r2, #2097152
 1230 0004 014B     		ldr	r3, .L102
 1231 0006 1A60     		str	r2, [r3]
 1232 0008 7047     		bx	lr
 1233              	.L103:
 1234 000a 00BF     		.align	2
 1235              	.L102:
 1236 000c 00E100E0 		.word	-536813312
 1237              		.cfi_endproc
 1238              	.LFE20:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 67


 1239              		.size	USB_EnableSofInt, .-USB_EnableSofInt
 1240              		.section	.text.USB_DisableSofInt,"ax",%progbits
 1241              		.align	2
 1242              		.global	USB_DisableSofInt
 1243              		.thumb
 1244              		.thumb_func
 1245              		.type	USB_DisableSofInt, %function
 1246              	USB_DisableSofInt:
 1247              	.LFB21:
2500:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USB.c **** }
2503:Generated_Source\PSoC5/USB.c **** 
2504:Generated_Source\PSoC5/USB.c **** 
2505:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USB.c **** * Function Name: USB_DisableSofInt
2507:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USB.c **** *
2509:Generated_Source\PSoC5/USB.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USB.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USB.c **** *
2512:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USB.c **** void USB_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USB.c **** {
 1248              		.loc 1 2514 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252              		@ link register save eliminated.
2515:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USB.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USB.c ****     USB_INTR_SIE_MASK_REG &= (uint32) ~USB_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USB.c **** #else
2519:Generated_Source\PSoC5/USB.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USB.c ****     #if (USB_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_SOF_VECT_NUM);
 1253              		.loc 1 2521 0
 1254 0000 4FF40012 		mov	r2, #2097152
 1255 0004 014B     		ldr	r3, .L105
 1256 0006 1A60     		str	r2, [r3]
 1257 0008 7047     		bx	lr
 1258              	.L106:
 1259 000a 00BF     		.align	2
 1260              	.L105:
 1261 000c 80E100E0 		.word	-536813184
 1262              		.cfi_endproc
 1263              	.LFE21:
 1264              		.size	USB_DisableSofInt, .-USB_DisableSofInt
 1265              		.global	USB_initVar
 1266              		.bss
 1267              		.set	.LANCHOR0,. + 0
 1268              		.type	USB_initVar, %object
 1269              		.size	USB_initVar, 1
 1270              	USB_initVar:
 1271 0000 00       		.space	1
 1272              		.text
 1273              	.Letext0:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 68


 1274              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1275              		.file 3 "Generated_Source\\PSoC5\\USB.h"
 1276              		.file 4 "Generated_Source\\PSoC5\\USB_pvt.h"
 1277              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1278              		.file 6 "Generated_Source\\PSoC5\\USB_Dp.h"
 1279              		.section	.debug_info,"",%progbits
 1280              	.Ldebug_info0:
 1281 0000 60090000 		.4byte	0x960
 1282 0004 0400     		.2byte	0x4
 1283 0006 00000000 		.4byte	.Ldebug_abbrev0
 1284 000a 04       		.byte	0x4
 1285 000b 01       		.uleb128 0x1
 1286 000c 6B040000 		.4byte	.LASF99
 1287 0010 0C       		.byte	0xc
 1288 0011 47010000 		.4byte	.LASF100
 1289 0015 B7010000 		.4byte	.LASF101
 1290 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1291 001d 00000000 		.4byte	0
 1292 0021 00000000 		.4byte	.Ldebug_line0
 1293 0025 02       		.uleb128 0x2
 1294 0026 01       		.byte	0x1
 1295 0027 06       		.byte	0x6
 1296 0028 F9000000 		.4byte	.LASF0
 1297 002c 02       		.uleb128 0x2
 1298 002d 01       		.byte	0x1
 1299 002e 08       		.byte	0x8
 1300 002f 08040000 		.4byte	.LASF1
 1301 0033 02       		.uleb128 0x2
 1302 0034 02       		.byte	0x2
 1303 0035 05       		.byte	0x5
 1304 0036 2E040000 		.4byte	.LASF2
 1305 003a 02       		.uleb128 0x2
 1306 003b 02       		.byte	0x2
 1307 003c 07       		.byte	0x7
 1308 003d 99020000 		.4byte	.LASF3
 1309 0041 02       		.uleb128 0x2
 1310 0042 04       		.byte	0x4
 1311 0043 05       		.byte	0x5
 1312 0044 29010000 		.4byte	.LASF4
 1313 0048 02       		.uleb128 0x2
 1314 0049 04       		.byte	0x4
 1315 004a 07       		.byte	0x7
 1316 004b 5E020000 		.4byte	.LASF5
 1317 004f 02       		.uleb128 0x2
 1318 0050 08       		.byte	0x8
 1319 0051 05       		.byte	0x5
 1320 0052 EB000000 		.4byte	.LASF6
 1321 0056 02       		.uleb128 0x2
 1322 0057 08       		.byte	0x8
 1323 0058 07       		.byte	0x7
 1324 0059 77000000 		.4byte	.LASF7
 1325 005d 03       		.uleb128 0x3
 1326 005e 04       		.byte	0x4
 1327 005f 05       		.byte	0x5
 1328 0060 696E7400 		.ascii	"int\000"
 1329 0064 02       		.uleb128 0x2
 1330 0065 04       		.byte	0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 69


 1331 0066 07       		.byte	0x7
 1332 0067 51020000 		.4byte	.LASF8
 1333 006b 04       		.uleb128 0x4
 1334 006c 64010000 		.4byte	.LASF9
 1335 0070 02       		.byte	0x2
 1336 0071 E401     		.2byte	0x1e4
 1337 0073 2C000000 		.4byte	0x2c
 1338 0077 04       		.uleb128 0x4
 1339 0078 00000000 		.4byte	.LASF10
 1340 007c 02       		.byte	0x2
 1341 007d E501     		.2byte	0x1e5
 1342 007f 3A000000 		.4byte	0x3a
 1343 0083 04       		.uleb128 0x4
 1344 0084 B0010000 		.4byte	.LASF11
 1345 0088 02       		.byte	0x2
 1346 0089 E601     		.2byte	0x1e6
 1347 008b 48000000 		.4byte	0x48
 1348 008f 02       		.uleb128 0x2
 1349 0090 04       		.byte	0x4
 1350 0091 04       		.byte	0x4
 1351 0092 A7030000 		.4byte	.LASF12
 1352 0096 02       		.uleb128 0x2
 1353 0097 08       		.byte	0x8
 1354 0098 04       		.byte	0x4
 1355 0099 82010000 		.4byte	.LASF13
 1356 009d 02       		.uleb128 0x2
 1357 009e 01       		.byte	0x1
 1358 009f 08       		.byte	0x8
 1359 00a0 34050000 		.4byte	.LASF14
 1360 00a4 04       		.uleb128 0x4
 1361 00a5 F1030000 		.4byte	.LASF15
 1362 00a9 02       		.byte	0x2
 1363 00aa 8E02     		.2byte	0x28e
 1364 00ac B0000000 		.4byte	0xb0
 1365 00b0 05       		.uleb128 0x5
 1366 00b1 6B000000 		.4byte	0x6b
 1367 00b5 04       		.uleb128 0x4
 1368 00b6 DC020000 		.4byte	.LASF16
 1369 00ba 02       		.byte	0x2
 1370 00bb 9002     		.2byte	0x290
 1371 00bd C1000000 		.4byte	0xc1
 1372 00c1 05       		.uleb128 0x5
 1373 00c2 83000000 		.4byte	0x83
 1374 00c6 02       		.uleb128 0x2
 1375 00c7 08       		.byte	0x8
 1376 00c8 04       		.byte	0x4
 1377 00c9 2C030000 		.4byte	.LASF17
 1378 00cd 02       		.uleb128 0x2
 1379 00ce 04       		.byte	0x4
 1380 00cf 07       		.byte	0x7
 1381 00d0 23030000 		.4byte	.LASF18
 1382 00d4 06       		.uleb128 0x6
 1383 00d5 0C       		.byte	0xc
 1384 00d6 03       		.byte	0x3
 1385 00d7 8D       		.byte	0x8d
 1386 00d8 49010000 		.4byte	0x149
 1387 00dc 07       		.uleb128 0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 70


 1388 00dd 38030000 		.4byte	.LASF19
 1389 00e1 03       		.byte	0x3
 1390 00e2 8F       		.byte	0x8f
 1391 00e3 6B000000 		.4byte	0x6b
 1392 00e7 00       		.byte	0
 1393 00e8 07       		.uleb128 0x7
 1394 00e9 AD030000 		.4byte	.LASF20
 1395 00ed 03       		.byte	0x3
 1396 00ee 90       		.byte	0x90
 1397 00ef 6B000000 		.4byte	0x6b
 1398 00f3 01       		.byte	0x1
 1399 00f4 07       		.uleb128 0x7
 1400 00f5 19030000 		.4byte	.LASF21
 1401 00f9 03       		.byte	0x3
 1402 00fa 91       		.byte	0x91
 1403 00fb 6B000000 		.4byte	0x6b
 1404 00ff 02       		.byte	0x2
 1405 0100 07       		.uleb128 0x7
 1406 0101 6A010000 		.4byte	.LASF22
 1407 0105 03       		.byte	0x3
 1408 0106 92       		.byte	0x92
 1409 0107 6B000000 		.4byte	0x6b
 1410 010b 03       		.byte	0x3
 1411 010c 07       		.uleb128 0x7
 1412 010d 8E000000 		.4byte	.LASF23
 1413 0111 03       		.byte	0x3
 1414 0112 93       		.byte	0x93
 1415 0113 6B000000 		.4byte	0x6b
 1416 0117 04       		.byte	0x4
 1417 0118 07       		.uleb128 0x7
 1418 0119 2F020000 		.4byte	.LASF24
 1419 011d 03       		.byte	0x3
 1420 011e 94       		.byte	0x94
 1421 011f 6B000000 		.4byte	0x6b
 1422 0123 05       		.byte	0x5
 1423 0124 07       		.uleb128 0x7
 1424 0125 49050000 		.4byte	.LASF25
 1425 0129 03       		.byte	0x3
 1426 012a 95       		.byte	0x95
 1427 012b 77000000 		.4byte	0x77
 1428 012f 06       		.byte	0x6
 1429 0130 07       		.uleb128 0x7
 1430 0131 3E050000 		.4byte	.LASF26
 1431 0135 03       		.byte	0x3
 1432 0136 96       		.byte	0x96
 1433 0137 77000000 		.4byte	0x77
 1434 013b 08       		.byte	0x8
 1435 013c 07       		.uleb128 0x7
 1436 013d CB020000 		.4byte	.LASF27
 1437 0141 03       		.byte	0x3
 1438 0142 97       		.byte	0x97
 1439 0143 6B000000 		.4byte	0x6b
 1440 0147 0A       		.byte	0xa
 1441 0148 00       		.byte	0
 1442 0149 08       		.uleb128 0x8
 1443 014a AE000000 		.4byte	.LASF28
 1444 014e 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 71


 1445 014f 98       		.byte	0x98
 1446 0150 D4000000 		.4byte	0xd4
 1447 0154 06       		.uleb128 0x6
 1448 0155 10       		.byte	0x10
 1449 0156 03       		.byte	0x3
 1450 0157 D4       		.byte	0xd4
 1451 0158 8D010000 		.4byte	0x18d
 1452 015c 07       		.uleb128 0x7
 1453 015d 7B030000 		.4byte	.LASF29
 1454 0161 03       		.byte	0x3
 1455 0162 D6       		.byte	0xd6
 1456 0163 6B000000 		.4byte	0x6b
 1457 0167 00       		.byte	0
 1458 0168 07       		.uleb128 0x7
 1459 0169 82030000 		.4byte	.LASF30
 1460 016d 03       		.byte	0x3
 1461 016e D7       		.byte	0xd7
 1462 016f 6B000000 		.4byte	0x6b
 1463 0173 01       		.byte	0x1
 1464 0174 07       		.uleb128 0x7
 1465 0175 A1030000 		.4byte	.LASF31
 1466 0179 03       		.byte	0x3
 1467 017a D8       		.byte	0xd8
 1468 017b 6B000000 		.4byte	0x6b
 1469 017f 02       		.byte	0x2
 1470 0180 09       		.uleb128 0x9
 1471 0181 67617000 		.ascii	"gap\000"
 1472 0185 03       		.byte	0x3
 1473 0186 D9       		.byte	0xd9
 1474 0187 8D010000 		.4byte	0x18d
 1475 018b 03       		.byte	0x3
 1476 018c 00       		.byte	0
 1477 018d 0A       		.uleb128 0xa
 1478 018e 6B000000 		.4byte	0x6b
 1479 0192 9D010000 		.4byte	0x19d
 1480 0196 0B       		.uleb128 0xb
 1481 0197 CD000000 		.4byte	0xcd
 1482 019b 0C       		.byte	0xc
 1483 019c 00       		.byte	0
 1484 019d 08       		.uleb128 0x8
 1485 019e 73050000 		.4byte	.LASF32
 1486 01a2 03       		.byte	0x3
 1487 01a3 DA       		.byte	0xda
 1488 01a4 54010000 		.4byte	0x154
 1489 01a8 06       		.uleb128 0x6
 1490 01a9 10       		.byte	0x10
 1491 01aa 03       		.byte	0x3
 1492 01ab E6       		.byte	0xe6
 1493 01ac 29020000 		.4byte	0x229
 1494 01b0 07       		.uleb128 0x7
 1495 01b1 93000000 		.4byte	.LASF33
 1496 01b5 03       		.byte	0x3
 1497 01b6 E8       		.byte	0xe8
 1498 01b7 6B000000 		.4byte	0x6b
 1499 01bb 00       		.byte	0
 1500 01bc 07       		.uleb128 0x7
 1501 01bd 9B050000 		.4byte	.LASF34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 72


 1502 01c1 03       		.byte	0x3
 1503 01c2 E9       		.byte	0xe9
 1504 01c3 6B000000 		.4byte	0x6b
 1505 01c7 01       		.byte	0x1
 1506 01c8 07       		.uleb128 0x7
 1507 01c9 AB010000 		.4byte	.LASF35
 1508 01cd 03       		.byte	0x3
 1509 01ce EA       		.byte	0xea
 1510 01cf 6B000000 		.4byte	0x6b
 1511 01d3 02       		.byte	0x2
 1512 01d4 07       		.uleb128 0x7
 1513 01d5 36020000 		.4byte	.LASF36
 1514 01d9 03       		.byte	0x3
 1515 01da EB       		.byte	0xeb
 1516 01db 6B000000 		.4byte	0x6b
 1517 01df 03       		.byte	0x3
 1518 01e0 07       		.uleb128 0x7
 1519 01e1 73010000 		.4byte	.LASF37
 1520 01e5 03       		.byte	0x3
 1521 01e6 EC       		.byte	0xec
 1522 01e7 6B000000 		.4byte	0x6b
 1523 01eb 04       		.byte	0x4
 1524 01ec 07       		.uleb128 0x7
 1525 01ed F9040000 		.4byte	.LASF38
 1526 01f1 03       		.byte	0x3
 1527 01f2 ED       		.byte	0xed
 1528 01f3 6B000000 		.4byte	0x6b
 1529 01f7 05       		.byte	0x5
 1530 01f8 07       		.uleb128 0x7
 1531 01f9 66040000 		.4byte	.LASF39
 1532 01fd 03       		.byte	0x3
 1533 01fe EE       		.byte	0xee
 1534 01ff 6B000000 		.4byte	0x6b
 1535 0203 06       		.byte	0x6
 1536 0204 07       		.uleb128 0x7
 1537 0205 66030000 		.4byte	.LASF40
 1538 0209 03       		.byte	0x3
 1539 020a EF       		.byte	0xef
 1540 020b 6B000000 		.4byte	0x6b
 1541 020f 07       		.byte	0x7
 1542 0210 07       		.uleb128 0x7
 1543 0211 96050000 		.4byte	.LASF41
 1544 0215 03       		.byte	0x3
 1545 0216 F0       		.byte	0xf0
 1546 0217 6B000000 		.4byte	0x6b
 1547 021b 08       		.byte	0x8
 1548 021c 09       		.uleb128 0x9
 1549 021d 67617000 		.ascii	"gap\000"
 1550 0221 03       		.byte	0x3
 1551 0222 F1       		.byte	0xf1
 1552 0223 29020000 		.4byte	0x229
 1553 0227 09       		.byte	0x9
 1554 0228 00       		.byte	0
 1555 0229 0A       		.uleb128 0xa
 1556 022a 6B000000 		.4byte	0x6b
 1557 022e 39020000 		.4byte	0x239
 1558 0232 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 73


 1559 0233 CD000000 		.4byte	0xcd
 1560 0237 06       		.byte	0x6
 1561 0238 00       		.byte	0
 1562 0239 08       		.uleb128 0x8
 1563 023a DF030000 		.4byte	.LASF42
 1564 023e 03       		.byte	0x3
 1565 023f F2       		.byte	0xf2
 1566 0240 A8010000 		.4byte	0x1a8
 1567 0244 0C       		.uleb128 0xc
 1568 0245 90       		.byte	0x90
 1569 0246 03       		.byte	0x3
 1570 0247 0E01     		.2byte	0x10e
 1571 0249 5B020000 		.4byte	0x25b
 1572 024d 0D       		.uleb128 0xd
 1573 024e 29020000 		.4byte	.LASF43
 1574 0252 03       		.byte	0x3
 1575 0253 1001     		.2byte	0x110
 1576 0255 5B020000 		.4byte	0x25b
 1577 0259 00       		.byte	0
 1578 025a 00       		.byte	0
 1579 025b 0A       		.uleb128 0xa
 1580 025c 9D010000 		.4byte	0x19d
 1581 0260 6B020000 		.4byte	0x26b
 1582 0264 0B       		.uleb128 0xb
 1583 0265 CD000000 		.4byte	0xcd
 1584 0269 08       		.byte	0x8
 1585 026a 00       		.byte	0
 1586 026b 04       		.uleb128 0x4
 1587 026c F3020000 		.4byte	.LASF44
 1588 0270 03       		.byte	0x3
 1589 0271 1101     		.2byte	0x111
 1590 0273 44020000 		.4byte	0x244
 1591 0277 0C       		.uleb128 0xc
 1592 0278 90       		.byte	0x90
 1593 0279 03       		.byte	0x3
 1594 027a 1401     		.2byte	0x114
 1595 027c 8E020000 		.4byte	0x28e
 1596 0280 0D       		.uleb128 0xd
 1597 0281 C5020000 		.4byte	.LASF45
 1598 0285 03       		.byte	0x3
 1599 0286 1601     		.2byte	0x116
 1600 0288 8E020000 		.4byte	0x28e
 1601 028c 00       		.byte	0
 1602 028d 00       		.byte	0
 1603 028e 0A       		.uleb128 0xa
 1604 028f 39020000 		.4byte	0x239
 1605 0293 9E020000 		.4byte	0x29e
 1606 0297 0B       		.uleb128 0xb
 1607 0298 CD000000 		.4byte	0xcd
 1608 029c 08       		.byte	0x8
 1609 029d 00       		.byte	0
 1610 029e 04       		.uleb128 0x4
 1611 029f 06030000 		.4byte	.LASF46
 1612 02a3 03       		.byte	0x3
 1613 02a4 1701     		.2byte	0x117
 1614 02a6 77020000 		.4byte	0x277
 1615 02aa 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 74


 1616 02ab 3F030000 		.4byte	.LASF47
 1617 02af 01       		.byte	0x1
 1618 02b0 D3       		.byte	0xd3
 1619 02b1 00000000 		.4byte	.LFB1
 1620 02b5 2C010000 		.4byte	.LFE1-.LFB1
 1621 02b9 01       		.uleb128 0x1
 1622 02ba 9C       		.byte	0x9c
 1623 02bb 39040000 		.4byte	0x439
 1624 02bf 0F       		.uleb128 0xf
 1625 02c0 85050000 		.4byte	.LASF53
 1626 02c4 01       		.byte	0x1
 1627 02c5 FA       		.byte	0xfa
 1628 02c6 6B000000 		.4byte	0x6b
 1629 02ca 00000000 		.4byte	.LLST0
 1630 02ce 10       		.uleb128 0x10
 1631 02cf 06000000 		.4byte	.LVL0
 1632 02d3 16090000 		.4byte	0x916
 1633 02d7 11       		.uleb128 0x11
 1634 02d8 3C000000 		.4byte	.LVL2
 1635 02dc 21090000 		.4byte	0x921
 1636 02e0 EA020000 		.4byte	0x2ea
 1637 02e4 12       		.uleb128 0x12
 1638 02e5 01       		.uleb128 0x1
 1639 02e6 50       		.byte	0x50
 1640 02e7 01       		.uleb128 0x1
 1641 02e8 30       		.byte	0x30
 1642 02e9 00       		.byte	0
 1643 02ea 11       		.uleb128 0x11
 1644 02eb 5C000000 		.4byte	.LVL3
 1645 02ef 21090000 		.4byte	0x921
 1646 02f3 FE020000 		.4byte	0x2fe
 1647 02f7 12       		.uleb128 0x12
 1648 02f8 01       		.uleb128 0x1
 1649 02f9 50       		.byte	0x50
 1650 02fa 02       		.uleb128 0x2
 1651 02fb 77       		.byte	0x77
 1652 02fc 00       		.sleb128 0
 1653 02fd 00       		.byte	0
 1654 02fe 11       		.uleb128 0x11
 1655 02ff 62000000 		.4byte	.LVL4
 1656 0303 21090000 		.4byte	0x921
 1657 0307 12030000 		.4byte	0x312
 1658 030b 12       		.uleb128 0x12
 1659 030c 01       		.uleb128 0x1
 1660 030d 50       		.byte	0x50
 1661 030e 02       		.uleb128 0x2
 1662 030f 08       		.byte	0x8
 1663 0310 28       		.byte	0x28
 1664 0311 00       		.byte	0
 1665 0312 11       		.uleb128 0x11
 1666 0313 80000000 		.4byte	.LVL5
 1667 0317 21090000 		.4byte	0x921
 1668 031b 26030000 		.4byte	0x326
 1669 031f 12       		.uleb128 0x12
 1670 0320 01       		.uleb128 0x1
 1671 0321 50       		.byte	0x50
 1672 0322 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 75


 1673 0323 76       		.byte	0x76
 1674 0324 00       		.sleb128 0
 1675 0325 00       		.byte	0
 1676 0326 11       		.uleb128 0x11
 1677 0327 98000000 		.4byte	.LVL6
 1678 032b 2C090000 		.4byte	0x92c
 1679 032f 3A030000 		.4byte	0x33a
 1680 0333 12       		.uleb128 0x12
 1681 0334 01       		.uleb128 0x1
 1682 0335 50       		.byte	0x50
 1683 0336 02       		.uleb128 0x2
 1684 0337 75       		.byte	0x75
 1685 0338 00       		.sleb128 0
 1686 0339 00       		.byte	0
 1687 033a 11       		.uleb128 0x11
 1688 033b A0000000 		.4byte	.LVL7
 1689 033f 37090000 		.4byte	0x937
 1690 0343 52030000 		.4byte	0x352
 1691 0347 12       		.uleb128 0x12
 1692 0348 01       		.uleb128 0x1
 1693 0349 50       		.byte	0x50
 1694 034a 01       		.uleb128 0x1
 1695 034b 47       		.byte	0x47
 1696 034c 12       		.uleb128 0x12
 1697 034d 01       		.uleb128 0x1
 1698 034e 51       		.byte	0x51
 1699 034f 01       		.uleb128 0x1
 1700 0350 37       		.byte	0x37
 1701 0351 00       		.byte	0
 1702 0352 11       		.uleb128 0x11
 1703 0353 A8000000 		.4byte	.LVL8
 1704 0357 42090000 		.4byte	0x942
 1705 035b 65030000 		.4byte	0x365
 1706 035f 12       		.uleb128 0x12
 1707 0360 01       		.uleb128 0x1
 1708 0361 50       		.byte	0x50
 1709 0362 01       		.uleb128 0x1
 1710 0363 47       		.byte	0x47
 1711 0364 00       		.byte	0
 1712 0365 11       		.uleb128 0x11
 1713 0366 B0000000 		.4byte	.LVL9
 1714 036a 37090000 		.4byte	0x937
 1715 036e 7D030000 		.4byte	0x37d
 1716 0372 12       		.uleb128 0x12
 1717 0373 01       		.uleb128 0x1
 1718 0374 50       		.byte	0x50
 1719 0375 01       		.uleb128 0x1
 1720 0376 48       		.byte	0x48
 1721 0377 12       		.uleb128 0x12
 1722 0378 01       		.uleb128 0x1
 1723 0379 51       		.byte	0x51
 1724 037a 01       		.uleb128 0x1
 1725 037b 37       		.byte	0x37
 1726 037c 00       		.byte	0
 1727 037d 11       		.uleb128 0x11
 1728 037e B8000000 		.4byte	.LVL10
 1729 0382 42090000 		.4byte	0x942
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 76


 1730 0386 90030000 		.4byte	0x390
 1731 038a 12       		.uleb128 0x12
 1732 038b 01       		.uleb128 0x1
 1733 038c 50       		.byte	0x50
 1734 038d 01       		.uleb128 0x1
 1735 038e 48       		.byte	0x48
 1736 038f 00       		.byte	0
 1737 0390 11       		.uleb128 0x11
 1738 0391 C0000000 		.4byte	.LVL11
 1739 0395 37090000 		.4byte	0x937
 1740 0399 A8030000 		.4byte	0x3a8
 1741 039d 12       		.uleb128 0x12
 1742 039e 01       		.uleb128 0x1
 1743 039f 50       		.byte	0x50
 1744 03a0 01       		.uleb128 0x1
 1745 03a1 45       		.byte	0x45
 1746 03a2 12       		.uleb128 0x12
 1747 03a3 01       		.uleb128 0x1
 1748 03a4 51       		.byte	0x51
 1749 03a5 01       		.uleb128 0x1
 1750 03a6 37       		.byte	0x37
 1751 03a7 00       		.byte	0
 1752 03a8 11       		.uleb128 0x11
 1753 03a9 C8000000 		.4byte	.LVL12
 1754 03ad 42090000 		.4byte	0x942
 1755 03b1 BB030000 		.4byte	0x3bb
 1756 03b5 12       		.uleb128 0x12
 1757 03b6 01       		.uleb128 0x1
 1758 03b7 50       		.byte	0x50
 1759 03b8 01       		.uleb128 0x1
 1760 03b9 45       		.byte	0x45
 1761 03ba 00       		.byte	0
 1762 03bb 11       		.uleb128 0x11
 1763 03bc D0000000 		.4byte	.LVL13
 1764 03c0 37090000 		.4byte	0x937
 1765 03c4 D3030000 		.4byte	0x3d3
 1766 03c8 12       		.uleb128 0x12
 1767 03c9 01       		.uleb128 0x1
 1768 03ca 50       		.byte	0x50
 1769 03cb 01       		.uleb128 0x1
 1770 03cc 34       		.byte	0x34
 1771 03cd 12       		.uleb128 0x12
 1772 03ce 01       		.uleb128 0x1
 1773 03cf 51       		.byte	0x51
 1774 03d0 01       		.uleb128 0x1
 1775 03d1 37       		.byte	0x37
 1776 03d2 00       		.byte	0
 1777 03d3 11       		.uleb128 0x11
 1778 03d4 D8000000 		.4byte	.LVL14
 1779 03d8 42090000 		.4byte	0x942
 1780 03dc E6030000 		.4byte	0x3e6
 1781 03e0 12       		.uleb128 0x12
 1782 03e1 01       		.uleb128 0x1
 1783 03e2 50       		.byte	0x50
 1784 03e3 01       		.uleb128 0x1
 1785 03e4 34       		.byte	0x34
 1786 03e5 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 77


 1787 03e6 11       		.uleb128 0x11
 1788 03e7 E0000000 		.4byte	.LVL15
 1789 03eb 37090000 		.4byte	0x937
 1790 03ef FE030000 		.4byte	0x3fe
 1791 03f3 12       		.uleb128 0x12
 1792 03f4 01       		.uleb128 0x1
 1793 03f5 50       		.byte	0x50
 1794 03f6 01       		.uleb128 0x1
 1795 03f7 35       		.byte	0x35
 1796 03f8 12       		.uleb128 0x12
 1797 03f9 01       		.uleb128 0x1
 1798 03fa 51       		.byte	0x51
 1799 03fb 01       		.uleb128 0x1
 1800 03fc 37       		.byte	0x37
 1801 03fd 00       		.byte	0
 1802 03fe 11       		.uleb128 0x11
 1803 03ff E8000000 		.4byte	.LVL16
 1804 0403 42090000 		.4byte	0x942
 1805 0407 11040000 		.4byte	0x411
 1806 040b 12       		.uleb128 0x12
 1807 040c 01       		.uleb128 0x1
 1808 040d 50       		.byte	0x50
 1809 040e 01       		.uleb128 0x1
 1810 040f 35       		.byte	0x35
 1811 0410 00       		.byte	0
 1812 0411 11       		.uleb128 0x11
 1813 0412 F0000000 		.4byte	.LVL17
 1814 0416 37090000 		.4byte	0x937
 1815 041a 29040000 		.4byte	0x429
 1816 041e 12       		.uleb128 0x12
 1817 041f 01       		.uleb128 0x1
 1818 0420 50       		.byte	0x50
 1819 0421 01       		.uleb128 0x1
 1820 0422 3C       		.byte	0x3c
 1821 0423 12       		.uleb128 0x12
 1822 0424 01       		.uleb128 0x1
 1823 0425 51       		.byte	0x51
 1824 0426 01       		.uleb128 0x1
 1825 0427 37       		.byte	0x37
 1826 0428 00       		.byte	0
 1827 0429 13       		.uleb128 0x13
 1828 042a F8000000 		.4byte	.LVL18
 1829 042e 42090000 		.4byte	0x942
 1830 0432 12       		.uleb128 0x12
 1831 0433 01       		.uleb128 0x1
 1832 0434 50       		.byte	0x50
 1833 0435 01       		.uleb128 0x1
 1834 0436 3C       		.byte	0x3c
 1835 0437 00       		.byte	0
 1836 0438 00       		.byte	0
 1837 0439 14       		.uleb128 0x14
 1838 043a 1D000000 		.4byte	.LASF48
 1839 043e 01       		.byte	0x1
 1840 043f CC01     		.2byte	0x1cc
 1841 0441 00000000 		.4byte	.LFB2
 1842 0445 B4000000 		.4byte	.LFE2-.LFB2
 1843 0449 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 78


 1844 044a 9C       		.byte	0x9c
 1845 044b 7F040000 		.4byte	0x47f
 1846 044f 15       		.uleb128 0x15
 1847 0450 E4000000 		.4byte	.LASF49
 1848 0454 01       		.byte	0x1
 1849 0455 CC01     		.2byte	0x1cc
 1850 0457 6B000000 		.4byte	0x6b
 1851 045b 13000000 		.4byte	.LLST1
 1852 045f 15       		.uleb128 0x15
 1853 0460 39050000 		.4byte	.LASF50
 1854 0464 01       		.byte	0x1
 1855 0465 CC01     		.2byte	0x1cc
 1856 0467 6B000000 		.4byte	0x6b
 1857 046b 34000000 		.4byte	.LLST2
 1858 046f 13       		.uleb128 0x13
 1859 0470 7C000000 		.4byte	.LVL22
 1860 0474 4D090000 		.4byte	0x94d
 1861 0478 12       		.uleb128 0x12
 1862 0479 01       		.uleb128 0x1
 1863 047a 50       		.byte	0x50
 1864 047b 01       		.uleb128 0x1
 1865 047c 31       		.byte	0x31
 1866 047d 00       		.byte	0
 1867 047e 00       		.byte	0
 1868 047f 0E       		.uleb128 0xe
 1869 0480 BB020000 		.4byte	.LASF51
 1870 0484 01       		.byte	0x1
 1871 0485 BA       		.byte	0xba
 1872 0486 00000000 		.4byte	.LFB0
 1873 048a 24000000 		.4byte	.LFE0-.LFB0
 1874 048e 01       		.uleb128 0x1
 1875 048f 9C       		.byte	0x9c
 1876 0490 D2040000 		.4byte	0x4d2
 1877 0494 16       		.uleb128 0x16
 1878 0495 E4000000 		.4byte	.LASF49
 1879 0499 01       		.byte	0x1
 1880 049a BA       		.byte	0xba
 1881 049b 6B000000 		.4byte	0x6b
 1882 049f 55000000 		.4byte	.LLST3
 1883 04a3 16       		.uleb128 0x16
 1884 04a4 39050000 		.4byte	.LASF50
 1885 04a8 01       		.byte	0x1
 1886 04a9 BA       		.byte	0xba
 1887 04aa 6B000000 		.4byte	0x6b
 1888 04ae 76000000 		.4byte	.LLST4
 1889 04b2 10       		.uleb128 0x10
 1890 04b3 10000000 		.4byte	.LVL24
 1891 04b7 AA020000 		.4byte	0x2aa
 1892 04bb 13       		.uleb128 0x13
 1893 04bc 1E000000 		.4byte	.LVL25
 1894 04c0 39040000 		.4byte	0x439
 1895 04c4 12       		.uleb128 0x12
 1896 04c5 01       		.uleb128 0x1
 1897 04c6 50       		.byte	0x50
 1898 04c7 02       		.uleb128 0x2
 1899 04c8 74       		.byte	0x74
 1900 04c9 00       		.sleb128 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 79


 1901 04ca 12       		.uleb128 0x12
 1902 04cb 01       		.uleb128 0x1
 1903 04cc 51       		.byte	0x51
 1904 04cd 02       		.uleb128 0x2
 1905 04ce 75       		.byte	0x75
 1906 04cf 00       		.sleb128 0
 1907 04d0 00       		.byte	0
 1908 04d1 00       		.byte	0
 1909 04d2 17       		.uleb128 0x17
 1910 04d3 38040000 		.4byte	.LASF78
 1911 04d7 01       		.byte	0x1
 1912 04d8 9F02     		.2byte	0x29f
 1913 04da 00000000 		.4byte	.LFB3
 1914 04de 4C000000 		.4byte	.LFE3-.LFB3
 1915 04e2 01       		.uleb128 0x1
 1916 04e3 9C       		.byte	0x9c
 1917 04e4 14       		.uleb128 0x14
 1918 04e5 DB000000 		.4byte	.LASF52
 1919 04e9 01       		.byte	0x1
 1920 04ea D902     		.2byte	0x2d9
 1921 04ec 00000000 		.4byte	.LFB4
 1922 04f0 B4000000 		.4byte	.LFE4-.LFB4
 1923 04f4 01       		.uleb128 0x1
 1924 04f5 9C       		.byte	0x9c
 1925 04f6 26050000 		.4byte	0x526
 1926 04fa 18       		.uleb128 0x18
 1927 04fb 85050000 		.4byte	.LASF53
 1928 04ff 01       		.byte	0x1
 1929 0500 DB02     		.2byte	0x2db
 1930 0502 6B000000 		.4byte	0x6b
 1931 0506 97000000 		.4byte	.LLST5
 1932 050a 10       		.uleb128 0x10
 1933 050b 06000000 		.4byte	.LVL26
 1934 050f 16090000 		.4byte	0x916
 1935 0513 10       		.uleb128 0x10
 1936 0514 48000000 		.4byte	.LVL27
 1937 0518 2C090000 		.4byte	0x92c
 1938 051c 10       		.uleb128 0x10
 1939 051d 68000000 		.4byte	.LVL28
 1940 0521 58090000 		.4byte	0x958
 1941 0525 00       		.byte	0
 1942 0526 19       		.uleb128 0x19
 1943 0527 F6030000 		.4byte	.LASF55
 1944 052b 01       		.byte	0x1
 1945 052c 5103     		.2byte	0x351
 1946 052e 6B000000 		.4byte	0x6b
 1947 0532 00000000 		.4byte	.LFB5
 1948 0536 20000000 		.4byte	.LFE5-.LFB5
 1949 053a 01       		.uleb128 0x1
 1950 053b 9C       		.byte	0x9c
 1951 053c 51050000 		.4byte	0x551
 1952 0540 18       		.uleb128 0x18
 1953 0541 D5020000 		.4byte	.LASF54
 1954 0545 01       		.byte	0x1
 1955 0546 5303     		.2byte	0x353
 1956 0548 6B000000 		.4byte	0x6b
 1957 054c AA000000 		.4byte	.LLST6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 80


 1958 0550 00       		.byte	0
 1959 0551 1A       		.uleb128 0x1a
 1960 0552 CA030000 		.4byte	.LASF76
 1961 0556 01       		.byte	0x1
 1962 0557 6803     		.2byte	0x368
 1963 0559 6B000000 		.4byte	0x6b
 1964 055d 00000000 		.4byte	.LFB6
 1965 0561 0C000000 		.4byte	.LFE6-.LFB6
 1966 0565 01       		.uleb128 0x1
 1967 0566 9C       		.byte	0x9c
 1968 0567 19       		.uleb128 0x19
 1969 0568 01050000 		.4byte	.LASF56
 1970 056c 01       		.byte	0x1
 1971 056d 8203     		.2byte	0x382
 1972 056f 6B000000 		.4byte	0x6b
 1973 0573 00000000 		.4byte	.LFB7
 1974 0577 20000000 		.4byte	.LFE7-.LFB7
 1975 057b 01       		.uleb128 0x1
 1976 057c 9C       		.byte	0x9c
 1977 057d 92050000 		.4byte	0x592
 1978 0581 1B       		.uleb128 0x1b
 1979 0582 72657300 		.ascii	"res\000"
 1980 0586 01       		.byte	0x1
 1981 0587 8403     		.2byte	0x384
 1982 0589 6B000000 		.4byte	0x6b
 1983 058d BD000000 		.4byte	.LLST7
 1984 0591 00       		.byte	0
 1985 0592 19       		.uleb128 0x19
 1986 0593 16040000 		.4byte	.LASF57
 1987 0597 01       		.byte	0x1
 1988 0598 9F03     		.2byte	0x39f
 1989 059a 6B000000 		.4byte	0x6b
 1990 059e 00000000 		.4byte	.LFB8
 1991 05a2 0C000000 		.4byte	.LFE8-.LFB8
 1992 05a6 01       		.uleb128 0x1
 1993 05a7 9C       		.byte	0x9c
 1994 05a8 BD050000 		.4byte	0x5bd
 1995 05ac 15       		.uleb128 0x15
 1996 05ad 54050000 		.4byte	.LASF58
 1997 05b1 01       		.byte	0x1
 1998 05b2 9F03     		.2byte	0x39f
 1999 05b4 6B000000 		.4byte	0x6b
 2000 05b8 F3000000 		.4byte	.LLST8
 2001 05bc 00       		.byte	0
 2002 05bd 19       		.uleb128 0x19
 2003 05be 64050000 		.4byte	.LASF59
 2004 05c2 01       		.byte	0x1
 2005 05c3 BF03     		.2byte	0x3bf
 2006 05c5 6B000000 		.4byte	0x6b
 2007 05c9 00000000 		.4byte	.LFB9
 2008 05cd 14000000 		.4byte	.LFE9-.LFB9
 2009 05d1 01       		.uleb128 0x1
 2010 05d2 9C       		.byte	0x9c
 2011 05d3 E8050000 		.4byte	0x5e8
 2012 05d7 15       		.uleb128 0x15
 2013 05d8 D2000000 		.4byte	.LASF60
 2014 05dc 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 81


 2015 05dd BF03     		.2byte	0x3bf
 2016 05df 6B000000 		.4byte	0x6b
 2017 05e3 14010000 		.4byte	.LLST9
 2018 05e7 00       		.byte	0
 2019 05e8 19       		.uleb128 0x19
 2020 05e9 A3050000 		.4byte	.LASF61
 2021 05ed 01       		.byte	0x1
 2022 05ee D603     		.2byte	0x3d6
 2023 05f0 77000000 		.4byte	0x77
 2024 05f4 00000000 		.4byte	.LFB10
 2025 05f8 28000000 		.4byte	.LFE10-.LFB10
 2026 05fc 01       		.uleb128 0x1
 2027 05fd 9C       		.byte	0x9c
 2028 05fe 23060000 		.4byte	0x623
 2029 0602 15       		.uleb128 0x15
 2030 0603 D2000000 		.4byte	.LASF60
 2031 0607 01       		.byte	0x1
 2032 0608 D603     		.2byte	0x3d6
 2033 060a 6B000000 		.4byte	0x6b
 2034 060e 35010000 		.4byte	.LLST10
 2035 0612 18       		.uleb128 0x18
 2036 0613 24010000 		.4byte	.LASF62
 2037 0617 01       		.byte	0x1
 2038 0618 D803     		.2byte	0x3d8
 2039 061a 77000000 		.4byte	0x77
 2040 061e 6F010000 		.4byte	.LLST11
 2041 0622 00       		.byte	0
 2042 0623 14       		.uleb128 0x14
 2043 0624 6E030000 		.4byte	.LASF63
 2044 0628 01       		.byte	0x1
 2045 0629 3E05     		.2byte	0x53e
 2046 062b 00000000 		.4byte	.LFB11
 2047 062f 94000000 		.4byte	.LFE11-.LFB11
 2048 0633 01       		.uleb128 0x1
 2049 0634 9C       		.byte	0x9c
 2050 0635 7C060000 		.4byte	0x67c
 2051 0639 15       		.uleb128 0x15
 2052 063a D2000000 		.4byte	.LASF60
 2053 063e 01       		.byte	0x1
 2054 063f 3E05     		.2byte	0x53e
 2055 0641 6B000000 		.4byte	0x6b
 2056 0645 BD010000 		.4byte	.LLST12
 2057 0649 1C       		.uleb128 0x1c
 2058 064a 23020000 		.4byte	.LASF64
 2059 064e 01       		.byte	0x1
 2060 064f 3E05     		.2byte	0x53e
 2061 0651 7C060000 		.4byte	0x67c
 2062 0655 01       		.uleb128 0x1
 2063 0656 51       		.byte	0x51
 2064 0657 15       		.uleb128 0x15
 2065 0658 2D050000 		.4byte	.LASF65
 2066 065c 01       		.byte	0x1
 2067 065d 3E05     		.2byte	0x53e
 2068 065f 77000000 		.4byte	0x77
 2069 0663 DE010000 		.4byte	.LLST13
 2070 0667 1D       		.uleb128 0x1d
 2071 0668 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 82


 2072 066c 1B       		.uleb128 0x1b
 2073 066d 6900     		.ascii	"i\000"
 2074 066f 01       		.byte	0x1
 2075 0670 5305     		.2byte	0x553
 2076 0672 77000000 		.4byte	0x77
 2077 0676 0A020000 		.4byte	.LLST14
 2078 067a 00       		.byte	0
 2079 067b 00       		.byte	0
 2080 067c 1E       		.uleb128 0x1e
 2081 067d 04       		.byte	0x4
 2082 067e 82060000 		.4byte	0x682
 2083 0682 1F       		.uleb128 0x1f
 2084 0683 6B000000 		.4byte	0x6b
 2085 0687 14       		.uleb128 0x14
 2086 0688 05010000 		.4byte	.LASF66
 2087 068c 01       		.byte	0x1
 2088 068d E408     		.2byte	0x8e4
 2089 068f 00000000 		.4byte	.LFB13
 2090 0693 2C000000 		.4byte	.LFE13-.LFB13
 2091 0697 01       		.uleb128 0x1
 2092 0698 9C       		.byte	0x9c
 2093 0699 AE060000 		.4byte	0x6ae
 2094 069d 15       		.uleb128 0x15
 2095 069e D2000000 		.4byte	.LASF60
 2096 06a2 01       		.byte	0x1
 2097 06a3 E408     		.2byte	0x8e4
 2098 06a5 6B000000 		.4byte	0x6b
 2099 06a9 33020000 		.4byte	.LLST15
 2100 06ad 00       		.byte	0
 2101 06ae 19       		.uleb128 0x19
 2102 06af 58040000 		.4byte	.LASF67
 2103 06b3 01       		.byte	0x1
 2104 06b4 7506     		.2byte	0x675
 2105 06b6 77000000 		.4byte	0x77
 2106 06ba 00000000 		.4byte	.LFB12
 2107 06be 50000000 		.4byte	.LFE12-.LFB12
 2108 06c2 01       		.uleb128 0x1
 2109 06c3 9C       		.byte	0x9c
 2110 06c4 4D070000 		.4byte	0x74d
 2111 06c8 15       		.uleb128 0x15
 2112 06c9 D2000000 		.4byte	.LASF60
 2113 06cd 01       		.byte	0x1
 2114 06ce 7506     		.2byte	0x675
 2115 06d0 6B000000 		.4byte	0x6b
 2116 06d4 54020000 		.4byte	.LLST16
 2117 06d8 15       		.uleb128 0x15
 2118 06d9 23020000 		.4byte	.LASF64
 2119 06dd 01       		.byte	0x1
 2120 06de 7506     		.2byte	0x675
 2121 06e0 4D070000 		.4byte	0x74d
 2122 06e4 8E020000 		.4byte	.LLST17
 2123 06e8 15       		.uleb128 0x15
 2124 06e9 2D050000 		.4byte	.LASF65
 2125 06ed 01       		.byte	0x1
 2126 06ee 7506     		.2byte	0x675
 2127 06f0 77000000 		.4byte	0x77
 2128 06f4 C5020000 		.4byte	.LLST18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 83


 2129 06f8 20       		.uleb128 0x20
 2130 06f9 20000000 		.4byte	.LBB4
 2131 06fd 14000000 		.4byte	.LBE4-.LBB4
 2132 0701 14070000 		.4byte	0x714
 2133 0705 1B       		.uleb128 0x1b
 2134 0706 6900     		.ascii	"i\000"
 2135 0708 01       		.byte	0x1
 2136 0709 8206     		.2byte	0x682
 2137 070b 77000000 		.4byte	0x77
 2138 070f 07030000 		.4byte	.LLST19
 2139 0713 00       		.byte	0
 2140 0714 11       		.uleb128 0x11
 2141 0715 14000000 		.4byte	.LVL61
 2142 0719 E8050000 		.4byte	0x5e8
 2143 071d 28070000 		.4byte	0x728
 2144 0721 12       		.uleb128 0x12
 2145 0722 01       		.uleb128 0x1
 2146 0723 50       		.byte	0x50
 2147 0724 02       		.uleb128 0x2
 2148 0725 75       		.byte	0x75
 2149 0726 00       		.sleb128 0
 2150 0727 00       		.byte	0
 2151 0728 11       		.uleb128 0x11
 2152 0729 1E000000 		.4byte	.LVL62
 2153 072d E8050000 		.4byte	0x5e8
 2154 0731 3C070000 		.4byte	0x73c
 2155 0735 12       		.uleb128 0x12
 2156 0736 01       		.uleb128 0x1
 2157 0737 50       		.byte	0x50
 2158 0738 02       		.uleb128 0x2
 2159 0739 75       		.byte	0x75
 2160 073a 00       		.sleb128 0
 2161 073b 00       		.byte	0
 2162 073c 13       		.uleb128 0x13
 2163 073d 3A000000 		.4byte	.LVL67
 2164 0741 87060000 		.4byte	0x687
 2165 0745 12       		.uleb128 0x12
 2166 0746 01       		.uleb128 0x1
 2167 0747 50       		.byte	0x50
 2168 0748 02       		.uleb128 0x2
 2169 0749 75       		.byte	0x75
 2170 074a 00       		.sleb128 0
 2171 074b 00       		.byte	0
 2172 074c 00       		.byte	0
 2173 074d 1E       		.uleb128 0x1e
 2174 074e 04       		.byte	0x4
 2175 074f 6B000000 		.4byte	0x6b
 2176 0753 14       		.uleb128 0x14
 2177 0754 2F000000 		.4byte	.LASF68
 2178 0758 01       		.byte	0x1
 2179 0759 FC08     		.2byte	0x8fc
 2180 075b 00000000 		.4byte	.LFB14
 2181 075f 18000000 		.4byte	.LFE14-.LFB14
 2182 0763 01       		.uleb128 0x1
 2183 0764 9C       		.byte	0x9c
 2184 0765 7A070000 		.4byte	0x77a
 2185 0769 15       		.uleb128 0x15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 84


 2186 076a D2000000 		.4byte	.LASF60
 2187 076e 01       		.byte	0x1
 2188 076f FC08     		.2byte	0x8fc
 2189 0771 6B000000 		.4byte	0x6b
 2190 0775 31030000 		.4byte	.LLST20
 2191 0779 00       		.byte	0
 2192 077a 14       		.uleb128 0x14
 2193 077b 1C050000 		.4byte	.LASF69
 2194 077f 01       		.byte	0x1
 2195 0780 1A09     		.2byte	0x91a
 2196 0782 00000000 		.4byte	.LFB15
 2197 0786 0C000000 		.4byte	.LFE15-.LFB15
 2198 078a 01       		.uleb128 0x1
 2199 078b 9C       		.byte	0x9c
 2200 078c 9F070000 		.4byte	0x79f
 2201 0790 1C       		.uleb128 0x1c
 2202 0791 26050000 		.4byte	.LASF70
 2203 0795 01       		.byte	0x1
 2204 0796 1A09     		.2byte	0x91a
 2205 0798 6B000000 		.4byte	0x6b
 2206 079c 01       		.uleb128 0x1
 2207 079d 50       		.byte	0x50
 2208 079e 00       		.byte	0
 2209 079f 19       		.uleb128 0x19
 2210 07a0 3F020000 		.4byte	.LASF71
 2211 07a4 01       		.byte	0x1
 2212 07a5 3309     		.2byte	0x933
 2213 07a7 6B000000 		.4byte	0x6b
 2214 07ab 00000000 		.4byte	.LFB16
 2215 07af 20000000 		.4byte	.LFE16-.LFB16
 2216 07b3 01       		.uleb128 0x1
 2217 07b4 9C       		.byte	0x9c
 2218 07b5 D9070000 		.4byte	0x7d9
 2219 07b9 15       		.uleb128 0x15
 2220 07ba D2000000 		.4byte	.LASF60
 2221 07be 01       		.byte	0x1
 2222 07bf 3309     		.2byte	0x933
 2223 07c1 6B000000 		.4byte	0x6b
 2224 07c5 52030000 		.4byte	.LLST21
 2225 07c9 1B       		.uleb128 0x1b
 2226 07ca 637200   		.ascii	"cr\000"
 2227 07cd 01       		.byte	0x1
 2228 07ce 3509     		.2byte	0x935
 2229 07d0 6B000000 		.4byte	0x6b
 2230 07d4 8C030000 		.4byte	.LLST22
 2231 07d8 00       		.byte	0
 2232 07d9 14       		.uleb128 0x14
 2233 07da 48030000 		.4byte	.LASF72
 2234 07de 01       		.byte	0x1
 2235 07df 5C09     		.2byte	0x95c
 2236 07e1 00000000 		.4byte	.LFB17
 2237 07e5 20000000 		.4byte	.LFE17-.LFB17
 2238 07e9 01       		.uleb128 0x1
 2239 07ea 9C       		.byte	0x9c
 2240 07eb FE070000 		.4byte	0x7fe
 2241 07ef 1C       		.uleb128 0x1c
 2242 07f0 89010000 		.4byte	.LASF73
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 85


 2243 07f4 01       		.byte	0x1
 2244 07f5 5C09     		.2byte	0x95c
 2245 07f7 6B000000 		.4byte	0x6b
 2246 07fb 01       		.uleb128 0x1
 2247 07fc 50       		.byte	0x50
 2248 07fd 00       		.byte	0
 2249 07fe 19       		.uleb128 0x19
 2250 07ff 15010000 		.4byte	.LASF74
 2251 0803 01       		.byte	0x1
 2252 0804 9509     		.2byte	0x995
 2253 0806 6B000000 		.4byte	0x6b
 2254 080a 00000000 		.4byte	.LFB18
 2255 080e 18000000 		.4byte	.LFE18-.LFB18
 2256 0812 01       		.uleb128 0x1
 2257 0813 9C       		.byte	0x9c
 2258 0814 29080000 		.4byte	0x829
 2259 0818 18       		.uleb128 0x18
 2260 0819 CB050000 		.4byte	.LASF75
 2261 081d 01       		.byte	0x1
 2262 081e 9709     		.2byte	0x997
 2263 0820 6B000000 		.4byte	0x6b
 2264 0824 C2030000 		.4byte	.LLST23
 2265 0828 00       		.byte	0
 2266 0829 1A       		.uleb128 0x1a
 2267 082a 32010000 		.4byte	.LASF77
 2268 082e 01       		.byte	0x1
 2269 082f AD09     		.2byte	0x9ad
 2270 0831 6B000000 		.4byte	0x6b
 2271 0835 00000000 		.4byte	.LFB19
 2272 0839 10000000 		.4byte	.LFE19-.LFB19
 2273 083d 01       		.uleb128 0x1
 2274 083e 9C       		.byte	0x9c
 2275 083f 17       		.uleb128 0x17
 2276 0840 C1000000 		.4byte	.LASF79
 2277 0844 01       		.byte	0x1
 2278 0845 BB09     		.2byte	0x9bb
 2279 0847 00000000 		.4byte	.LFB20
 2280 084b 10000000 		.4byte	.LFE20-.LFB20
 2281 084f 01       		.uleb128 0x1
 2282 0850 9C       		.byte	0x9c
 2283 0851 17       		.uleb128 0x17
 2284 0852 87020000 		.4byte	.LASF80
 2285 0856 01       		.byte	0x1
 2286 0857 D109     		.2byte	0x9d1
 2287 0859 00000000 		.4byte	.LFB21
 2288 085d 10000000 		.4byte	.LFE21-.LFB21
 2289 0861 01       		.uleb128 0x1
 2290 0862 9C       		.byte	0x9c
 2291 0863 21       		.uleb128 0x21
 2292 0864 4C040000 		.4byte	.LASF81
 2293 0868 01       		.byte	0x1
 2294 0869 28       		.byte	0x28
 2295 086a 6B000000 		.4byte	0x6b
 2296 086e 05       		.uleb128 0x5
 2297 086f 03       		.byte	0x3
 2298 0870 00000000 		.4byte	USB_initVar
 2299 0874 22       		.uleb128 0x22
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 86


 2300 0875 5B030000 		.4byte	.LASF82
 2301 0879 03       		.byte	0x3
 2302 087a D202     		.2byte	0x2d2
 2303 087c B0000000 		.4byte	0xb0
 2304 0880 22       		.uleb128 0x22
 2305 0881 65000000 		.4byte	.LASF83
 2306 0885 03       		.byte	0x3
 2307 0886 D302     		.2byte	0x2d3
 2308 0888 B0000000 		.4byte	0xb0
 2309 088c 22       		.uleb128 0x22
 2310 088d 40000000 		.4byte	.LASF84
 2311 0891 03       		.byte	0x3
 2312 0892 D402     		.2byte	0x2d4
 2313 0894 B0000000 		.4byte	0xb0
 2314 0898 22       		.uleb128 0x22
 2315 0899 B2050000 		.4byte	.LASF85
 2316 089d 03       		.byte	0x3
 2317 089e D502     		.2byte	0x2d5
 2318 08a0 B0000000 		.4byte	0xb0
 2319 08a4 22       		.uleb128 0x22
 2320 08a5 E2020000 		.4byte	.LASF86
 2321 08a9 03       		.byte	0x3
 2322 08aa D602     		.2byte	0x2d6
 2323 08ac B0000000 		.4byte	0xb0
 2324 08b0 23       		.uleb128 0x23
 2325 08b1 0F020000 		.4byte	.LASF87
 2326 08b5 04       		.byte	0x4
 2327 08b6 72       		.byte	0x72
 2328 08b7 B0000000 		.4byte	0xb0
 2329 08bb 0A       		.uleb128 0xa
 2330 08bc B0000000 		.4byte	0xb0
 2331 08c0 CB080000 		.4byte	0x8cb
 2332 08c4 0B       		.uleb128 0xb
 2333 08c5 CD000000 		.4byte	0xcd
 2334 08c9 01       		.byte	0x1
 2335 08ca 00       		.byte	0
 2336 08cb 23       		.uleb128 0x23
 2337 08cc 99000000 		.4byte	.LASF88
 2338 08d0 04       		.byte	0x4
 2339 08d1 73       		.byte	0x73
 2340 08d2 D6080000 		.4byte	0x8d6
 2341 08d6 05       		.uleb128 0x5
 2342 08d7 BB080000 		.4byte	0x8bb
 2343 08db 23       		.uleb128 0x23
 2344 08dc B8030000 		.4byte	.LASF89
 2345 08e0 04       		.byte	0x4
 2346 08e1 75       		.byte	0x75
 2347 08e2 B0000000 		.4byte	0xb0
 2348 08e6 0A       		.uleb128 0xa
 2349 08e7 F6080000 		.4byte	0x8f6
 2350 08eb F6080000 		.4byte	0x8f6
 2351 08ef 0B       		.uleb128 0xb
 2352 08f0 CD000000 		.4byte	0xcd
 2353 08f4 08       		.byte	0x8
 2354 08f5 00       		.byte	0
 2355 08f6 05       		.uleb128 0x5
 2356 08f7 49010000 		.4byte	0x149
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 87


 2357 08fb 23       		.uleb128 0x23
 2358 08fc 89030000 		.4byte	.LASF90
 2359 0900 04       		.byte	0x4
 2360 0901 79       		.byte	0x79
 2361 0902 06090000 		.4byte	0x906
 2362 0906 05       		.uleb128 0x5
 2363 0907 E6080000 		.4byte	0x8e6
 2364 090b 23       		.uleb128 0x23
 2365 090c 52000000 		.4byte	.LASF91
 2366 0910 04       		.byte	0x4
 2367 0911 9B       		.byte	0x9b
 2368 0912 B0000000 		.4byte	0xb0
 2369 0916 24       		.uleb128 0x24
 2370 0917 70020000 		.4byte	.LASF92
 2371 091b 70020000 		.4byte	.LASF92
 2372 091f 05       		.byte	0x5
 2373 0920 7D       		.byte	0x7d
 2374 0921 24       		.uleb128 0x24
 2375 0922 78010000 		.4byte	.LASF93
 2376 0926 78010000 		.4byte	.LASF93
 2377 092a 05       		.byte	0x5
 2378 092b 77       		.byte	0x77
 2379 092c 24       		.uleb128 0x24
 2380 092d 07000000 		.4byte	.LASF94
 2381 0931 07000000 		.4byte	.LASF94
 2382 0935 05       		.byte	0x5
 2383 0936 7E       		.byte	0x7e
 2384 0937 24       		.uleb128 0x24
 2385 0938 90030000 		.4byte	.LASF95
 2386 093c 90030000 		.4byte	.LASF95
 2387 0940 05       		.byte	0x5
 2388 0941 8B       		.byte	0x8b
 2389 0942 24       		.uleb128 0x24
 2390 0943 AC020000 		.4byte	.LASF96
 2391 0947 AC020000 		.4byte	.LASF96
 2392 094b 05       		.byte	0x5
 2393 094c 88       		.byte	0x88
 2394 094d 24       		.uleb128 0x24
 2395 094e 01020000 		.4byte	.LASF97
 2396 0952 01020000 		.4byte	.LASF97
 2397 0956 05       		.byte	0x5
 2398 0957 79       		.byte	0x79
 2399 0958 24       		.uleb128 0x24
 2400 0959 95010000 		.4byte	.LASF98
 2401 095d 95010000 		.4byte	.LASF98
 2402 0961 06       		.byte	0x6
 2403 0962 2B       		.byte	0x2b
 2404 0963 00       		.byte	0
 2405              		.section	.debug_abbrev,"",%progbits
 2406              	.Ldebug_abbrev0:
 2407 0000 01       		.uleb128 0x1
 2408 0001 11       		.uleb128 0x11
 2409 0002 01       		.byte	0x1
 2410 0003 25       		.uleb128 0x25
 2411 0004 0E       		.uleb128 0xe
 2412 0005 13       		.uleb128 0x13
 2413 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 88


 2414 0007 03       		.uleb128 0x3
 2415 0008 0E       		.uleb128 0xe
 2416 0009 1B       		.uleb128 0x1b
 2417 000a 0E       		.uleb128 0xe
 2418 000b 55       		.uleb128 0x55
 2419 000c 17       		.uleb128 0x17
 2420 000d 11       		.uleb128 0x11
 2421 000e 01       		.uleb128 0x1
 2422 000f 10       		.uleb128 0x10
 2423 0010 17       		.uleb128 0x17
 2424 0011 00       		.byte	0
 2425 0012 00       		.byte	0
 2426 0013 02       		.uleb128 0x2
 2427 0014 24       		.uleb128 0x24
 2428 0015 00       		.byte	0
 2429 0016 0B       		.uleb128 0xb
 2430 0017 0B       		.uleb128 0xb
 2431 0018 3E       		.uleb128 0x3e
 2432 0019 0B       		.uleb128 0xb
 2433 001a 03       		.uleb128 0x3
 2434 001b 0E       		.uleb128 0xe
 2435 001c 00       		.byte	0
 2436 001d 00       		.byte	0
 2437 001e 03       		.uleb128 0x3
 2438 001f 24       		.uleb128 0x24
 2439 0020 00       		.byte	0
 2440 0021 0B       		.uleb128 0xb
 2441 0022 0B       		.uleb128 0xb
 2442 0023 3E       		.uleb128 0x3e
 2443 0024 0B       		.uleb128 0xb
 2444 0025 03       		.uleb128 0x3
 2445 0026 08       		.uleb128 0x8
 2446 0027 00       		.byte	0
 2447 0028 00       		.byte	0
 2448 0029 04       		.uleb128 0x4
 2449 002a 16       		.uleb128 0x16
 2450 002b 00       		.byte	0
 2451 002c 03       		.uleb128 0x3
 2452 002d 0E       		.uleb128 0xe
 2453 002e 3A       		.uleb128 0x3a
 2454 002f 0B       		.uleb128 0xb
 2455 0030 3B       		.uleb128 0x3b
 2456 0031 05       		.uleb128 0x5
 2457 0032 49       		.uleb128 0x49
 2458 0033 13       		.uleb128 0x13
 2459 0034 00       		.byte	0
 2460 0035 00       		.byte	0
 2461 0036 05       		.uleb128 0x5
 2462 0037 35       		.uleb128 0x35
 2463 0038 00       		.byte	0
 2464 0039 49       		.uleb128 0x49
 2465 003a 13       		.uleb128 0x13
 2466 003b 00       		.byte	0
 2467 003c 00       		.byte	0
 2468 003d 06       		.uleb128 0x6
 2469 003e 13       		.uleb128 0x13
 2470 003f 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 89


 2471 0040 0B       		.uleb128 0xb
 2472 0041 0B       		.uleb128 0xb
 2473 0042 3A       		.uleb128 0x3a
 2474 0043 0B       		.uleb128 0xb
 2475 0044 3B       		.uleb128 0x3b
 2476 0045 0B       		.uleb128 0xb
 2477 0046 01       		.uleb128 0x1
 2478 0047 13       		.uleb128 0x13
 2479 0048 00       		.byte	0
 2480 0049 00       		.byte	0
 2481 004a 07       		.uleb128 0x7
 2482 004b 0D       		.uleb128 0xd
 2483 004c 00       		.byte	0
 2484 004d 03       		.uleb128 0x3
 2485 004e 0E       		.uleb128 0xe
 2486 004f 3A       		.uleb128 0x3a
 2487 0050 0B       		.uleb128 0xb
 2488 0051 3B       		.uleb128 0x3b
 2489 0052 0B       		.uleb128 0xb
 2490 0053 49       		.uleb128 0x49
 2491 0054 13       		.uleb128 0x13
 2492 0055 38       		.uleb128 0x38
 2493 0056 0B       		.uleb128 0xb
 2494 0057 00       		.byte	0
 2495 0058 00       		.byte	0
 2496 0059 08       		.uleb128 0x8
 2497 005a 16       		.uleb128 0x16
 2498 005b 00       		.byte	0
 2499 005c 03       		.uleb128 0x3
 2500 005d 0E       		.uleb128 0xe
 2501 005e 3A       		.uleb128 0x3a
 2502 005f 0B       		.uleb128 0xb
 2503 0060 3B       		.uleb128 0x3b
 2504 0061 0B       		.uleb128 0xb
 2505 0062 49       		.uleb128 0x49
 2506 0063 13       		.uleb128 0x13
 2507 0064 00       		.byte	0
 2508 0065 00       		.byte	0
 2509 0066 09       		.uleb128 0x9
 2510 0067 0D       		.uleb128 0xd
 2511 0068 00       		.byte	0
 2512 0069 03       		.uleb128 0x3
 2513 006a 08       		.uleb128 0x8
 2514 006b 3A       		.uleb128 0x3a
 2515 006c 0B       		.uleb128 0xb
 2516 006d 3B       		.uleb128 0x3b
 2517 006e 0B       		.uleb128 0xb
 2518 006f 49       		.uleb128 0x49
 2519 0070 13       		.uleb128 0x13
 2520 0071 38       		.uleb128 0x38
 2521 0072 0B       		.uleb128 0xb
 2522 0073 00       		.byte	0
 2523 0074 00       		.byte	0
 2524 0075 0A       		.uleb128 0xa
 2525 0076 01       		.uleb128 0x1
 2526 0077 01       		.byte	0x1
 2527 0078 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 90


 2528 0079 13       		.uleb128 0x13
 2529 007a 01       		.uleb128 0x1
 2530 007b 13       		.uleb128 0x13
 2531 007c 00       		.byte	0
 2532 007d 00       		.byte	0
 2533 007e 0B       		.uleb128 0xb
 2534 007f 21       		.uleb128 0x21
 2535 0080 00       		.byte	0
 2536 0081 49       		.uleb128 0x49
 2537 0082 13       		.uleb128 0x13
 2538 0083 2F       		.uleb128 0x2f
 2539 0084 0B       		.uleb128 0xb
 2540 0085 00       		.byte	0
 2541 0086 00       		.byte	0
 2542 0087 0C       		.uleb128 0xc
 2543 0088 13       		.uleb128 0x13
 2544 0089 01       		.byte	0x1
 2545 008a 0B       		.uleb128 0xb
 2546 008b 0B       		.uleb128 0xb
 2547 008c 3A       		.uleb128 0x3a
 2548 008d 0B       		.uleb128 0xb
 2549 008e 3B       		.uleb128 0x3b
 2550 008f 05       		.uleb128 0x5
 2551 0090 01       		.uleb128 0x1
 2552 0091 13       		.uleb128 0x13
 2553 0092 00       		.byte	0
 2554 0093 00       		.byte	0
 2555 0094 0D       		.uleb128 0xd
 2556 0095 0D       		.uleb128 0xd
 2557 0096 00       		.byte	0
 2558 0097 03       		.uleb128 0x3
 2559 0098 0E       		.uleb128 0xe
 2560 0099 3A       		.uleb128 0x3a
 2561 009a 0B       		.uleb128 0xb
 2562 009b 3B       		.uleb128 0x3b
 2563 009c 05       		.uleb128 0x5
 2564 009d 49       		.uleb128 0x49
 2565 009e 13       		.uleb128 0x13
 2566 009f 38       		.uleb128 0x38
 2567 00a0 0B       		.uleb128 0xb
 2568 00a1 00       		.byte	0
 2569 00a2 00       		.byte	0
 2570 00a3 0E       		.uleb128 0xe
 2571 00a4 2E       		.uleb128 0x2e
 2572 00a5 01       		.byte	0x1
 2573 00a6 3F       		.uleb128 0x3f
 2574 00a7 19       		.uleb128 0x19
 2575 00a8 03       		.uleb128 0x3
 2576 00a9 0E       		.uleb128 0xe
 2577 00aa 3A       		.uleb128 0x3a
 2578 00ab 0B       		.uleb128 0xb
 2579 00ac 3B       		.uleb128 0x3b
 2580 00ad 0B       		.uleb128 0xb
 2581 00ae 27       		.uleb128 0x27
 2582 00af 19       		.uleb128 0x19
 2583 00b0 11       		.uleb128 0x11
 2584 00b1 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 91


 2585 00b2 12       		.uleb128 0x12
 2586 00b3 06       		.uleb128 0x6
 2587 00b4 40       		.uleb128 0x40
 2588 00b5 18       		.uleb128 0x18
 2589 00b6 9742     		.uleb128 0x2117
 2590 00b8 19       		.uleb128 0x19
 2591 00b9 01       		.uleb128 0x1
 2592 00ba 13       		.uleb128 0x13
 2593 00bb 00       		.byte	0
 2594 00bc 00       		.byte	0
 2595 00bd 0F       		.uleb128 0xf
 2596 00be 34       		.uleb128 0x34
 2597 00bf 00       		.byte	0
 2598 00c0 03       		.uleb128 0x3
 2599 00c1 0E       		.uleb128 0xe
 2600 00c2 3A       		.uleb128 0x3a
 2601 00c3 0B       		.uleb128 0xb
 2602 00c4 3B       		.uleb128 0x3b
 2603 00c5 0B       		.uleb128 0xb
 2604 00c6 49       		.uleb128 0x49
 2605 00c7 13       		.uleb128 0x13
 2606 00c8 02       		.uleb128 0x2
 2607 00c9 17       		.uleb128 0x17
 2608 00ca 00       		.byte	0
 2609 00cb 00       		.byte	0
 2610 00cc 10       		.uleb128 0x10
 2611 00cd 898201   		.uleb128 0x4109
 2612 00d0 00       		.byte	0
 2613 00d1 11       		.uleb128 0x11
 2614 00d2 01       		.uleb128 0x1
 2615 00d3 31       		.uleb128 0x31
 2616 00d4 13       		.uleb128 0x13
 2617 00d5 00       		.byte	0
 2618 00d6 00       		.byte	0
 2619 00d7 11       		.uleb128 0x11
 2620 00d8 898201   		.uleb128 0x4109
 2621 00db 01       		.byte	0x1
 2622 00dc 11       		.uleb128 0x11
 2623 00dd 01       		.uleb128 0x1
 2624 00de 31       		.uleb128 0x31
 2625 00df 13       		.uleb128 0x13
 2626 00e0 01       		.uleb128 0x1
 2627 00e1 13       		.uleb128 0x13
 2628 00e2 00       		.byte	0
 2629 00e3 00       		.byte	0
 2630 00e4 12       		.uleb128 0x12
 2631 00e5 8A8201   		.uleb128 0x410a
 2632 00e8 00       		.byte	0
 2633 00e9 02       		.uleb128 0x2
 2634 00ea 18       		.uleb128 0x18
 2635 00eb 9142     		.uleb128 0x2111
 2636 00ed 18       		.uleb128 0x18
 2637 00ee 00       		.byte	0
 2638 00ef 00       		.byte	0
 2639 00f0 13       		.uleb128 0x13
 2640 00f1 898201   		.uleb128 0x4109
 2641 00f4 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 92


 2642 00f5 11       		.uleb128 0x11
 2643 00f6 01       		.uleb128 0x1
 2644 00f7 31       		.uleb128 0x31
 2645 00f8 13       		.uleb128 0x13
 2646 00f9 00       		.byte	0
 2647 00fa 00       		.byte	0
 2648 00fb 14       		.uleb128 0x14
 2649 00fc 2E       		.uleb128 0x2e
 2650 00fd 01       		.byte	0x1
 2651 00fe 3F       		.uleb128 0x3f
 2652 00ff 19       		.uleb128 0x19
 2653 0100 03       		.uleb128 0x3
 2654 0101 0E       		.uleb128 0xe
 2655 0102 3A       		.uleb128 0x3a
 2656 0103 0B       		.uleb128 0xb
 2657 0104 3B       		.uleb128 0x3b
 2658 0105 05       		.uleb128 0x5
 2659 0106 27       		.uleb128 0x27
 2660 0107 19       		.uleb128 0x19
 2661 0108 11       		.uleb128 0x11
 2662 0109 01       		.uleb128 0x1
 2663 010a 12       		.uleb128 0x12
 2664 010b 06       		.uleb128 0x6
 2665 010c 40       		.uleb128 0x40
 2666 010d 18       		.uleb128 0x18
 2667 010e 9742     		.uleb128 0x2117
 2668 0110 19       		.uleb128 0x19
 2669 0111 01       		.uleb128 0x1
 2670 0112 13       		.uleb128 0x13
 2671 0113 00       		.byte	0
 2672 0114 00       		.byte	0
 2673 0115 15       		.uleb128 0x15
 2674 0116 05       		.uleb128 0x5
 2675 0117 00       		.byte	0
 2676 0118 03       		.uleb128 0x3
 2677 0119 0E       		.uleb128 0xe
 2678 011a 3A       		.uleb128 0x3a
 2679 011b 0B       		.uleb128 0xb
 2680 011c 3B       		.uleb128 0x3b
 2681 011d 05       		.uleb128 0x5
 2682 011e 49       		.uleb128 0x49
 2683 011f 13       		.uleb128 0x13
 2684 0120 02       		.uleb128 0x2
 2685 0121 17       		.uleb128 0x17
 2686 0122 00       		.byte	0
 2687 0123 00       		.byte	0
 2688 0124 16       		.uleb128 0x16
 2689 0125 05       		.uleb128 0x5
 2690 0126 00       		.byte	0
 2691 0127 03       		.uleb128 0x3
 2692 0128 0E       		.uleb128 0xe
 2693 0129 3A       		.uleb128 0x3a
 2694 012a 0B       		.uleb128 0xb
 2695 012b 3B       		.uleb128 0x3b
 2696 012c 0B       		.uleb128 0xb
 2697 012d 49       		.uleb128 0x49
 2698 012e 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 93


 2699 012f 02       		.uleb128 0x2
 2700 0130 17       		.uleb128 0x17
 2701 0131 00       		.byte	0
 2702 0132 00       		.byte	0
 2703 0133 17       		.uleb128 0x17
 2704 0134 2E       		.uleb128 0x2e
 2705 0135 00       		.byte	0
 2706 0136 3F       		.uleb128 0x3f
 2707 0137 19       		.uleb128 0x19
 2708 0138 03       		.uleb128 0x3
 2709 0139 0E       		.uleb128 0xe
 2710 013a 3A       		.uleb128 0x3a
 2711 013b 0B       		.uleb128 0xb
 2712 013c 3B       		.uleb128 0x3b
 2713 013d 05       		.uleb128 0x5
 2714 013e 27       		.uleb128 0x27
 2715 013f 19       		.uleb128 0x19
 2716 0140 11       		.uleb128 0x11
 2717 0141 01       		.uleb128 0x1
 2718 0142 12       		.uleb128 0x12
 2719 0143 06       		.uleb128 0x6
 2720 0144 40       		.uleb128 0x40
 2721 0145 18       		.uleb128 0x18
 2722 0146 9742     		.uleb128 0x2117
 2723 0148 19       		.uleb128 0x19
 2724 0149 00       		.byte	0
 2725 014a 00       		.byte	0
 2726 014b 18       		.uleb128 0x18
 2727 014c 34       		.uleb128 0x34
 2728 014d 00       		.byte	0
 2729 014e 03       		.uleb128 0x3
 2730 014f 0E       		.uleb128 0xe
 2731 0150 3A       		.uleb128 0x3a
 2732 0151 0B       		.uleb128 0xb
 2733 0152 3B       		.uleb128 0x3b
 2734 0153 05       		.uleb128 0x5
 2735 0154 49       		.uleb128 0x49
 2736 0155 13       		.uleb128 0x13
 2737 0156 02       		.uleb128 0x2
 2738 0157 17       		.uleb128 0x17
 2739 0158 00       		.byte	0
 2740 0159 00       		.byte	0
 2741 015a 19       		.uleb128 0x19
 2742 015b 2E       		.uleb128 0x2e
 2743 015c 01       		.byte	0x1
 2744 015d 3F       		.uleb128 0x3f
 2745 015e 19       		.uleb128 0x19
 2746 015f 03       		.uleb128 0x3
 2747 0160 0E       		.uleb128 0xe
 2748 0161 3A       		.uleb128 0x3a
 2749 0162 0B       		.uleb128 0xb
 2750 0163 3B       		.uleb128 0x3b
 2751 0164 05       		.uleb128 0x5
 2752 0165 27       		.uleb128 0x27
 2753 0166 19       		.uleb128 0x19
 2754 0167 49       		.uleb128 0x49
 2755 0168 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 94


 2756 0169 11       		.uleb128 0x11
 2757 016a 01       		.uleb128 0x1
 2758 016b 12       		.uleb128 0x12
 2759 016c 06       		.uleb128 0x6
 2760 016d 40       		.uleb128 0x40
 2761 016e 18       		.uleb128 0x18
 2762 016f 9742     		.uleb128 0x2117
 2763 0171 19       		.uleb128 0x19
 2764 0172 01       		.uleb128 0x1
 2765 0173 13       		.uleb128 0x13
 2766 0174 00       		.byte	0
 2767 0175 00       		.byte	0
 2768 0176 1A       		.uleb128 0x1a
 2769 0177 2E       		.uleb128 0x2e
 2770 0178 00       		.byte	0
 2771 0179 3F       		.uleb128 0x3f
 2772 017a 19       		.uleb128 0x19
 2773 017b 03       		.uleb128 0x3
 2774 017c 0E       		.uleb128 0xe
 2775 017d 3A       		.uleb128 0x3a
 2776 017e 0B       		.uleb128 0xb
 2777 017f 3B       		.uleb128 0x3b
 2778 0180 05       		.uleb128 0x5
 2779 0181 27       		.uleb128 0x27
 2780 0182 19       		.uleb128 0x19
 2781 0183 49       		.uleb128 0x49
 2782 0184 13       		.uleb128 0x13
 2783 0185 11       		.uleb128 0x11
 2784 0186 01       		.uleb128 0x1
 2785 0187 12       		.uleb128 0x12
 2786 0188 06       		.uleb128 0x6
 2787 0189 40       		.uleb128 0x40
 2788 018a 18       		.uleb128 0x18
 2789 018b 9742     		.uleb128 0x2117
 2790 018d 19       		.uleb128 0x19
 2791 018e 00       		.byte	0
 2792 018f 00       		.byte	0
 2793 0190 1B       		.uleb128 0x1b
 2794 0191 34       		.uleb128 0x34
 2795 0192 00       		.byte	0
 2796 0193 03       		.uleb128 0x3
 2797 0194 08       		.uleb128 0x8
 2798 0195 3A       		.uleb128 0x3a
 2799 0196 0B       		.uleb128 0xb
 2800 0197 3B       		.uleb128 0x3b
 2801 0198 05       		.uleb128 0x5
 2802 0199 49       		.uleb128 0x49
 2803 019a 13       		.uleb128 0x13
 2804 019b 02       		.uleb128 0x2
 2805 019c 17       		.uleb128 0x17
 2806 019d 00       		.byte	0
 2807 019e 00       		.byte	0
 2808 019f 1C       		.uleb128 0x1c
 2809 01a0 05       		.uleb128 0x5
 2810 01a1 00       		.byte	0
 2811 01a2 03       		.uleb128 0x3
 2812 01a3 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 95


 2813 01a4 3A       		.uleb128 0x3a
 2814 01a5 0B       		.uleb128 0xb
 2815 01a6 3B       		.uleb128 0x3b
 2816 01a7 05       		.uleb128 0x5
 2817 01a8 49       		.uleb128 0x49
 2818 01a9 13       		.uleb128 0x13
 2819 01aa 02       		.uleb128 0x2
 2820 01ab 18       		.uleb128 0x18
 2821 01ac 00       		.byte	0
 2822 01ad 00       		.byte	0
 2823 01ae 1D       		.uleb128 0x1d
 2824 01af 0B       		.uleb128 0xb
 2825 01b0 01       		.byte	0x1
 2826 01b1 55       		.uleb128 0x55
 2827 01b2 17       		.uleb128 0x17
 2828 01b3 00       		.byte	0
 2829 01b4 00       		.byte	0
 2830 01b5 1E       		.uleb128 0x1e
 2831 01b6 0F       		.uleb128 0xf
 2832 01b7 00       		.byte	0
 2833 01b8 0B       		.uleb128 0xb
 2834 01b9 0B       		.uleb128 0xb
 2835 01ba 49       		.uleb128 0x49
 2836 01bb 13       		.uleb128 0x13
 2837 01bc 00       		.byte	0
 2838 01bd 00       		.byte	0
 2839 01be 1F       		.uleb128 0x1f
 2840 01bf 26       		.uleb128 0x26
 2841 01c0 00       		.byte	0
 2842 01c1 49       		.uleb128 0x49
 2843 01c2 13       		.uleb128 0x13
 2844 01c3 00       		.byte	0
 2845 01c4 00       		.byte	0
 2846 01c5 20       		.uleb128 0x20
 2847 01c6 0B       		.uleb128 0xb
 2848 01c7 01       		.byte	0x1
 2849 01c8 11       		.uleb128 0x11
 2850 01c9 01       		.uleb128 0x1
 2851 01ca 12       		.uleb128 0x12
 2852 01cb 06       		.uleb128 0x6
 2853 01cc 01       		.uleb128 0x1
 2854 01cd 13       		.uleb128 0x13
 2855 01ce 00       		.byte	0
 2856 01cf 00       		.byte	0
 2857 01d0 21       		.uleb128 0x21
 2858 01d1 34       		.uleb128 0x34
 2859 01d2 00       		.byte	0
 2860 01d3 03       		.uleb128 0x3
 2861 01d4 0E       		.uleb128 0xe
 2862 01d5 3A       		.uleb128 0x3a
 2863 01d6 0B       		.uleb128 0xb
 2864 01d7 3B       		.uleb128 0x3b
 2865 01d8 0B       		.uleb128 0xb
 2866 01d9 49       		.uleb128 0x49
 2867 01da 13       		.uleb128 0x13
 2868 01db 3F       		.uleb128 0x3f
 2869 01dc 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 96


 2870 01dd 02       		.uleb128 0x2
 2871 01de 18       		.uleb128 0x18
 2872 01df 00       		.byte	0
 2873 01e0 00       		.byte	0
 2874 01e1 22       		.uleb128 0x22
 2875 01e2 34       		.uleb128 0x34
 2876 01e3 00       		.byte	0
 2877 01e4 03       		.uleb128 0x3
 2878 01e5 0E       		.uleb128 0xe
 2879 01e6 3A       		.uleb128 0x3a
 2880 01e7 0B       		.uleb128 0xb
 2881 01e8 3B       		.uleb128 0x3b
 2882 01e9 05       		.uleb128 0x5
 2883 01ea 49       		.uleb128 0x49
 2884 01eb 13       		.uleb128 0x13
 2885 01ec 3F       		.uleb128 0x3f
 2886 01ed 19       		.uleb128 0x19
 2887 01ee 3C       		.uleb128 0x3c
 2888 01ef 19       		.uleb128 0x19
 2889 01f0 00       		.byte	0
 2890 01f1 00       		.byte	0
 2891 01f2 23       		.uleb128 0x23
 2892 01f3 34       		.uleb128 0x34
 2893 01f4 00       		.byte	0
 2894 01f5 03       		.uleb128 0x3
 2895 01f6 0E       		.uleb128 0xe
 2896 01f7 3A       		.uleb128 0x3a
 2897 01f8 0B       		.uleb128 0xb
 2898 01f9 3B       		.uleb128 0x3b
 2899 01fa 0B       		.uleb128 0xb
 2900 01fb 49       		.uleb128 0x49
 2901 01fc 13       		.uleb128 0x13
 2902 01fd 3F       		.uleb128 0x3f
 2903 01fe 19       		.uleb128 0x19
 2904 01ff 3C       		.uleb128 0x3c
 2905 0200 19       		.uleb128 0x19
 2906 0201 00       		.byte	0
 2907 0202 00       		.byte	0
 2908 0203 24       		.uleb128 0x24
 2909 0204 2E       		.uleb128 0x2e
 2910 0205 00       		.byte	0
 2911 0206 3F       		.uleb128 0x3f
 2912 0207 19       		.uleb128 0x19
 2913 0208 3C       		.uleb128 0x3c
 2914 0209 19       		.uleb128 0x19
 2915 020a 6E       		.uleb128 0x6e
 2916 020b 0E       		.uleb128 0xe
 2917 020c 03       		.uleb128 0x3
 2918 020d 0E       		.uleb128 0xe
 2919 020e 3A       		.uleb128 0x3a
 2920 020f 0B       		.uleb128 0xb
 2921 0210 3B       		.uleb128 0x3b
 2922 0211 0B       		.uleb128 0xb
 2923 0212 00       		.byte	0
 2924 0213 00       		.byte	0
 2925 0214 00       		.byte	0
 2926              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 97


 2927              	.Ldebug_loc0:
 2928              	.LLST0:
 2929 0000 08000000 		.4byte	.LVL1
 2930 0004 FA000000 		.4byte	.LVL19
 2931 0008 0100     		.2byte	0x1
 2932 000a 55       		.byte	0x55
 2933 000b 00000000 		.4byte	0
 2934 000f 00000000 		.4byte	0
 2935              	.LLST1:
 2936 0013 00000000 		.4byte	.LVL20
 2937 0017 78000000 		.4byte	.LVL21
 2938 001b 0100     		.2byte	0x1
 2939 001d 50       		.byte	0x50
 2940 001e 78000000 		.4byte	.LVL21
 2941 0022 B4000000 		.4byte	.LFE2
 2942 0026 0400     		.2byte	0x4
 2943 0028 F3       		.byte	0xf3
 2944 0029 01       		.uleb128 0x1
 2945 002a 50       		.byte	0x50
 2946 002b 9F       		.byte	0x9f
 2947 002c 00000000 		.4byte	0
 2948 0030 00000000 		.4byte	0
 2949              	.LLST2:
 2950 0034 00000000 		.4byte	.LVL20
 2951 0038 7B000000 		.4byte	.LVL22-1
 2952 003c 0100     		.2byte	0x1
 2953 003e 51       		.byte	0x51
 2954 003f 7B000000 		.4byte	.LVL22-1
 2955 0043 B4000000 		.4byte	.LFE2
 2956 0047 0400     		.2byte	0x4
 2957 0049 F3       		.byte	0xf3
 2958 004a 01       		.uleb128 0x1
 2959 004b 51       		.byte	0x51
 2960 004c 9F       		.byte	0x9f
 2961 004d 00000000 		.4byte	0
 2962 0051 00000000 		.4byte	0
 2963              	.LLST3:
 2964 0055 00000000 		.4byte	.LVL23
 2965 0059 0F000000 		.4byte	.LVL24-1
 2966 005d 0100     		.2byte	0x1
 2967 005f 50       		.byte	0x50
 2968 0060 0F000000 		.4byte	.LVL24-1
 2969 0064 24000000 		.4byte	.LFE0
 2970 0068 0400     		.2byte	0x4
 2971 006a F3       		.byte	0xf3
 2972 006b 01       		.uleb128 0x1
 2973 006c 50       		.byte	0x50
 2974 006d 9F       		.byte	0x9f
 2975 006e 00000000 		.4byte	0
 2976 0072 00000000 		.4byte	0
 2977              	.LLST4:
 2978 0076 00000000 		.4byte	.LVL23
 2979 007a 0F000000 		.4byte	.LVL24-1
 2980 007e 0100     		.2byte	0x1
 2981 0080 51       		.byte	0x51
 2982 0081 0F000000 		.4byte	.LVL24-1
 2983 0085 24000000 		.4byte	.LFE0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 98


 2984 0089 0400     		.2byte	0x4
 2985 008b F3       		.byte	0xf3
 2986 008c 01       		.uleb128 0x1
 2987 008d 51       		.byte	0x51
 2988 008e 9F       		.byte	0x9f
 2989 008f 00000000 		.4byte	0
 2990 0093 00000000 		.4byte	0
 2991              	.LLST5:
 2992 0097 06000000 		.4byte	.LVL26
 2993 009b 47000000 		.4byte	.LVL27-1
 2994 009f 0100     		.2byte	0x1
 2995 00a1 50       		.byte	0x50
 2996 00a2 00000000 		.4byte	0
 2997 00a6 00000000 		.4byte	0
 2998              	.LLST6:
 2999 00aa 06000000 		.4byte	.LVL29
 3000 00ae 10000000 		.4byte	.LVL30
 3001 00b2 0100     		.2byte	0x1
 3002 00b4 53       		.byte	0x53
 3003 00b5 00000000 		.4byte	0
 3004 00b9 00000000 		.4byte	0
 3005              	.LLST7:
 3006 00bd 00000000 		.4byte	.LVL31
 3007 00c1 10000000 		.4byte	.LVL32
 3008 00c5 0200     		.2byte	0x2
 3009 00c7 30       		.byte	0x30
 3010 00c8 9F       		.byte	0x9f
 3011 00c9 10000000 		.4byte	.LVL32
 3012 00cd 16000000 		.4byte	.LVL33
 3013 00d1 0100     		.2byte	0x1
 3014 00d3 50       		.byte	0x50
 3015 00d4 16000000 		.4byte	.LVL33
 3016 00d8 18000000 		.4byte	.LVL34
 3017 00dc 0200     		.2byte	0x2
 3018 00de 30       		.byte	0x30
 3019 00df 9F       		.byte	0x9f
 3020 00e0 18000000 		.4byte	.LVL34
 3021 00e4 20000000 		.4byte	.LFE7
 3022 00e8 0100     		.2byte	0x1
 3023 00ea 50       		.byte	0x50
 3024 00eb 00000000 		.4byte	0
 3025 00ef 00000000 		.4byte	0
 3026              	.LLST8:
 3027 00f3 00000000 		.4byte	.LVL35
 3028 00f7 04000000 		.4byte	.LVL36
 3029 00fb 0100     		.2byte	0x1
 3030 00fd 50       		.byte	0x50
 3031 00fe 04000000 		.4byte	.LVL36
 3032 0102 0C000000 		.4byte	.LFE8
 3033 0106 0400     		.2byte	0x4
 3034 0108 F3       		.byte	0xf3
 3035 0109 01       		.uleb128 0x1
 3036 010a 50       		.byte	0x50
 3037 010b 9F       		.byte	0x9f
 3038 010c 00000000 		.4byte	0
 3039 0110 00000000 		.4byte	0
 3040              	.LLST9:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 99


 3041 0114 00000000 		.4byte	.LVL37
 3042 0118 04000000 		.4byte	.LVL38
 3043 011c 0100     		.2byte	0x1
 3044 011e 50       		.byte	0x50
 3045 011f 04000000 		.4byte	.LVL38
 3046 0123 14000000 		.4byte	.LFE9
 3047 0127 0400     		.2byte	0x4
 3048 0129 F3       		.byte	0xf3
 3049 012a 01       		.uleb128 0x1
 3050 012b 50       		.byte	0x50
 3051 012c 9F       		.byte	0x9f
 3052 012d 00000000 		.4byte	0
 3053 0131 00000000 		.4byte	0
 3054              	.LLST10:
 3055 0135 00000000 		.4byte	.LVL39
 3056 0139 0C000000 		.4byte	.LVL40
 3057 013d 0100     		.2byte	0x1
 3058 013f 50       		.byte	0x50
 3059 0140 0C000000 		.4byte	.LVL40
 3060 0144 20000000 		.4byte	.LVL45
 3061 0148 0400     		.2byte	0x4
 3062 014a F3       		.byte	0xf3
 3063 014b 01       		.uleb128 0x1
 3064 014c 50       		.byte	0x50
 3065 014d 9F       		.byte	0x9f
 3066 014e 20000000 		.4byte	.LVL45
 3067 0152 22000000 		.4byte	.LVL46
 3068 0156 0100     		.2byte	0x1
 3069 0158 50       		.byte	0x50
 3070 0159 22000000 		.4byte	.LVL46
 3071 015d 28000000 		.4byte	.LFE10
 3072 0161 0400     		.2byte	0x4
 3073 0163 F3       		.byte	0xf3
 3074 0164 01       		.uleb128 0x1
 3075 0165 50       		.byte	0x50
 3076 0166 9F       		.byte	0x9f
 3077 0167 00000000 		.4byte	0
 3078 016b 00000000 		.4byte	0
 3079              	.LLST11:
 3080 016f 00000000 		.4byte	.LVL39
 3081 0173 14000000 		.4byte	.LVL41
 3082 0177 0200     		.2byte	0x2
 3083 0179 30       		.byte	0x30
 3084 017a 9F       		.byte	0x9f
 3085 017b 14000000 		.4byte	.LVL41
 3086 017f 1C000000 		.4byte	.LVL43
 3087 0183 0100     		.2byte	0x1
 3088 0185 50       		.byte	0x50
 3089 0186 1C000000 		.4byte	.LVL43
 3090 018a 1E000000 		.4byte	.LVL44
 3091 018e 0300     		.2byte	0x3
 3092 0190 70       		.byte	0x70
 3093 0191 02       		.sleb128 2
 3094 0192 9F       		.byte	0x9f
 3095 0193 1E000000 		.4byte	.LVL44
 3096 0197 20000000 		.4byte	.LVL45
 3097 019b 0100     		.2byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 100


 3098 019d 50       		.byte	0x50
 3099 019e 20000000 		.4byte	.LVL45
 3100 01a2 22000000 		.4byte	.LVL46
 3101 01a6 0200     		.2byte	0x2
 3102 01a8 30       		.byte	0x30
 3103 01a9 9F       		.byte	0x9f
 3104 01aa 22000000 		.4byte	.LVL46
 3105 01ae 28000000 		.4byte	.LFE10
 3106 01b2 0100     		.2byte	0x1
 3107 01b4 50       		.byte	0x50
 3108 01b5 00000000 		.4byte	0
 3109 01b9 00000000 		.4byte	0
 3110              	.LLST12:
 3111 01bd 00000000 		.4byte	.LVL47
 3112 01c1 7C000000 		.4byte	.LVL57
 3113 01c5 0100     		.2byte	0x1
 3114 01c7 50       		.byte	0x50
 3115 01c8 7C000000 		.4byte	.LVL57
 3116 01cc 94000000 		.4byte	.LFE11
 3117 01d0 0400     		.2byte	0x4
 3118 01d2 F3       		.byte	0xf3
 3119 01d3 01       		.uleb128 0x1
 3120 01d4 50       		.byte	0x50
 3121 01d5 9F       		.byte	0x9f
 3122 01d6 00000000 		.4byte	0
 3123 01da 00000000 		.4byte	0
 3124              	.LLST13:
 3125 01de 00000000 		.4byte	.LVL47
 3126 01e2 26000000 		.4byte	.LVL48
 3127 01e6 0100     		.2byte	0x1
 3128 01e8 52       		.byte	0x52
 3129 01e9 26000000 		.4byte	.LVL48
 3130 01ed 34000000 		.4byte	.LVL49
 3131 01f1 0400     		.2byte	0x4
 3132 01f3 F3       		.byte	0xf3
 3133 01f4 01       		.uleb128 0x1
 3134 01f5 52       		.byte	0x52
 3135 01f6 9F       		.byte	0x9f
 3136 01f7 34000000 		.4byte	.LVL49
 3137 01fb 6A000000 		.4byte	.LVL56
 3138 01ff 0100     		.2byte	0x1
 3139 0201 52       		.byte	0x52
 3140 0202 00000000 		.4byte	0
 3141 0206 00000000 		.4byte	0
 3142              	.LLST14:
 3143 020a 54000000 		.4byte	.LVL50
 3144 020e 5E000000 		.4byte	.LVL51
 3145 0212 0100     		.2byte	0x1
 3146 0214 53       		.byte	0x53
 3147 0215 60000000 		.4byte	.LVL52
 3148 0219 62000000 		.4byte	.LVL53
 3149 021d 0100     		.2byte	0x1
 3150 021f 53       		.byte	0x53
 3151 0220 64000000 		.4byte	.LVL54
 3152 0224 68000000 		.4byte	.LVL55
 3153 0228 0100     		.2byte	0x1
 3154 022a 53       		.byte	0x53
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 101


 3155 022b 00000000 		.4byte	0
 3156 022f 00000000 		.4byte	0
 3157              	.LLST15:
 3158 0233 00000000 		.4byte	.LVL58
 3159 0237 1C000000 		.4byte	.LVL59
 3160 023b 0100     		.2byte	0x1
 3161 023d 50       		.byte	0x50
 3162 023e 1C000000 		.4byte	.LVL59
 3163 0242 2C000000 		.4byte	.LFE13
 3164 0246 0400     		.2byte	0x4
 3165 0248 F3       		.byte	0xf3
 3166 0249 01       		.uleb128 0x1
 3167 024a 50       		.byte	0x50
 3168 024b 9F       		.byte	0x9f
 3169 024c 00000000 		.4byte	0
 3170 0250 00000000 		.4byte	0
 3171              	.LLST16:
 3172 0254 00000000 		.4byte	.LVL60
 3173 0258 13000000 		.4byte	.LVL61-1
 3174 025c 0100     		.2byte	0x1
 3175 025e 50       		.byte	0x50
 3176 025f 13000000 		.4byte	.LVL61-1
 3177 0263 3C000000 		.4byte	.LVL68
 3178 0267 0400     		.2byte	0x4
 3179 0269 F3       		.byte	0xf3
 3180 026a 01       		.uleb128 0x1
 3181 026b 50       		.byte	0x50
 3182 026c 9F       		.byte	0x9f
 3183 026d 3C000000 		.4byte	.LVL68
 3184 0271 46000000 		.4byte	.LVL69
 3185 0275 0100     		.2byte	0x1
 3186 0277 50       		.byte	0x50
 3187 0278 46000000 		.4byte	.LVL69
 3188 027c 50000000 		.4byte	.LFE12
 3189 0280 0400     		.2byte	0x4
 3190 0282 F3       		.byte	0xf3
 3191 0283 01       		.uleb128 0x1
 3192 0284 50       		.byte	0x50
 3193 0285 9F       		.byte	0x9f
 3194 0286 00000000 		.4byte	0
 3195 028a 00000000 		.4byte	0
 3196              	.LLST17:
 3197 028e 00000000 		.4byte	.LVL60
 3198 0292 13000000 		.4byte	.LVL61-1
 3199 0296 0100     		.2byte	0x1
 3200 0298 51       		.byte	0x51
 3201 0299 13000000 		.4byte	.LVL61-1
 3202 029d 3C000000 		.4byte	.LVL68
 3203 02a1 0100     		.2byte	0x1
 3204 02a3 56       		.byte	0x56
 3205 02a4 3C000000 		.4byte	.LVL68
 3206 02a8 46000000 		.4byte	.LVL69
 3207 02ac 0100     		.2byte	0x1
 3208 02ae 51       		.byte	0x51
 3209 02af 46000000 		.4byte	.LVL69
 3210 02b3 50000000 		.4byte	.LFE12
 3211 02b7 0400     		.2byte	0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 102


 3212 02b9 F3       		.byte	0xf3
 3213 02ba 01       		.uleb128 0x1
 3214 02bb 51       		.byte	0x51
 3215 02bc 9F       		.byte	0x9f
 3216 02bd 00000000 		.4byte	0
 3217 02c1 00000000 		.4byte	0
 3218              	.LLST18:
 3219 02c5 00000000 		.4byte	.LVL60
 3220 02c9 13000000 		.4byte	.LVL61-1
 3221 02cd 0100     		.2byte	0x1
 3222 02cf 52       		.byte	0x52
 3223 02d0 13000000 		.4byte	.LVL61-1
 3224 02d4 20000000 		.4byte	.LVL63
 3225 02d8 0400     		.2byte	0x4
 3226 02da F3       		.byte	0xf3
 3227 02db 01       		.uleb128 0x1
 3228 02dc 52       		.byte	0x52
 3229 02dd 9F       		.byte	0x9f
 3230 02de 20000000 		.4byte	.LVL63
 3231 02e2 3C000000 		.4byte	.LVL68
 3232 02e6 0100     		.2byte	0x1
 3233 02e8 54       		.byte	0x54
 3234 02e9 3C000000 		.4byte	.LVL68
 3235 02ed 46000000 		.4byte	.LVL69
 3236 02f1 0100     		.2byte	0x1
 3237 02f3 52       		.byte	0x52
 3238 02f4 46000000 		.4byte	.LVL69
 3239 02f8 4A000000 		.4byte	.LVL70
 3240 02fc 0100     		.2byte	0x1
 3241 02fe 54       		.byte	0x54
 3242 02ff 00000000 		.4byte	0
 3243 0303 00000000 		.4byte	0
 3244              	.LLST19:
 3245 0307 20000000 		.4byte	.LVL63
 3246 030b 24000000 		.4byte	.LVL64
 3247 030f 0200     		.2byte	0x2
 3248 0311 30       		.byte	0x30
 3249 0312 9F       		.byte	0x9f
 3250 0313 24000000 		.4byte	.LVL64
 3251 0317 2E000000 		.4byte	.LVL65
 3252 031b 0100     		.2byte	0x1
 3253 031d 53       		.byte	0x53
 3254 031e 30000000 		.4byte	.LVL66
 3255 0322 39000000 		.4byte	.LVL67-1
 3256 0326 0100     		.2byte	0x1
 3257 0328 53       		.byte	0x53
 3258 0329 00000000 		.4byte	0
 3259 032d 00000000 		.4byte	0
 3260              	.LLST20:
 3261 0331 00000000 		.4byte	.LVL71
 3262 0335 0A000000 		.4byte	.LVL72
 3263 0339 0100     		.2byte	0x1
 3264 033b 50       		.byte	0x50
 3265 033c 0A000000 		.4byte	.LVL72
 3266 0340 18000000 		.4byte	.LFE14
 3267 0344 0400     		.2byte	0x4
 3268 0346 F3       		.byte	0xf3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 103


 3269 0347 01       		.uleb128 0x1
 3270 0348 50       		.byte	0x50
 3271 0349 9F       		.byte	0x9f
 3272 034a 00000000 		.4byte	0
 3273 034e 00000000 		.4byte	0
 3274              	.LLST21:
 3275 0352 00000000 		.4byte	.LVL74
 3276 0356 0A000000 		.4byte	.LVL75
 3277 035a 0100     		.2byte	0x1
 3278 035c 50       		.byte	0x50
 3279 035d 0A000000 		.4byte	.LVL75
 3280 0361 16000000 		.4byte	.LVL77
 3281 0365 0400     		.2byte	0x4
 3282 0367 F3       		.byte	0xf3
 3283 0368 01       		.uleb128 0x1
 3284 0369 50       		.byte	0x50
 3285 036a 9F       		.byte	0x9f
 3286 036b 16000000 		.4byte	.LVL77
 3287 036f 18000000 		.4byte	.LVL78
 3288 0373 0100     		.2byte	0x1
 3289 0375 50       		.byte	0x50
 3290 0376 18000000 		.4byte	.LVL78
 3291 037a 20000000 		.4byte	.LFE16
 3292 037e 0400     		.2byte	0x4
 3293 0380 F3       		.byte	0xf3
 3294 0381 01       		.uleb128 0x1
 3295 0382 50       		.byte	0x50
 3296 0383 9F       		.byte	0x9f
 3297 0384 00000000 		.4byte	0
 3298 0388 00000000 		.4byte	0
 3299              	.LLST22:
 3300 038c 00000000 		.4byte	.LVL74
 3301 0390 14000000 		.4byte	.LVL76
 3302 0394 0200     		.2byte	0x2
 3303 0396 30       		.byte	0x30
 3304 0397 9F       		.byte	0x9f
 3305 0398 14000000 		.4byte	.LVL76
 3306 039c 16000000 		.4byte	.LVL77
 3307 03a0 0100     		.2byte	0x1
 3308 03a2 50       		.byte	0x50
 3309 03a3 16000000 		.4byte	.LVL77
 3310 03a7 18000000 		.4byte	.LVL78
 3311 03ab 0200     		.2byte	0x2
 3312 03ad 30       		.byte	0x30
 3313 03ae 9F       		.byte	0x9f
 3314 03af 18000000 		.4byte	.LVL78
 3315 03b3 20000000 		.4byte	.LFE16
 3316 03b7 0100     		.2byte	0x1
 3317 03b9 50       		.byte	0x50
 3318 03ba 00000000 		.4byte	0
 3319 03be 00000000 		.4byte	0
 3320              	.LLST23:
 3321 03c2 00000000 		.4byte	.LVL80
 3322 03c6 10000000 		.4byte	.LVL81
 3323 03ca 0200     		.2byte	0x2
 3324 03cc 30       		.byte	0x30
 3325 03cd 9F       		.byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 104


 3326 03ce 10000000 		.4byte	.LVL81
 3327 03d2 18000000 		.4byte	.LFE18
 3328 03d6 0100     		.2byte	0x1
 3329 03d8 50       		.byte	0x50
 3330 03d9 00000000 		.4byte	0
 3331 03dd 00000000 		.4byte	0
 3332              		.section	.debug_aranges,"",%progbits
 3333 0000 C4000000 		.4byte	0xc4
 3334 0004 0200     		.2byte	0x2
 3335 0006 00000000 		.4byte	.Ldebug_info0
 3336 000a 04       		.byte	0x4
 3337 000b 00       		.byte	0
 3338 000c 0000     		.2byte	0
 3339 000e 0000     		.2byte	0
 3340 0010 00000000 		.4byte	.LFB1
 3341 0014 2C010000 		.4byte	.LFE1-.LFB1
 3342 0018 00000000 		.4byte	.LFB2
 3343 001c B4000000 		.4byte	.LFE2-.LFB2
 3344 0020 00000000 		.4byte	.LFB0
 3345 0024 24000000 		.4byte	.LFE0-.LFB0
 3346 0028 00000000 		.4byte	.LFB3
 3347 002c 4C000000 		.4byte	.LFE3-.LFB3
 3348 0030 00000000 		.4byte	.LFB4
 3349 0034 B4000000 		.4byte	.LFE4-.LFB4
 3350 0038 00000000 		.4byte	.LFB5
 3351 003c 20000000 		.4byte	.LFE5-.LFB5
 3352 0040 00000000 		.4byte	.LFB6
 3353 0044 0C000000 		.4byte	.LFE6-.LFB6
 3354 0048 00000000 		.4byte	.LFB7
 3355 004c 20000000 		.4byte	.LFE7-.LFB7
 3356 0050 00000000 		.4byte	.LFB8
 3357 0054 0C000000 		.4byte	.LFE8-.LFB8
 3358 0058 00000000 		.4byte	.LFB9
 3359 005c 14000000 		.4byte	.LFE9-.LFB9
 3360 0060 00000000 		.4byte	.LFB10
 3361 0064 28000000 		.4byte	.LFE10-.LFB10
 3362 0068 00000000 		.4byte	.LFB11
 3363 006c 94000000 		.4byte	.LFE11-.LFB11
 3364 0070 00000000 		.4byte	.LFB13
 3365 0074 2C000000 		.4byte	.LFE13-.LFB13
 3366 0078 00000000 		.4byte	.LFB12
 3367 007c 50000000 		.4byte	.LFE12-.LFB12
 3368 0080 00000000 		.4byte	.LFB14
 3369 0084 18000000 		.4byte	.LFE14-.LFB14
 3370 0088 00000000 		.4byte	.LFB15
 3371 008c 0C000000 		.4byte	.LFE15-.LFB15
 3372 0090 00000000 		.4byte	.LFB16
 3373 0094 20000000 		.4byte	.LFE16-.LFB16
 3374 0098 00000000 		.4byte	.LFB17
 3375 009c 20000000 		.4byte	.LFE17-.LFB17
 3376 00a0 00000000 		.4byte	.LFB18
 3377 00a4 18000000 		.4byte	.LFE18-.LFB18
 3378 00a8 00000000 		.4byte	.LFB19
 3379 00ac 10000000 		.4byte	.LFE19-.LFB19
 3380 00b0 00000000 		.4byte	.LFB20
 3381 00b4 10000000 		.4byte	.LFE20-.LFB20
 3382 00b8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 105


 3383 00bc 10000000 		.4byte	.LFE21-.LFB21
 3384 00c0 00000000 		.4byte	0
 3385 00c4 00000000 		.4byte	0
 3386              		.section	.debug_ranges,"",%progbits
 3387              	.Ldebug_ranges0:
 3388 0000 52000000 		.4byte	.LBB2
 3389 0004 62000000 		.4byte	.LBE2
 3390 0008 64000000 		.4byte	.LBB3
 3391 000c 68000000 		.4byte	.LBE3
 3392 0010 00000000 		.4byte	0
 3393 0014 00000000 		.4byte	0
 3394 0018 00000000 		.4byte	.LFB1
 3395 001c 2C010000 		.4byte	.LFE1
 3396 0020 00000000 		.4byte	.LFB2
 3397 0024 B4000000 		.4byte	.LFE2
 3398 0028 00000000 		.4byte	.LFB0
 3399 002c 24000000 		.4byte	.LFE0
 3400 0030 00000000 		.4byte	.LFB3
 3401 0034 4C000000 		.4byte	.LFE3
 3402 0038 00000000 		.4byte	.LFB4
 3403 003c B4000000 		.4byte	.LFE4
 3404 0040 00000000 		.4byte	.LFB5
 3405 0044 20000000 		.4byte	.LFE5
 3406 0048 00000000 		.4byte	.LFB6
 3407 004c 0C000000 		.4byte	.LFE6
 3408 0050 00000000 		.4byte	.LFB7
 3409 0054 20000000 		.4byte	.LFE7
 3410 0058 00000000 		.4byte	.LFB8
 3411 005c 0C000000 		.4byte	.LFE8
 3412 0060 00000000 		.4byte	.LFB9
 3413 0064 14000000 		.4byte	.LFE9
 3414 0068 00000000 		.4byte	.LFB10
 3415 006c 28000000 		.4byte	.LFE10
 3416 0070 00000000 		.4byte	.LFB11
 3417 0074 94000000 		.4byte	.LFE11
 3418 0078 00000000 		.4byte	.LFB13
 3419 007c 2C000000 		.4byte	.LFE13
 3420 0080 00000000 		.4byte	.LFB12
 3421 0084 50000000 		.4byte	.LFE12
 3422 0088 00000000 		.4byte	.LFB14
 3423 008c 18000000 		.4byte	.LFE14
 3424 0090 00000000 		.4byte	.LFB15
 3425 0094 0C000000 		.4byte	.LFE15
 3426 0098 00000000 		.4byte	.LFB16
 3427 009c 20000000 		.4byte	.LFE16
 3428 00a0 00000000 		.4byte	.LFB17
 3429 00a4 20000000 		.4byte	.LFE17
 3430 00a8 00000000 		.4byte	.LFB18
 3431 00ac 18000000 		.4byte	.LFE18
 3432 00b0 00000000 		.4byte	.LFB19
 3433 00b4 10000000 		.4byte	.LFE19
 3434 00b8 00000000 		.4byte	.LFB20
 3435 00bc 10000000 		.4byte	.LFE20
 3436 00c0 00000000 		.4byte	.LFB21
 3437 00c4 10000000 		.4byte	.LFE21
 3438 00c8 00000000 		.4byte	0
 3439 00cc 00000000 		.4byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 106


 3440              		.section	.debug_line,"",%progbits
 3441              	.Ldebug_line0:
 3442 0000 C4020000 		.section	.debug_str,"MS",%progbits,1
 3442      02006D00 
 3442      00000201 
 3442      FB0E0D00 
 3442      01010101 
 3443              	.LASF10:
 3444 0000 75696E74 		.ascii	"uint16\000"
 3444      313600
 3445              	.LASF94:
 3446 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 3446      69744372 
 3446      69746963 
 3446      616C5365 
 3446      6374696F 
 3447              	.LASF48:
 3448 001d 5553425F 		.ascii	"USB_InitComponent\000"
 3448      496E6974 
 3448      436F6D70 
 3448      6F6E656E 
 3448      7400
 3449              	.LASF68:
 3450 002f 5553425F 		.ascii	"USB_DisableOutEP\000"
 3450      44697361 
 3450      626C654F 
 3450      75744550 
 3450      00
 3451              	.LASF84:
 3452 0040 5553425F 		.ascii	"USB_configuration\000"
 3452      636F6E66 
 3452      69677572 
 3452      6174696F 
 3452      6E00
 3453              	.LASF91:
 3454 0052 5553425F 		.ascii	"USB_lastPacketSize\000"
 3454      6C617374 
 3454      5061636B 
 3454      65745369 
 3454      7A6500
 3455              	.LASF83:
 3456 0065 5553425F 		.ascii	"USB_transferState\000"
 3456      7472616E 
 3456      73666572 
 3456      53746174 
 3456      6500
 3457              	.LASF7:
 3458 0077 6C6F6E67 		.ascii	"long long unsigned int\000"
 3458      206C6F6E 
 3458      6720756E 
 3458      7369676E 
 3458      65642069 
 3459              	.LASF23:
 3460 008e 61646472 		.ascii	"addr\000"
 3460      00
 3461              	.LASF33:
 3462 0093 65704366 		.ascii	"epCfg\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 107


 3462      6700
 3463              	.LASF88:
 3464 0099 5553425F 		.ascii	"USB_interfaceSetting\000"
 3464      696E7465 
 3464      72666163 
 3464      65536574 
 3464      74696E67 
 3465              	.LASF28:
 3466 00ae 545F5553 		.ascii	"T_USB_EP_CTL_BLOCK\000"
 3466      425F4550 
 3466      5F43544C 
 3466      5F424C4F 
 3466      434B00
 3467              	.LASF79:
 3468 00c1 5553425F 		.ascii	"USB_EnableSofInt\000"
 3468      456E6162 
 3468      6C65536F 
 3468      66496E74 
 3468      00
 3469              	.LASF60:
 3470 00d2 65704E75 		.ascii	"epNumber\000"
 3470      6D626572 
 3470      00
 3471              	.LASF52:
 3472 00db 5553425F 		.ascii	"USB_Stop\000"
 3472      53746F70 
 3472      00
 3473              	.LASF49:
 3474 00e4 64657669 		.ascii	"device\000"
 3474      636500
 3475              	.LASF6:
 3476 00eb 6C6F6E67 		.ascii	"long long int\000"
 3476      206C6F6E 
 3476      6720696E 
 3476      7400
 3477              	.LASF0:
 3478 00f9 7369676E 		.ascii	"signed char\000"
 3478      65642063 
 3478      68617200 
 3479              	.LASF66:
 3480 0105 5553425F 		.ascii	"USB_EnableOutEP\000"
 3480      456E6162 
 3480      6C654F75 
 3480      74455000 
 3481              	.LASF74:
 3482 0115 5553425F 		.ascii	"USB_RWUEnabled\000"
 3482      52575545 
 3482      6E61626C 
 3482      656400
 3483              	.LASF62:
 3484 0124 636E7472 		.ascii	"cntr\000"
 3484      00
 3485              	.LASF4:
 3486 0129 6C6F6E67 		.ascii	"long int\000"
 3486      20696E74 
 3486      00
 3487              	.LASF77:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 108


 3488 0132 5553425F 		.ascii	"USB_GetDeviceAddress\000"
 3488      47657444 
 3488      65766963 
 3488      65416464 
 3488      72657373 
 3489              	.LASF100:
 3490 0147 47656E65 		.ascii	"Generated_Source\\PSoC5\\USB.c\000"
 3490      72617465 
 3490      645F536F 
 3490      75726365 
 3490      5C50536F 
 3491              	.LASF9:
 3492 0164 75696E74 		.ascii	"uint8\000"
 3492      3800
 3493              	.LASF22:
 3494 016a 6570546F 		.ascii	"epToggle\000"
 3494      67676C65 
 3494      00
 3495              	.LASF37:
 3496 0173 72775761 		.ascii	"rwWa\000"
 3496      00
 3497              	.LASF93:
 3498 0178 43794465 		.ascii	"CyDelayUs\000"
 3498      6C617955 
 3498      7300
 3499              	.LASF13:
 3500 0182 646F7562 		.ascii	"double\000"
 3500      6C6500
 3501              	.LASF73:
 3502 0189 706F7765 		.ascii	"powerStatus\000"
 3502      72537461 
 3502      74757300 
 3503              	.LASF98:
 3504 0195 5553425F 		.ascii	"USB_Dp_ClearInterrupt\000"
 3504      44705F43 
 3504      6C656172 
 3504      496E7465 
 3504      72727570 
 3505              	.LASF35:
 3506 01ab 65705372 		.ascii	"epSr\000"
 3506      00
 3507              	.LASF11:
 3508 01b0 75696E74 		.ascii	"uint32\000"
 3508      333200
 3509              	.LASF101:
 3510 01b7 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Documents\\SnyderphonicsDevK"
 3510      73657273 
 3510      5C4A6566 
 3510      66536E79 
 3510      6465725C 
 3511 01e6 69745C77 		.ascii	"it\\weston_1\\weston_1.cydsn\000"
 3511      6573746F 
 3511      6E5F315C 
 3511      77657374 
 3511      6F6E5F31 
 3512              	.LASF97:
 3513 0201 43794465 		.ascii	"CyDelayCycles\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 109


 3513      6C617943 
 3513      79636C65 
 3513      7300
 3514              	.LASF87:
 3515 020f 5553425F 		.ascii	"USB_interfaceNumber\000"
 3515      696E7465 
 3515      72666163 
 3515      654E756D 
 3515      62657200 
 3516              	.LASF64:
 3517 0223 70446174 		.ascii	"pData\000"
 3517      6100
 3518              	.LASF43:
 3519 0229 73696545 		.ascii	"sieEp\000"
 3519      7000
 3520              	.LASF24:
 3521 022f 65704D6F 		.ascii	"epMode\000"
 3521      646500
 3522              	.LASF36:
 3523 0236 72657365 		.ascii	"reserved\000"
 3523      72766564 
 3523      00
 3524              	.LASF71:
 3525 023f 5553425F 		.ascii	"USB_GetEPAckState\000"
 3525      47657445 
 3525      5041636B 
 3525      53746174 
 3525      6500
 3526              	.LASF8:
 3527 0251 756E7369 		.ascii	"unsigned int\000"
 3527      676E6564 
 3527      20696E74 
 3527      00
 3528              	.LASF5:
 3529 025e 6C6F6E67 		.ascii	"long unsigned int\000"
 3529      20756E73 
 3529      69676E65 
 3529      6420696E 
 3529      7400
 3530              	.LASF92:
 3531 0270 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3531      74657243 
 3531      72697469 
 3531      63616C53 
 3531      65637469 
 3532              	.LASF80:
 3533 0287 5553425F 		.ascii	"USB_DisableSofInt\000"
 3533      44697361 
 3533      626C6553 
 3533      6F66496E 
 3533      7400
 3534              	.LASF3:
 3535 0299 73686F72 		.ascii	"short unsigned int\000"
 3535      7420756E 
 3535      7369676E 
 3535      65642069 
 3535      6E7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 110


 3536              	.LASF96:
 3537 02ac 4379496E 		.ascii	"CyIntSetVector\000"
 3537      74536574 
 3537      56656374 
 3537      6F7200
 3538              	.LASF51:
 3539 02bb 5553425F 		.ascii	"USB_Start\000"
 3539      53746172 
 3539      7400
 3540              	.LASF45:
 3541 02c5 61726245 		.ascii	"arbEp\000"
 3541      7000
 3542              	.LASF27:
 3543 02cb 696E7465 		.ascii	"interface\000"
 3543      72666163 
 3543      6500
 3544              	.LASF54:
 3545 02d5 63723152 		.ascii	"cr1Reg\000"
 3545      656700
 3546              	.LASF16:
 3547 02dc 72656733 		.ascii	"reg32\000"
 3547      3200
 3548              	.LASF86:
 3549 02e2 5553425F 		.ascii	"USB_deviceStatus\000"
 3549      64657669 
 3549      63655374 
 3549      61747573 
 3549      00
 3550              	.LASF44:
 3551 02f3 5553425F 		.ascii	"USB_sie_eps_struct\000"
 3551      7369655F 
 3551      6570735F 
 3551      73747275 
 3551      637400
 3552              	.LASF46:
 3553 0306 5553425F 		.ascii	"USB_arb_eps_struct\000"
 3553      6172625F 
 3553      6570735F 
 3553      73747275 
 3553      637400
 3554              	.LASF21:
 3555 0319 68774570 		.ascii	"hwEpState\000"
 3555      53746174 
 3555      6500
 3556              	.LASF18:
 3557 0323 73697A65 		.ascii	"sizetype\000"
 3557      74797065 
 3557      00
 3558              	.LASF17:
 3559 032c 6C6F6E67 		.ascii	"long double\000"
 3559      20646F75 
 3559      626C6500 
 3560              	.LASF19:
 3561 0338 61747472 		.ascii	"attrib\000"
 3561      696200
 3562              	.LASF47:
 3563 033f 5553425F 		.ascii	"USB_Init\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 111


 3563      496E6974 
 3563      00
 3564              	.LASF72:
 3565 0348 5553425F 		.ascii	"USB_SetPowerStatus\000"
 3565      53657450 
 3565      6F776572 
 3565      53746174 
 3565      757300
 3566              	.LASF82:
 3567 035b 5553425F 		.ascii	"USB_device\000"
 3567      64657669 
 3567      636500
 3568              	.LASF40:
 3569 0366 72775261 		.ascii	"rwRaMsb\000"
 3569      4D736200 
 3570              	.LASF63:
 3571 036e 5553425F 		.ascii	"USB_LoadInEP\000"
 3571      4C6F6164 
 3571      496E4550 
 3571      00
 3572              	.LASF29:
 3573 037b 6570436E 		.ascii	"epCnt0\000"
 3573      743000
 3574              	.LASF30:
 3575 0382 6570436E 		.ascii	"epCnt1\000"
 3575      743100
 3576              	.LASF90:
 3577 0389 5553425F 		.ascii	"USB_EP\000"
 3577      455000
 3578              	.LASF95:
 3579 0390 4379496E 		.ascii	"CyIntSetPriority\000"
 3579      74536574 
 3579      5072696F 
 3579      72697479 
 3579      00
 3580              	.LASF31:
 3581 03a1 65704372 		.ascii	"epCr0\000"
 3581      3000
 3582              	.LASF12:
 3583 03a7 666C6F61 		.ascii	"float\000"
 3583      7400
 3584              	.LASF20:
 3585 03ad 61706945 		.ascii	"apiEpState\000"
 3585      70537461 
 3585      746500
 3586              	.LASF89:
 3587 03b8 5553425F 		.ascii	"USB_deviceAddress\000"
 3587      64657669 
 3587      63654164 
 3587      64726573 
 3587      7300
 3588              	.LASF76:
 3589 03ca 5553425F 		.ascii	"USB_GetConfiguration\000"
 3589      47657443 
 3589      6F6E6669 
 3589      67757261 
 3589      74696F6E 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 112


 3590              	.LASF42:
 3591 03df 5553425F 		.ascii	"USB_arb_ep_struct\000"
 3591      6172625F 
 3591      65705F73 
 3591      74727563 
 3591      7400
 3592              	.LASF15:
 3593 03f1 72656738 		.ascii	"reg8\000"
 3593      00
 3594              	.LASF55:
 3595 03f6 5553425F 		.ascii	"USB_CheckActivity\000"
 3595      43686563 
 3595      6B416374 
 3595      69766974 
 3595      7900
 3596              	.LASF1:
 3597 0408 756E7369 		.ascii	"unsigned char\000"
 3597      676E6564 
 3597      20636861 
 3597      7200
 3598              	.LASF57:
 3599 0416 5553425F 		.ascii	"USB_GetInterfaceSetting\000"
 3599      47657449 
 3599      6E746572 
 3599      66616365 
 3599      53657474 
 3600              	.LASF2:
 3601 042e 73686F72 		.ascii	"short int\000"
 3601      7420696E 
 3601      7400
 3602              	.LASF78:
 3603 0438 5553425F 		.ascii	"USB_ReInitComponent\000"
 3603      5265496E 
 3603      6974436F 
 3603      6D706F6E 
 3603      656E7400 
 3604              	.LASF81:
 3605 044c 5553425F 		.ascii	"USB_initVar\000"
 3605      696E6974 
 3605      56617200 
 3606              	.LASF67:
 3607 0458 5553425F 		.ascii	"USB_ReadOutEP\000"
 3607      52656164 
 3607      4F757445 
 3607      5000
 3608              	.LASF39:
 3609 0466 72775261 		.ascii	"rwRa\000"
 3609      00
 3610              	.LASF99:
 3611 046b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3611      43313120 
 3611      352E342E 
 3611      31203230 
 3611      31363036 
 3612 049e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3612      20726576 
 3612      6973696F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 113


 3612      6E203233 
 3612      37373135 
 3613 04d1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3613      66756E63 
 3613      74696F6E 
 3613      2D736563 
 3613      74696F6E 
 3614              	.LASF38:
 3615 04f9 72775761 		.ascii	"rwWaMsb\000"
 3615      4D736200 
 3616              	.LASF56:
 3617 0501 5553425F 		.ascii	"USB_IsConfigurationChanged\000"
 3617      4973436F 
 3617      6E666967 
 3617      75726174 
 3617      696F6E43 
 3618              	.LASF69:
 3619 051c 5553425F 		.ascii	"USB_Force\000"
 3619      466F7263 
 3619      6500
 3620              	.LASF70:
 3621 0526 62537461 		.ascii	"bState\000"
 3621      746500
 3622              	.LASF65:
 3623 052d 6C656E67 		.ascii	"length\000"
 3623      746800
 3624              	.LASF14:
 3625 0534 63686172 		.ascii	"char\000"
 3625      00
 3626              	.LASF50:
 3627 0539 6D6F6465 		.ascii	"mode\000"
 3627      00
 3628              	.LASF26:
 3629 053e 62756666 		.ascii	"bufferSize\000"
 3629      65725369 
 3629      7A6500
 3630              	.LASF25:
 3631 0549 62756666 		.ascii	"buffOffset\000"
 3631      4F666673 
 3631      657400
 3632              	.LASF58:
 3633 0554 696E7465 		.ascii	"interfaceNumber\000"
 3633      72666163 
 3633      654E756D 
 3633      62657200 
 3634              	.LASF59:
 3635 0564 5553425F 		.ascii	"USB_GetEPState\000"
 3635      47657445 
 3635      50537461 
 3635      746500
 3636              	.LASF32:
 3637 0573 5553425F 		.ascii	"USB_sie_ep_struct\000"
 3637      7369655F 
 3637      65705F73 
 3637      74727563 
 3637      7400
 3638              	.LASF53:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccsFeaWw.s 			page 114


 3639 0585 656E6162 		.ascii	"enableInterrupts\000"
 3639      6C65496E 
 3639      74657272 
 3639      75707473 
 3639      00
 3640              	.LASF41:
 3641 0596 72774472 		.ascii	"rwDr\000"
 3641      00
 3642              	.LASF34:
 3643 059b 6570496E 		.ascii	"epIntEn\000"
 3643      74456E00 
 3644              	.LASF61:
 3645 05a3 5553425F 		.ascii	"USB_GetEPCount\000"
 3645      47657445 
 3645      50436F75 
 3645      6E7400
 3646              	.LASF85:
 3647 05b2 5553425F 		.ascii	"USB_configurationChanged\000"
 3647      636F6E66 
 3647      69677572 
 3647      6174696F 
 3647      6E436861 
 3648              	.LASF75:
 3649 05cb 72657375 		.ascii	"result\000"
 3649      6C7400
 3650              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
