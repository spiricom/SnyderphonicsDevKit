ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_BaseInit
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_BaseInit, %function
  25              	CapSense_BaseInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   | \
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 2


  31:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  50:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_CSHL.c ****     13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 13u, 
  54:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_CSHL.c ****     10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 
  58:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_CSHL.c ****     3u, 3u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u,
  62:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u,
  66:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  70:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  71:Generated_Source\PSoC5/CapSense_CSHL.c ****     2u, /* Button2__BTN */
  72:Generated_Source\PSoC5/CapSense_CSHL.c ****     3u, /* Button3__BTN */
  73:Generated_Source\PSoC5/CapSense_CSHL.c ****     4u, /* Button4__BTN */
  74:Generated_Source\PSoC5/CapSense_CSHL.c ****     5u, /* Button5__BTN */
  75:Generated_Source\PSoC5/CapSense_CSHL.c ****     6u, /* Button6__BTN */
  76:Generated_Source\PSoC5/CapSense_CSHL.c ****     7u, /* Button7__BTN */
  77:Generated_Source\PSoC5/CapSense_CSHL.c ****     8u, /* Button8__BTN */
  78:Generated_Source\PSoC5/CapSense_CSHL.c ****     9u, /* Button9__BTN */
  79:Generated_Source\PSoC5/CapSense_CSHL.c ****     10u, /* Button10__BTN */
  80:Generated_Source\PSoC5/CapSense_CSHL.c ****     11u, /* Button11__BTN */
  81:Generated_Source\PSoC5/CapSense_CSHL.c ****     12u, /* Button12__BTN */
  82:Generated_Source\PSoC5/CapSense_CSHL.c ****     13u, /* Button13__BTN */
  83:Generated_Source\PSoC5/CapSense_CSHL.c ****     14u, /* Button14__BTN */
  84:Generated_Source\PSoC5/CapSense_CSHL.c ****     15u, /* Button15__BTN */
  85:Generated_Source\PSoC5/CapSense_CSHL.c ****     16u, /* Button16__BTN */
  86:Generated_Source\PSoC5/CapSense_CSHL.c ****     17u, /* Button17__BTN */
  87:Generated_Source\PSoC5/CapSense_CSHL.c ****     18u, /* Button18__BTN */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 3


  88:Generated_Source\PSoC5/CapSense_CSHL.c ****     19u, /* Button19__BTN */
  89:Generated_Source\PSoC5/CapSense_CSHL.c ****     20u, /* Button20__BTN */
  90:Generated_Source\PSoC5/CapSense_CSHL.c ****     21u, /* Button21__BTN */
  91:Generated_Source\PSoC5/CapSense_CSHL.c ****     22u, /* Button22__BTN */
  92:Generated_Source\PSoC5/CapSense_CSHL.c ****     23u, /* Button23__BTN */
  93:Generated_Source\PSoC5/CapSense_CSHL.c ****     24u, /* Button24__BTN */
  94:Generated_Source\PSoC5/CapSense_CSHL.c ****     25u, /* Button25__BTN */
  95:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  96:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  97:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  98:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
  99:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button0__BTN */
 100:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 101:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button2__BTN */
 102:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button3__BTN */
 103:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button4__BTN */
 104:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button5__BTN */
 105:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button6__BTN */
 106:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button7__BTN */
 107:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button8__BTN */
 108:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button9__BTN */
 109:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button10__BTN */
 110:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button11__BTN */
 111:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button12__BTN */
 112:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button13__BTN */
 113:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button14__BTN */
 114:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button15__BTN */
 115:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button16__BTN */
 116:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button17__BTN */
 117:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button18__BTN */
 118:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button19__BTN */
 119:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button20__BTN */
 120:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button21__BTN */
 121:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button22__BTN */
 122:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button23__BTN */
 123:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button24__BTN */
 124:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button25__BTN */
 125:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 126:Generated_Source\PSoC5/CapSense_CSHL.c **** };
 127:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 128:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 129:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 130:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 131:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 132:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 133:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 134:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 135:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 136:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 137:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
 138:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 139:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 140:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
 141:Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
 142:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 143:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 144:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 4


 145:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 146:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 147:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 148:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 149:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 150:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 151:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 152:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 153:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 154:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 155:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 156:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 157:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 158:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 159:Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 160:Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 161:Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 162:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 163:Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 164:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 165:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 166:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 167:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 168:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 169:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 170:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 171:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor) 
 172:Generated_Source\PSoC5/CapSense_CSHL.c **** {
  28              		.loc 1 172 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 10B4     		push	{r4}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 4, -4
 173:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 174:Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 175:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  37              		.loc 1 175 0
  38 0002 0B4B     		ldr	r3, .L3
  39 0004 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
  40              	.LVL1:
 176:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 177:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 178:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 179:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 180:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 181:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 182:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 183:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 184:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 185:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 186:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 187:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 188:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 5


 189:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  41              		.loc 1 189 0
  42 0006 0B4B     		ldr	r3, .L3+4
  43 0008 33F81030 		ldrh	r3, [r3, r0, lsl #1]
  44 000c 0A49     		ldr	r1, .L3+8
  45 000e 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
 190:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  46              		.loc 1 190 0
  47 0012 0021     		movs	r1, #0
  48 0014 094C     		ldr	r4, .L3+12
  49 0016 2154     		strb	r1, [r4, r0]
 191:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  50              		.loc 1 191 0
  51 0018 094C     		ldr	r4, .L3+16
  52 001a 24F81010 		strh	r1, [r4, r0, lsl #1]	@ movhi
 192:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 193:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  53              		.loc 1 193 0
  54 001e 0949     		ldr	r1, .L3+20
  55 0020 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
  56 0022 0949     		ldr	r1, .L3+24
  57 0024 8C54     		strb	r4, [r1, r2]
 194:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 195:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 196:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) |\
 197:Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 198:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 199:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 200:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 201:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 202:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) |\
 203:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) |\
 204:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) |\
 205:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) |\
 206:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 207:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 208:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  58              		.loc 1 208 0
  59 0026 094A     		ldr	r2, .L3+28
  60              	.LVL2:
  61 0028 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
 209:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 210:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 211:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 212:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
 213:Generated_Source\PSoC5/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 214:Generated_Source\PSoC5/CapSense_CSHL.c ****             */
 215:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 216:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 217:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 218:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 219:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 220:Generated_Source\PSoC5/CapSense_CSHL.c **** }
  62              		.loc 1 220 0
  63 002c 10BC     		pop	{r4}
  64              		.cfi_restore 4
  65              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 6


  66 002e 7047     		bx	lr
  67              	.L4:
  68              		.align	2
  69              	.L3:
  70 0030 00000000 		.word	CapSense_widgetNumber
  71 0034 00000000 		.word	CapSense_sensorRaw
  72 0038 00000000 		.word	CapSense_sensorBaseline
  73 003c 00000000 		.word	CapSense_sensorBaselineLow
  74 0040 00000000 		.word	CapSense_sensorSignal
  75 0044 00000000 		.word	.LANCHOR0
  76 0048 00000000 		.word	.LANCHOR1
  77 004c 00000000 		.word	CapSense_rawFilterData1
  78              		.cfi_endproc
  79              	.LFE0:
  80              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  81              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  82              		.align	2
  83              		.global	CapSense_InitializeSensorBaseline
  84              		.thumb
  85              		.thumb_func
  86              		.type	CapSense_InitializeSensorBaseline, %function
  87              	CapSense_InitializeSensorBaseline:
  88              	.LFB1:
 221:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 222:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 223:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 224:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 225:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 226:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 227:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 228:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 229:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 230:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 231:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 232:Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 233:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 234:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 235:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 236:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 237:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 238:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 239:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 240:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 241:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 242:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 243:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 244:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 245:Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 246:Generated_Source\PSoC5/CapSense_CSHL.c **** {
  89              		.loc 1 246 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL3:
  94 0000 10B5     		push	{r4, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 4, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 7


  97              		.cfi_offset 14, -4
  98 0002 0446     		mov	r4, r0
 247:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 248:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  99              		.loc 1 248 0
 100 0004 FFF7FEFF 		bl	CapSense_ScanSensor
 101              	.LVL4:
 102              	.L6:
 249:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 103              		.loc 1 249 0 discriminator 1
 104 0008 FFF7FEFF 		bl	CapSense_IsBusy
 105              	.LVL5:
 106 000c 0028     		cmp	r0, #0
 107 000e FBD1     		bne	.L6
 250:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 251:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 252:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 253:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 254:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 255:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 256:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
 108              		.loc 1 256 0
 109 0010 2046     		mov	r0, r4
 110 0012 FFF7FEFF 		bl	CapSense_BaseInit
 111              	.LVL6:
 112 0016 10BD     		pop	{r4, pc}
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 116              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 117              		.align	2
 118              		.global	CapSense_InitializeAllBaselines
 119              		.thumb
 120              		.thumb_func
 121              		.type	CapSense_InitializeAllBaselines, %function
 122              	CapSense_InitializeAllBaselines:
 123              	.LFB2:
 257:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 258:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 259:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 260:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 261:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 262:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 263:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 264:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 265:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 266:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 267:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 268:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 269:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 270:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 271:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 272:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 273:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 274:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 275:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 276:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 8


 277:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 278:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 279:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 280:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 281:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 282:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 283:Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 284:Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 285:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 286:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 287:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 288:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 289:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 290:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 291:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 292:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 293:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 294:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 295:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 296:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 297:Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 298:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 124              		.loc 1 298 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 10B5     		push	{r4, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132              	.LVL7:
 299:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 300:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 301:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 302:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 133              		.loc 1 302 0
 134 0002 0024     		movs	r4, #0
 135 0004 04E0     		b	.L9
 136              	.LVL8:
 137              	.L10:
 303:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 304:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 138              		.loc 1 304 0 discriminator 3
 139 0006 2046     		mov	r0, r4
 140 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 141              	.LVL9:
 302:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 142              		.loc 1 302 0 discriminator 3
 143 000c 0134     		adds	r4, r4, #1
 144              	.LVL10:
 145 000e E4B2     		uxtb	r4, r4
 146              	.LVL11:
 147              	.L9:
 302:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 148              		.loc 1 302 0 is_stmt 0 discriminator 1
 149 0010 192C     		cmp	r4, #25
 150 0012 F8D9     		bls	.L10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 9


 305:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 306:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 151              		.loc 1 306 0 is_stmt 1
 152 0014 10BD     		pop	{r4, pc}
 153              		.cfi_endproc
 154              	.LFE2:
 155              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 156 0016 00BF     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 157              		.align	2
 158              		.global	CapSense_InitializeEnabledBaselines
 159              		.thumb
 160              		.thumb_func
 161              		.type	CapSense_InitializeEnabledBaselines, %function
 162              	CapSense_InitializeEnabledBaselines:
 163              	.LFB3:
 307:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 308:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 309:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 310:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 311:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 312:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 313:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 314:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 315:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 316:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 317:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 318:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 319:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 320:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 321:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 322:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 323:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 324:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 325:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 326:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 327:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 328:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 329:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 330:Generated_Source\PSoC5/CapSense_CSHL.c ****                              
 331:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 164              		.loc 1 331 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 10B5     		push	{r4, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
 332:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 333:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 334:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 335:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 336:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 172              		.loc 1 336 0
 173 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 174              	.LVL12:
 175              	.L13:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 10


 337:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 176              		.loc 1 337 0 discriminator 1
 177 0006 FFF7FEFF 		bl	CapSense_IsBusy
 178              	.LVL13:
 179 000a 0028     		cmp	r0, #0
 180 000c FBD1     		bne	.L13
 181 000e 0024     		movs	r4, #0
 182 0010 11E0     		b	.L14
 183              	.LVL14:
 184              	.L16:
 338:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 339:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 340:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 341:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 342:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 343:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 344:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 185              		.loc 1 344 0
 186 0012 E208     		lsrs	r2, r4, #3
 345:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 187              		.loc 1 345 0
 188 0014 04F00701 		and	r1, r4, #7
 189 0018 0123     		movs	r3, #1
 190 001a 8B40     		lsls	r3, r3, r1
 191              	.LVL15:
 346:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 347:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 348:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) == 0u)
 192              		.loc 1 348 0
 193 001c 0749     		ldr	r1, .L18
 194 001e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 195 0020 1342     		tst	r3, r2
 196 0022 03D1     		bne	.L15
 349:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 350:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorRaw[i] = 0u;
 197              		.loc 1 350 0
 198 0024 0022     		movs	r2, #0
 199 0026 064B     		ldr	r3, .L18+4
 200              	.LVL16:
 201 0028 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 202              	.L15:
 351:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 352:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 353:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 354:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
 203              		.loc 1 354 0 discriminator 2
 204 002c 2046     		mov	r0, r4
 205 002e FFF7FEFF 		bl	CapSense_BaseInit
 206              	.LVL17:
 342:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 207              		.loc 1 342 0 discriminator 2
 208 0032 0134     		adds	r4, r4, #1
 209              	.LVL18:
 210 0034 E4B2     		uxtb	r4, r4
 211              	.LVL19:
 212              	.L14:
 342:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 11


 213              		.loc 1 342 0 is_stmt 0 discriminator 1
 214 0036 192C     		cmp	r4, #25
 215 0038 EBD9     		bls	.L16
 355:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 356:Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 216              		.loc 1 356 0 is_stmt 1
 217 003a 10BD     		pop	{r4, pc}
 218              	.LVL20:
 219              	.L19:
 220              		.align	2
 221              	.L18:
 222 003c 00000000 		.word	CapSense_sensorEnableMask
 223 0040 00000000 		.word	CapSense_sensorRaw
 224              		.cfi_endproc
 225              	.LFE3:
 226              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 227              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 228              		.align	2
 229              		.global	CapSense_CheckIsSensorActive
 230              		.thumb
 231              		.thumb_func
 232              		.type	CapSense_CheckIsSensorActive, %function
 233              	CapSense_CheckIsSensorActive:
 234              	.LFB6:
 357:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 358:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 359:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 360:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 361:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 362:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 363:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 364:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 365:Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 366:Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 367:Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 368:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 369:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 370:Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 371:Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 372:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 373:Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 374:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 375:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 376:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 377:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 378:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 379:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 380:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 381:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 382:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 383:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 384:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 385:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 386:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 387:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 388:Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 389:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 12


 390:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 391:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 392:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 393:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 394:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 395:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 396:Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 397:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 398:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 399:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 400:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 401:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
 402:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 403:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 noiseThreshold = CapSense_noiseThreshold[widget];
 404:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 405:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 406:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 407:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 408:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 409:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 410:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 411:Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 412:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 413:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 414:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 415:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 416:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 417:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 418:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 419:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 420:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 421:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 422:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 423:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 424:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 425:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 426:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 427:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 428:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 429:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 430:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 431:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 432:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 433:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 434:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 435:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 436:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 437:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 438:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 439:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 440:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 441:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 442:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 443:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 444:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 445:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 446:Generated_Source\PSoC5/CapSense_CSHL.c ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 13


 447:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 448:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 449:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 450:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 451:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 452:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 453:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 454:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 455:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 456:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
 457:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 458:Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 459:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 460:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 461:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 462:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 463:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 464:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 465:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 466:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 467:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 468:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 469:Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 470:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 471:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 472:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 473:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 474:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 475:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 476:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 477:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 478:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 479:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 480:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 481:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 482:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 483:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 484:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 485:Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 486:Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 487:Generated_Source\PSoC5/CapSense_CSHL.c ****                    && (widget == 0u)))
 488:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 489:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 490:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 491:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 492:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 493:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 494:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 495:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
 496:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 497:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 498:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 499:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 500:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 501:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 502:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 503:Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 14


 504:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 505:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 506:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 507:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 508:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 509:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 510:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 511:Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 512:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 513:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 514:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 515:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 516:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 517:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 518:Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 519:Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 520:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 521:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 522:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 523:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 524:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 525:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 526:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 527:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 528:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 529:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 530:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 531:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 532:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 533:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 534:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 535:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 536:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 537:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 538:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 539:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 540:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 542:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 543:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 544:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 545:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 546:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 547:Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 548:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 549:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 550:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 551:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 552:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 553:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 554:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 555:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 556:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 557:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 558:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 559:Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 560:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 15


 561:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 562:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 563:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 564:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 565:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 566:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 567:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 568:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 569:Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 570:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 571:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 572:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 573:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 574:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 575:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 576:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 577:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 578:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 579:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 580:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) != 0u)
 581:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 582:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 583:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 584:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 585:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 586:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 587:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 588:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 589:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 590:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 591:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 592:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 593:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 594:Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 595:Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 596:Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 597:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 598:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 599:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
 600:Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
 601:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 602:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 603:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 604:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 605:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 606:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 607:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 608:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 609:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 610:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 611:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 612:Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 613:Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 614:Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 615:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store sensors on/off state.
 616:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
 617:Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 16


 618:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 619:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 620:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 621:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 622:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 623:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 624:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 625:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 626:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 627:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 628:Generated_Source\PSoC5/CapSense_CSHL.c ****                                   
 629:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 235              		.loc 1 629 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL21:
 240 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 241              		.cfi_def_cfa_offset 20
 242              		.cfi_offset 4, -20
 243              		.cfi_offset 5, -16
 244              		.cfi_offset 6, -12
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 630:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 631:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 632:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 247              		.loc 1 632 0
 248 0002 C408     		lsrs	r4, r0, #3
 249              	.LVL22:
 633:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 250              		.loc 1 633 0
 251 0004 00F00702 		and	r2, r0, #7
 252 0008 0123     		movs	r3, #1
 253 000a 9340     		lsls	r3, r3, r2
 254 000c DBB2     		uxtb	r3, r3
 255              	.LVL23:
 634:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 635:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 256              		.loc 1 635 0
 257 000e 1A4A     		ldr	r2, .L27
 258 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 636:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 fingerThreshold = CapSense_fingerThreshold[widget];
 259              		.loc 1 636 0
 260 0012 1A4D     		ldr	r5, .L27+4
 261 0014 05EB4206 		add	r6, r5, r2, lsl #1
 262 0018 B78B     		ldrh	r7, [r6, #28]
 263              	.LVL24:
 637:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 hysteresis = CapSense_hysteresis[widget];
 264              		.loc 1 637 0
 265 001a B6F85010 		ldrh	r1, [r6, #80]
 266              	.LVL25:
 638:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 267              		.loc 1 638 0
 268 001e AE5C     		ldrb	r6, [r5, r2]	@ zero_extendqisi2
 269              	.LVL26:
 639:Generated_Source\PSoC5/CapSense_CSHL.c ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 17


 640:Generated_Source\PSoC5/CapSense_CSHL.c ****     debounceIndex = widget;
 641:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 642:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 643:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 644:Generated_Source\PSoC5/CapSense_CSHL.c ****     if (0u != (CapSense_sensorOnMask[pos] & onMask))
 270              		.loc 1 644 0
 271 0020 174D     		ldr	r5, .L27+8
 272 0022 2D5D     		ldrb	r5, [r5, r4]	@ zero_extendqisi2
 273 0024 2B42     		tst	r3, r5
 274 0026 0DD0     		beq	.L21
 645:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 646:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 647:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 275              		.loc 1 647 0
 276 0028 DFF85CE0 		ldr	lr, .L27+16
 277 002c 3EF81000 		ldrh	r0, [lr, r0, lsl #1]
 278              	.LVL27:
 279 0030 791A     		subs	r1, r7, r1
 280              	.LVL28:
 281 0032 8842     		cmp	r0, r1
 282 0034 1ADA     		bge	.L22
 648:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 649:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorOnMask[pos] &= (uint8)~onMask;
 283              		.loc 1 649 0
 284 0036 25EA0305 		bic	r5, r5, r3
 285 003a 1149     		ldr	r1, .L27+8
 286 003c 0D55     		strb	r5, [r1, r4]
 650:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 287              		.loc 1 650 0
 288 003e 1149     		ldr	r1, .L27+12
 289 0040 8E54     		strb	r6, [r1, r2]
 290 0042 13E0     		b	.L22
 291              	.LVL29:
 292              	.L21:
 651:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 652:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 653:Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 654:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 655:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 656:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 293              		.loc 1 656 0
 294 0044 DFF840E0 		ldr	lr, .L27+16
 295 0048 3EF81000 		ldrh	r0, [lr, r0, lsl #1]
 296              	.LVL30:
 297 004c 3944     		add	r1, r1, r7
 298              	.LVL31:
 299 004e 8842     		cmp	r0, r1
 300 0050 0ADD     		ble	.L23
 657:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 658:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 659:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex] <= 1u)
 301              		.loc 1 659 0
 302 0052 0C49     		ldr	r1, .L27+12
 303 0054 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 304 0056 0129     		cmp	r1, #1
 305 0058 02D8     		bhi	.L24
 660:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 18


 661:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorOnMask[pos] |= onMask; 
 306              		.loc 1 661 0
 307 005a 1D43     		orrs	r5, r5, r3
 308 005c 0848     		ldr	r0, .L27+8
 309 005e 0555     		strb	r5, [r0, r4]
 310              	.L24:
 662:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 663:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 311              		.loc 1 663 0
 312 0060 0139     		subs	r1, r1, #1
 313 0062 0848     		ldr	r0, .L27+12
 314 0064 8154     		strb	r1, [r0, r2]
 315 0066 01E0     		b	.L22
 316              	.L23:
 664:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 665:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 666:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 667:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 668:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 317              		.loc 1 668 0
 318 0068 0649     		ldr	r1, .L27+12
 319 006a 8E54     		strb	r6, [r1, r2]
 320              	.L22:
 669:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 670:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 671:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 672:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (((CapSense_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 321              		.loc 1 672 0
 322 006c 044A     		ldr	r2, .L27+8
 323              	.LVL32:
 324 006e 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 325 0070 1840     		ands	r0, r3, r0
 326 0072 00D0     		beq	.L25
 327 0074 0120     		movs	r0, #1
 328              	.L25:
 673:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 329              		.loc 1 673 0 discriminator 4
 330 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 331              	.LVL33:
 332              	.L28:
 333              		.align	2
 334              	.L27:
 335 0078 00000000 		.word	CapSense_widgetNumber
 336 007c 00000000 		.word	.LANCHOR0
 337 0080 00000000 		.word	CapSense_sensorOnMask
 338 0084 00000000 		.word	.LANCHOR1
 339 0088 00000000 		.word	CapSense_sensorSignal
 340              		.cfi_endproc
 341              	.LFE6:
 342              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 343              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 344              		.align	2
 345              		.global	CapSense_CheckIsWidgetActive
 346              		.thumb
 347              		.thumb_func
 348              		.type	CapSense_CheckIsWidgetActive, %function
 349              	CapSense_CheckIsWidgetActive:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 19


 350              	.LFB7:
 674:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 675:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 676:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 677:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 678:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 679:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 680:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 681:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
 682:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] for all sensors within the widget.
 683:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 684:Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 685:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 686:Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 687:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 688:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 689:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 690:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 691:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 692:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 693:Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 694:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 695:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 696:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 697:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 698:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 699:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 700:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 701:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 351              		.loc 1 701 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              	.LVL34:
 356 0000 70B5     		push	{r4, r5, r6, lr}
 357              		.cfi_def_cfa_offset 16
 358              		.cfi_offset 4, -16
 359              		.cfi_offset 5, -12
 360              		.cfi_offset 6, -8
 361              		.cfi_offset 14, -4
 702:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 362              		.loc 1 702 0
 363 0002 094B     		ldr	r3, .L34
 364 0004 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 365              	.LVL35:
 703:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 366              		.loc 1 703 0
 367 0006 1844     		add	r0, r0, r3
 368              	.LVL36:
 369 0008 057F     		ldrb	r5, [r0, #28]	@ zero_extendqisi2
 370 000a 2544     		add	r5, r5, r4
 371 000c EDB2     		uxtb	r5, r5
 372              	.LVL37:
 704:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 373              		.loc 1 704 0
 374 000e 0026     		movs	r6, #0
 375              	.LVL38:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 20


 376              	.L31:
 705:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 706:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 707:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 708:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 709:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 377              		.loc 1 709 0
 378 0010 2046     		mov	r0, r4
 379 0012 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 380              	.LVL39:
 381 0016 00B1     		cbz	r0, .L30
 710:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 711:Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 382              		.loc 1 711 0
 383 0018 0126     		movs	r6, #1
 384              	.LVL40:
 385              	.L30:
 712:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 713:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 386              		.loc 1 713 0
 387 001a 0134     		adds	r4, r4, #1
 388              	.LVL41:
 389 001c E4B2     		uxtb	r4, r4
 390              	.LVL42:
 714:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 715:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 391              		.loc 1 715 0
 392 001e A542     		cmp	r5, r4
 393 0020 F6D8     		bhi	.L31
 716:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 717:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 718:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 719:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 720:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 394              		.loc 1 720 0
 395 0022 3046     		mov	r0, r6
 396 0024 70BD     		pop	{r4, r5, r6, pc}
 397              	.LVL43:
 398              	.L35:
 399 0026 00BF     		.align	2
 400              	.L34:
 401 0028 00000000 		.word	.LANCHOR2
 402              		.cfi_endproc
 403              	.LFE7:
 404              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 405              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 406              		.align	2
 407              		.global	CapSense_CheckIsAnyWidgetActive
 408              		.thumb
 409              		.thumb_func
 410              		.type	CapSense_CheckIsAnyWidgetActive, %function
 411              	CapSense_CheckIsAnyWidgetActive:
 412              	.LFB8:
 721:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 722:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 723:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 724:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 21


 725:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 726:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 727:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 728:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_signal[] array to their finger 
 729:Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 730:Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 731:Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 732:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 733:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 734:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 735:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 736:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 737:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 738:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 739:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 740:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 741:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 742:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 744:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 745:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 413              		.loc 1 745 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 38B5     		push	{r3, r4, r5, lr}
 418              		.cfi_def_cfa_offset 16
 419              		.cfi_offset 3, -16
 420              		.cfi_offset 4, -12
 421              		.cfi_offset 5, -8
 422              		.cfi_offset 14, -4
 423              	.LVL44:
 746:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 747:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 424              		.loc 1 747 0
 425 0002 0025     		movs	r5, #0
 748:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 749:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 426              		.loc 1 749 0
 427 0004 2C46     		mov	r4, r5
 428 0006 06E0     		b	.L37
 429              	.LVL45:
 430              	.L39:
 750:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 751:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 431              		.loc 1 751 0
 432 0008 2046     		mov	r0, r4
 433 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 434              	.LVL46:
 435 000e 00B1     		cbz	r0, .L38
 752:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 753:Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 436              		.loc 1 753 0
 437 0010 0125     		movs	r5, #1
 438              	.LVL47:
 439              	.L38:
 749:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 22


 440              		.loc 1 749 0 discriminator 2
 441 0012 0134     		adds	r4, r4, #1
 442              	.LVL48:
 443 0014 E4B2     		uxtb	r4, r4
 444              	.LVL49:
 445              	.L37:
 749:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 446              		.loc 1 749 0 is_stmt 0 discriminator 1
 447 0016 192C     		cmp	r4, #25
 448 0018 F6D9     		bls	.L39
 754:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 755:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 756:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 757:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 758:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 759:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 449              		.loc 1 759 0 is_stmt 1
 450 001a 2846     		mov	r0, r5
 451 001c 38BD     		pop	{r3, r4, r5, pc}
 452              		.cfi_endproc
 453              	.LFE8:
 454              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 455 001e 00BF     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 456              		.align	2
 457              		.global	CapSense_EnableWidget
 458              		.thumb
 459              		.thumb_func
 460              		.type	CapSense_EnableWidget, %function
 461              	CapSense_EnableWidget:
 462              	.LFB9:
 760:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 761:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 762:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 763:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 764:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 765:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 766:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 767:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 768:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 769:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 770:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 771:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 772:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 773:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 774:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 775:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 776:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 777:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 778:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 779:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 780:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 781:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 782:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 783:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 784:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 785:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 786:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 23


 787:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 788:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 789:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 790:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    
 791:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 463              		.loc 1 791 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              	.LVL50:
 469 0000 30B4     		push	{r4, r5}
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 4, -8
 472              		.cfi_offset 5, -4
 792:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 793:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 794:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 473              		.loc 1 794 0
 474 0002 0B4A     		ldr	r2, .L45
 475 0004 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 476              	.LVL51:
 795:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 477              		.loc 1 795 0
 478 0006 1044     		add	r0, r0, r2
 479              	.LVL52:
 480 0008 057F     		ldrb	r5, [r0, #28]	@ zero_extendqisi2
 481 000a 1D44     		add	r5, r5, r3
 482 000c EDB2     		uxtb	r5, r5
 483              	.LVL53:
 484              	.L43:
 796:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 797:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 798:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 799:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 800:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 485              		.loc 1 800 0 discriminator 1
 486 000e D808     		lsrs	r0, r3, #3
 487              	.LVL54:
 801:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 488              		.loc 1 801 0 discriminator 1
 489 0010 03F00701 		and	r1, r3, #7
 490 0014 0122     		movs	r2, #1
 491 0016 8A40     		lsls	r2, r2, r1
 492 0018 D2B2     		uxtb	r2, r2
 493              	.LVL55:
 802:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 803:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] |= enMask;
 494              		.loc 1 803 0 discriminator 1
 495 001a 064C     		ldr	r4, .L45+4
 496 001c 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 497 001e 0A43     		orrs	r2, r2, r1
 498              	.LVL56:
 499 0020 2254     		strb	r2, [r4, r0]
 804:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 500              		.loc 1 804 0 discriminator 1
 501 0022 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 24


 502              	.LVL57:
 503 0024 DBB2     		uxtb	r3, r3
 504              	.LVL58:
 805:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 806:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 505              		.loc 1 806 0 discriminator 1
 506 0026 9D42     		cmp	r5, r3
 507 0028 F1D8     		bhi	.L43
 807:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 808:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 809:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 508              		.loc 1 809 0
 509 002a 30BC     		pop	{r4, r5}
 510              		.cfi_restore 5
 511              		.cfi_restore 4
 512              		.cfi_def_cfa_offset 0
 513              	.LVL59:
 514 002c 7047     		bx	lr
 515              	.L46:
 516 002e 00BF     		.align	2
 517              	.L45:
 518 0030 00000000 		.word	.LANCHOR2
 519 0034 00000000 		.word	CapSense_sensorEnableMask
 520              		.cfi_endproc
 521              	.LFE9:
 522              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 523              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 524              		.align	2
 525              		.global	CapSense_DisableWidget
 526              		.thumb
 527              		.thumb_func
 528              		.type	CapSense_DisableWidget, %function
 529              	CapSense_DisableWidget:
 530              	.LFB10:
 810:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 811:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 812:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 813:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
 814:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 815:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 816:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 817:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 818:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 819:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 820:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 821:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 822:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 823:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 824:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 825:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 826:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 827:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 828:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 829:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 830:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 831:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 832:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 25


 833:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 834:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 835:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 836:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 837:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 838:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 839:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 840:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
 841:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 531              		.loc 1 841 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536              	.LVL60:
 537 0000 30B4     		push	{r4, r5}
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 4, -8
 540              		.cfi_offset 5, -4
 842:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 843:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 844:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 541              		.loc 1 844 0
 542 0002 0B4A     		ldr	r2, .L50
 543 0004 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 544              	.LVL61:
 845:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 545              		.loc 1 845 0
 546 0006 1044     		add	r0, r0, r2
 547              	.LVL62:
 548 0008 057F     		ldrb	r5, [r0, #28]	@ zero_extendqisi2
 549 000a 1D44     		add	r5, r5, r3
 550 000c EDB2     		uxtb	r5, r5
 551              	.LVL63:
 552              	.L48:
 846:Generated_Source\PSoC5/CapSense_CSHL.c ****    
 847:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 848:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 849:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 850:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 553              		.loc 1 850 0 discriminator 1
 554 000e D808     		lsrs	r0, r3, #3
 555              	.LVL64:
 851:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 556              		.loc 1 851 0 discriminator 1
 557 0010 03F00701 		and	r1, r3, #7
 558 0014 0122     		movs	r2, #1
 559 0016 8A40     		lsls	r2, r2, r1
 560 0018 D2B2     		uxtb	r2, r2
 561              	.LVL65:
 852:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 853:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] &= (uint8)~enMask;
 562              		.loc 1 853 0 discriminator 1
 563 001a 064C     		ldr	r4, .L50+4
 564 001c 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 565 001e 21EA0202 		bic	r2, r1, r2
 566              	.LVL66:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 26


 567 0022 2254     		strb	r2, [r4, r0]
 854:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 568              		.loc 1 854 0 discriminator 1
 569 0024 0133     		adds	r3, r3, #1
 570              	.LVL67:
 571 0026 DBB2     		uxtb	r3, r3
 572              	.LVL68:
 855:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 856:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 573              		.loc 1 856 0 discriminator 1
 574 0028 9D42     		cmp	r5, r3
 575 002a F0D8     		bhi	.L48
 857:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 858:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 859:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 576              		.loc 1 859 0
 577 002c 30BC     		pop	{r4, r5}
 578              		.cfi_restore 5
 579              		.cfi_restore 4
 580              		.cfi_def_cfa_offset 0
 581              	.LVL69:
 582 002e 7047     		bx	lr
 583              	.L51:
 584              		.align	2
 585              	.L50:
 586 0030 00000000 		.word	.LANCHOR2
 587 0034 00000000 		.word	CapSense_sensorEnableMask
 588              		.cfi_endproc
 589              	.LFE10:
 590              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 591              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 592              		.align	2
 593              		.global	CapSense_IIR4Filter
 594              		.thumb
 595              		.thumb_func
 596              		.type	CapSense_IIR4Filter, %function
 597              	CapSense_IIR4Filter:
 598              	.LFB11:
 860:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_COUNT)
 861:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 862:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
 863:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 864:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 865:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 866:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 867:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense_SensorSignal[] within defined cenrtoid and 
 868:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 869:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  ignored.
 870:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 871:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 872:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 873:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 874:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 875:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_sensorSignal[] array.
 876:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
 877:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 878:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 27


 879:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 880:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 881:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 882:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 883:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 884:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 885:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
 886:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uint8 C
 887:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 888:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else 
 889:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
 890:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 891:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 892:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 893:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 i;
 894:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 895:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curPos = 0u;
 896:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* No centroid at the Start */
 897:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
 898:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 899:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The biggset centroid is zero */
 900:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 901:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 902:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 903:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 904:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 temp = 0u;
 905:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 *startOfSlider = &CapSense_sensorSignal[offset]; 
 906:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 907:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 908:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(diplex != 0u)
 909:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 910:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Initialize */
 911:Generated_Source\PSoC5/CapSense_CSHL.c ****                 i = 0u;
 912:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
 913:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
 914:Generated_Source\PSoC5/CapSense_CSHL.c ****                 count <<= 1u;
 915:Generated_Source\PSoC5/CapSense_CSHL.c ****                 while(1u)
 916:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
 917:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 918:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 919:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 920:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 921:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Start of centroid */
 922:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = i;
 923:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 924:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 925:Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
 926:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 927:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 928:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 929:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 930:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 931:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {          
 932:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
 933:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 934:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* We are in the end of current */
 935:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 28


 936:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 937:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 938:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 939:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 940:Generated_Source\PSoC5/CapSense_CSHL.c ****                             
 941:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize = 0u;
 942:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 943:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 944:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 945:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 946:Generated_Source\PSoC5/CapSense_CSHL.c ****                     i++; 
 947:Generated_Source\PSoC5/CapSense_CSHL.c ****                     curPos = diplex[i];
 948:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(i == count)
 949:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 950:Generated_Source\PSoC5/CapSense_CSHL.c ****                         break;
 951:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }            
 952:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 953:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 954:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 955:Generated_Source\PSoC5/CapSense_CSHL.c ****                        We are in the end of current */
 956:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 957:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 958:Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 959:Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 960:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 961:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 962:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
 963:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 964:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Without diplexing */ 
 965:Generated_Source\PSoC5/CapSense_CSHL.c ****                 biggestCtrdSize = count;
 966:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 967:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
 968:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 969:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Check centroid size */
 970:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
 971:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 972:Generated_Source\PSoC5/CapSense_CSHL.c ****             #else                    
 973:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 974:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
 975:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 976:Generated_Source\PSoC5/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 977:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 978:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
 979:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (diplex == 0u)
 980:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 981:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = i;
 982:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 983:Generated_Source\PSoC5/CapSense_CSHL.c ****                             else
 984:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 985:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = diplex[i];
 986:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                    
 987:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
 988:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curPos = diplex[i];                    
 989:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
 990:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Looking for the grater element within centroid */
 991:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 992:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 29


 993:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 994:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 995:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 maximum = i;
 996:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
 997:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 998:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 999:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1000:Generated_Source\PSoC5/CapSense_CSHL.c ****                 } 
1001:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1002:Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1003:Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
1004:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Looking for the grater element within centroid */
1005:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1006:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1007:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1008:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1009:Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
1010:Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1011:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1012:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1013:Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
1014:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1015:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (maximum);
1016:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1017:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1018:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1019:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1020:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1021:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1022:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1023:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1024:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
1025:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution.
1026:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1027:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1028:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  type:  widget type.
1029:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1030:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1031:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_SensorSignal[] array.
1032:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1033:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1034:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  API resolution.
1035:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1036:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1037:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1038:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the slider.
1039:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1040:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1041:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1042:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1043:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1044:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1045:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1046:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1047:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1048:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1049:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 30


1050:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev = 0u;
1051:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext = 0u;
1052:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT>0u)
1053:Generated_Source\PSoC5/CapSense_CSHL.c ****                
1054:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1055:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 pos;
1056:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1057:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1058:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Helps while centroid calulation */
1059:Generated_Source\PSoC5/CapSense_CSHL.c ****         static uint16 CapSense_centroid[3u];
1060:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1061:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 position;
1062:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 numerator;
1063:Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 denominator;
1064:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 *startOfSlider = &CapSense_sensorSignal[offset];
1065:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1066:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1067:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1068:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1069:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1070:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1071:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1072:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1073:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1074:Generated_Source\PSoC5/CapSense_CSHL.c ****                  
1075:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1076:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1077:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1078:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1079:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1080:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1081:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1082:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1083:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1084:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1085:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1086:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1087:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1088:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1089:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1090:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1091:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1092:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1093:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1094:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1095:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1096:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1097:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1098:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1099:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0
1100:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1101:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1102:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(diplex == 0u)
1103:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1104:Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = maximum;
1105:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1106:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 31


1107:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1108:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1109:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1110:Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1111:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1112:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1113:Generated_Source\PSoC5/CapSense_CSHL.c ****                         count <<= 1u;
1114:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }                    
1115:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1116:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1117:Generated_Source\PSoC5/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1118:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1119:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1120:Generated_Source\PSoC5/CapSense_CSHL.c ****                     count <<= 1u;                    
1121:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else                    
1122:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1123:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (maximum >= 1u)
1124:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1125:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1126:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1127:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = maximum + 1u; 
1128:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1129:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1130:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1131:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1132:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1133:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else
1134:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1135:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1136:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1137:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1138:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1139:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1140:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1141:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1142:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1143:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1144:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1145:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1146:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1147:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1148:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1149:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1150:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1151:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1152:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1153:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_COUNT>0
1154:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1155:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1156:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1157:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1158:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1159:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1160:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1161:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1162:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1163:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 32


1164:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1165:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1166:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1167:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1168:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1169:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1170:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1171:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1172:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1173:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1174:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1175:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1176:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1177:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1178:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1179:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1180:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1181:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1182:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1183:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1184:Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1185:Generated_Source\PSoC5/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1186:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1187:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1188:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1189:Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1190:Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1191:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1192:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1193:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1194:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1195:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1196:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1197:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(denominator < 0)
1198:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1199:Generated_Source\PSoC5/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1200:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1201:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1202:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1203:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1204:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1205:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Round the relust and put it to uint8 */
1206:Generated_Source\PSoC5/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1207:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1208:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1209:Generated_Source\PSoC5/CapSense_CSHL.c ****     }    
1210:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_COUNT) */
1211:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1212:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1213:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1214:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1215:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1216:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1217:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1218:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1219:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1220:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 33


1221:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1222:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1223:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1224:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1225:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1226:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1227:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_LS__"widget_name"            5
1228:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1229:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1230:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the linear slider.
1231:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1232:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1233:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1234:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1235:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1236:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1237:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1238:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1239:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1240:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1241:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1242:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1243:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1244:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1245:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1246:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1247:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1248:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1249:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1250:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint8 widget) 
1251:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1252:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1253:Generated_Source\PSoC5/CapSense_CSHL.c ****             const uint8 CYCODE *diplex;
1254:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1255:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1256:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1257:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1258:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1259:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1260:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1261:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1262:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1263:Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1264:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1265:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1266:Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1267:Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1268:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1269:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1270:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1271:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1272:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1273:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1274:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1275:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1276:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1277:Generated_Source\PSoC5/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 34


1278:Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1279:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1280:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1281:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1282:Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = 0u;
1283:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1284:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1285:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1286:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */      
1287:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1288:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], diplex)
1289:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1290:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1291:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1292:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1293:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1294:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1295:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1296:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1297:Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1298:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1299:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1300:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1301:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1302:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1303:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1304:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1305:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1306:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1307:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1308:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1309:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1310:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1311:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1312:Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1313:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1314:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1315:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1316:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1317:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1318:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1319:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1320:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1321:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1322:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1323:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1324:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1325:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1326:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1327:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1328:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1329:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1330:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1331:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1332:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1333:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1334:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 35


1335:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1336:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1337:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1338:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1339:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1340:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1341:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1342:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1343:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1344:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1345:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1346:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1347:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1348:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1349:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1350:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1351:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1352:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1353:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1354:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1355:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1356:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1357:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1358:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1359:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1360:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1361:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1362:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1363:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1364:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1365:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1366:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1367:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1368:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1369:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1370:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1371:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1372:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1373:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1374:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1375:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1376:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1377:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                                
1378:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1379:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1380:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1381:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1382:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1383:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1384:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1385:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1386:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1387:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1388:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1389:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1390:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1391:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 36


1392:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1393:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1394:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1395:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1396:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1397:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1398:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1399:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum wasn't found */
1400:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1401:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1402:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1403:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1404:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1405:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1406:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1407:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1408:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1409:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1410:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1411:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1412:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1413:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1414:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1415:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1416:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1417:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1418:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1419:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1420:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1421:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1422:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1423:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1424:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1425:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1426:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1427:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1428:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1429:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1430:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1431:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_RS_"widget_name"            5
1432:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1433:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1434:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the radial slider.
1435:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1436:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1437:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1438:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1439:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1440:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1441:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1442:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1443:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1444:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1445:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1446:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1447:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1448:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 37


1449:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1450:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1451:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1452:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1453:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1454:Generated_Source\PSoC5/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint8 widget)
1455:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
1456:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1457:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1458:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1459:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1460:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1461:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1462:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1463:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1464:Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1465:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1466:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1467:Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1468:Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1469:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1470:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1471:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1472:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1473:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1474:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1475:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */        
1476:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1477:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1478:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1479:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1480:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1481:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1482:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1483:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1484:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1485:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1486:Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1487:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1488:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1489:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1490:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1491:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1492:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1493:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1494:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1495:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1496:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1497:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1498:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1499:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1500:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1501:Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1502:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1503:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1504:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1505:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 38


1506:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1507:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1508:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1509:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1510:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1511:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1512:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1513:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1514:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1515:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1516:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1517:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1518:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1519:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1520:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1521:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1522:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1523:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1524:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1525:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1526:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1527:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
1528:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
1529:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1530:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1531:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
1532:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1533:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1534:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1535:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
1536:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1537:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1538:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1539:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1540:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
1541:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1542:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1543:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
1544:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1545:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1546:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1547:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1548:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1549:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1550:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1551:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1552:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1553:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1554:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1555:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1556:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1557:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
1558:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1559:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1560:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1561:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1562:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 39


1563:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1564:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1565:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1566:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1567:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1568:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
1569:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1570:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1571:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1572:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1573:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1574:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1575:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
1576:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
1577:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1578:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1579:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
1580:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1581:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1582:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1583:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1584:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1585:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1586:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1587:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1588:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1589:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1590:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1591:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1592:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1593:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1594:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1595:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1596:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1597:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1598:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1599:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1600:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1601:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1602:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1603:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
1604:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1605:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1606:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_COUNT > 0u)
1607:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1608:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
1609:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1610:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1611:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1612:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1613:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1614:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1615:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1616:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
1617:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1618:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  customizer.
1619:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 40


1620:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1621:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number. 
1622:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1623:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_TP_"widget_name"            5
1624:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1625:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1626:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
1627:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[0u]  - position of X
1628:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
1629:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1630:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1631:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1632:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1633:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1634:Generated_Source\PSoC5/CapSense_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1635:Generated_Source\PSoC5/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1636:Generated_Source\PSoC5/CapSense_CSHL.c ****     *   calculations.
1637:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1638:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1639:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1640:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1641:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1642:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_GetTouchCentroidPos(uint8 widget, uint16* pos)
1643:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1644:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1645:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1646:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posXIndex;
1647:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posYIndex;
1648:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1649:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1650:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1651:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1652:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1653:Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1654:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint16 tempPos;
1655:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1656:Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1657:Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1658:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1659:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maxX;
1660:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maxY;
1661:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posX;
1662:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posY;
1663:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 touch = 0u;
1664:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1665:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1666:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1667:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
1668:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1669:Generated_Source\PSoC5/CapSense_CSHL.c ****             maxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1670:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1671:Generated_Source\PSoC5/CapSense_CSHL.c ****             maxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1672:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1673:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1674:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maxX != 0xFFu)
1675:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1676:Generated_Source\PSoC5/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 41


1677:Generated_Source\PSoC5/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
1678:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1679:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
1680:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
1681:Generated_Source\PSoC5/CapSense_CSHL.c ****                 maxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
1682:Generated_Source\PSoC5/CapSense_CSHL.c ****             #else
1683:Generated_Source\PSoC5/CapSense_CSHL.c ****                 maxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
1684:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1685:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1686:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (maxY != 0xFFu)
1687:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1688:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
1689:Generated_Source\PSoC5/CapSense_CSHL.c ****                 touch = 1u;
1690:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1691:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate Y centroid */
1692:Generated_Source\PSoC5/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(maxY, offset, count, 
1693:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
1694:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1695:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate X centroid */
1696:Generated_Source\PSoC5/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
1697:Generated_Source\PSoC5/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
1698:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1699:Generated_Source\PSoC5/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(maxX, offset, count, 
1700:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
1701:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1702:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1703:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
1704:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1705:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1706:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Caluclate position to store filters data */
1707:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1708:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
1709:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1710:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
1711:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1712:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Init filters */
1713:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
1714:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
1715:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1716:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
1717:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
1718:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
1719:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1720:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1721:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1722:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1723:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1724:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
1725:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
1726:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1727:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1728:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1729:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
1730:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1731:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1732:Generated_Source\PSoC5/CapSense_CSHL.c ****                             
1733:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 42


1734:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1735:Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
1736:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1737:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Do filtering */
1738:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1739:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1740:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1741:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1742:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
1743:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1744:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1745:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1746:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1747:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1748:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1749:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1750:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
1751:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1752:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1753:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1754:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1755:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1756:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1757:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1758:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
1759:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1760:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1761:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1762:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
1763:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1764:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1765:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1766:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
1767:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1768:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1769:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1770:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1771:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1772:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1773:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1774:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
1775:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1776:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1777:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1778:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1779:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1780:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1781:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1782:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1783:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1784:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1785:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1786:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1787:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1788:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1789:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
1790:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 43


1791:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1792:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1793:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
1794:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1795:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1796:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1797:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1798:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
1799:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1800:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1801:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1802:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1803:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1804:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1805:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
1806:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1807:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1808:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1809:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
1810:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1811:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1812:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1813:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1814:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
1815:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1816:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1817:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1818:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1819:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1820:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     {
1821:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
1822:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1823:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
1824:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         
1825:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
1826:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1827:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
1828:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     }
1829:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
1830:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1831:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1832:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1833:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1834:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1835:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1836:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Save positions */
1837:Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[0u] = posX;
1838:Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[1u] = posY;
1839:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1840:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1841:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1842:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1843:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(touch == 0u)
1844:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1845:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1846:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1847:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 44


1848:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1849:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1850:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1851:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1852:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1853:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (touch);
1854:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1855:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u) */
1856:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1857:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1858:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
1859:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1860:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1861:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
1862:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1863:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1864:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1865:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Median filter function. 
1866:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1867:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  median value.
1868:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1869:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1870:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1871:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1872:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1873:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1874:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1875:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1876:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1877:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1878:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1879:Generated_Source\PSoC5/CapSense_CSHL.c ****                                          
1880:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1881:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 tmp;
1882:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1883:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x1 > x2)
1884:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1885:Generated_Source\PSoC5/CapSense_CSHL.c ****             tmp = x2;
1886:Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x1;
1887:Generated_Source\PSoC5/CapSense_CSHL.c ****             x1 = tmp;
1888:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1889:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1890:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x2 > x3)
1891:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1892:Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x3;
1893:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1894:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1895:Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1896:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1897:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
1898:Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1899:Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1900:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1901:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1902:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) | \
1903:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1904:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 45


1905:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
1906:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1907:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1908:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1909:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Averaging filter function.
1910:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1911:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  reports the averaging value.
1912:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1913:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1914:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1915:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1916:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1917:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1918:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1919:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1920:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1921:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1922:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1923:Generated_Source\PSoC5/CapSense_CSHL.c ****                                             
1924:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1925:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1926:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1927:Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1928:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1929:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) | \
1930:Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1931:Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1932:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1933:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1934:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) | \
1935:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1936:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1937:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
1938:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1939:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1940:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1941:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1942:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1943:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1944:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1945:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1946:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1947:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1948:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1949:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1950:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1951:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
1952:Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1953:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1954:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1955:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1956:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1957:Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1958:Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 1u;
1959:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1960:Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1961:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 46


1962:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) | \
1963:Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1964:Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1965:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1966:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1967:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) | \
1968:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER) )
1969:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1970:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
1971:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1972:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1973:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1974:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1975:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1976:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1977:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1978:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1979:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1980:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1981:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1982:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1983:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1984:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
1985:Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1986:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 599              		.loc 1 1986 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604              	.LVL70:
1987:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1988:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1989:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1990:Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 605              		.loc 1 1990 0
 606 0000 0844     		add	r0, r0, r1
 607              	.LVL71:
1991:Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 608              		.loc 1 1991 0
 609 0002 00EB4100 		add	r0, r0, r1, lsl #1
 610              	.LVL72:
1992:Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 2u;
1993:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1994:Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1995:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 611              		.loc 1 1995 0
 612 0006 C0F38F00 		ubfx	r0, r0, #2, #16
 613              	.LVL73:
 614 000a 7047     		bx	lr
 615              		.cfi_endproc
 616              	.LFE11:
 617              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 618              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 619              		.align	2
 620              		.global	CapSense_UpdateSensorBaseline
 621              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 47


 622              		.thumb_func
 623              		.type	CapSense_UpdateSensorBaseline, %function
 624              	CapSense_UpdateSensorBaseline:
 625              	.LFB4:
 398:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 626              		.loc 1 398 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              	.LVL74:
 631 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 632              		.cfi_def_cfa_offset 24
 633              		.cfi_offset 3, -24
 634              		.cfi_offset 4, -20
 635              		.cfi_offset 5, -16
 636              		.cfi_offset 6, -12
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 639 0002 0446     		mov	r4, r0
 402:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 noiseThreshold = CapSense_noiseThreshold[widget];
 640              		.loc 1 402 0
 641 0004 274B     		ldr	r3, .L63
 642 0006 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 643              	.LVL75:
 403:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 644              		.loc 1 403 0
 645 0008 274B     		ldr	r3, .L63+4
 646 000a 03EB4203 		add	r3, r3, r2, lsl #1
 647 000e B3F88460 		ldrh	r6, [r3, #132]
 648              	.LVL76:
 432:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 649              		.loc 1 432 0
 650 0012 264D     		ldr	r5, .L63+8
 651 0014 35F81010 		ldrh	r1, [r5, r0, lsl #1]
 652 0018 254B     		ldr	r3, .L63+12
 653 001a 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 654              	.LVL77:
 655 001e FFF7FEFF 		bl	CapSense_IIR4Filter
 656              	.LVL78:
 433:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 657              		.loc 1 433 0
 658 0022 25F81400 		strh	r0, [r5, r4, lsl #1]	@ movhi
 458:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 659              		.loc 1 458 0
 660 0026 234B     		ldr	r3, .L63+16
 661 0028 33F81420 		ldrh	r2, [r3, r4, lsl #1]
 662 002c 9042     		cmp	r0, r2
 663 002e 03D3     		bcc	.L54
 460:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 664              		.loc 1 460 0
 665 0030 851A     		subs	r5, r0, r2
 666 0032 ADB2     		uxth	r5, r5
 667              	.LVL79:
 461:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 668              		.loc 1 461 0
 669 0034 0127     		movs	r7, #1
 670 0036 02E0     		b	.L55
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 48


 671              	.LVL80:
 672              	.L54:
 465:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 673              		.loc 1 465 0
 674 0038 151A     		subs	r5, r2, r0
 675 003a ADB2     		uxth	r5, r5
 676              	.LVL81:
 466:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 677              		.loc 1 466 0
 678 003c 0027     		movs	r7, #0
 679              	.LVL82:
 680              	.L55:
 469:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 681              		.loc 1 469 0
 682 003e 87B9     		cbnz	r7, .L56
 469:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 683              		.loc 1 469 0 is_stmt 0 discriminator 1
 684 0040 142D     		cmp	r5, #20
 685 0042 0ED9     		bls	.L56
 471:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 686              		.loc 1 471 0 is_stmt 1
 687 0044 1C4B     		ldr	r3, .L63+20
 688 0046 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 689 0048 042B     		cmp	r3, #4
 690 004a 06D9     		bls	.L57
 473:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 691              		.loc 1 473 0
 692 004c 2046     		mov	r0, r4
 693              	.LVL83:
 694 004e FFF7FEFF 		bl	CapSense_BaseInit
 695              	.LVL84:
 474:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 696              		.loc 1 474 0
 697 0052 0022     		movs	r2, #0
 698 0054 184B     		ldr	r3, .L63+20
 699 0056 1A55     		strb	r2, [r3, r4]
 700 0058 17E0     		b	.L58
 701              	.LVL85:
 702              	.L57:
 478:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 703              		.loc 1 478 0
 704 005a 0133     		adds	r3, r3, #1
 705 005c 164A     		ldr	r2, .L63+20
 706 005e 1355     		strb	r3, [r2, r4]
 707 0060 13E0     		b	.L58
 708              	.L56:
 485:Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 709              		.loc 1 485 0
 710 0062 B542     		cmp	r5, r6
 711 0064 02D9     		bls	.L59
 485:Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 712              		.loc 1 485 0 is_stmt 0 discriminator 1
 713 0066 132D     		cmp	r5, #19
 714 0068 0FD8     		bhi	.L58
 487:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 715              		.loc 1 487 0 is_stmt 1
 716 006a 77B9     		cbnz	r7, .L58
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 49


 717              	.L59:
 718              	.LVL86:
 492:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 719              		.loc 1 492 0
 720 006c 1349     		ldr	r1, .L63+24
 721 006e 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 722 0070 43EA0223 		orr	r3, r3, r2, lsl #8
 723              	.LVL87:
 495:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 724              		.loc 1 495 0
 725 0074 1844     		add	r0, r0, r3
 726              	.LVL88:
 498:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 727              		.loc 1 498 0
 728 0076 801A     		subs	r0, r0, r2
 729              	.LVL89:
 501:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 730              		.loc 1 501 0
 731 0078 C0F30F22 		ubfx	r2, r0, #8, #16
 732 007c 0D4B     		ldr	r3, .L63+16
 733 007e 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 502:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 734              		.loc 1 502 0
 735 0082 0855     		strb	r0, [r1, r4]
 504:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 736              		.loc 1 504 0
 737 0084 0022     		movs	r2, #0
 738 0086 0C4B     		ldr	r3, .L63+20
 739 0088 1A55     		strb	r2, [r3, r4]
 740              	.LVL90:
 741              	.L58:
 511:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 742              		.loc 1 511 0
 743 008a B542     		cmp	r5, r6
 744 008c 04D9     		bls	.L60
 511:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 745              		.loc 1 511 0 is_stmt 0 discriminator 1
 746 008e 1FB1     		cbz	r7, .L60
 524:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 747              		.loc 1 524 0 is_stmt 1
 748 0090 0B4B     		ldr	r3, .L63+28
 749 0092 23F81450 		strh	r5, [r3, r4, lsl #1]	@ movhi
 750 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 751              	.LVL91:
 752              	.L60:
 530:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 753              		.loc 1 530 0
 754 0098 0022     		movs	r2, #0
 755 009a 094B     		ldr	r3, .L63+28
 756 009c 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 757 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 758              	.LVL92:
 759              	.L64:
 760 00a2 00BF     		.align	2
 761              	.L63:
 762 00a4 00000000 		.word	CapSense_widgetNumber
 763 00a8 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 50


 764 00ac 00000000 		.word	CapSense_rawFilterData1
 765 00b0 00000000 		.word	CapSense_sensorRaw
 766 00b4 00000000 		.word	CapSense_sensorBaseline
 767 00b8 00000000 		.word	CapSense_lowBaselineResetCnt
 768 00bc 00000000 		.word	CapSense_sensorBaselineLow
 769 00c0 00000000 		.word	CapSense_sensorSignal
 770              		.cfi_endproc
 771              	.LFE4:
 772              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 773              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 774              		.align	2
 775              		.global	CapSense_UpdateEnabledBaselines
 776              		.thumb
 777              		.thumb_func
 778              		.type	CapSense_UpdateEnabledBaselines, %function
 779              	CapSense_UpdateEnabledBaselines:
 780              	.LFB5:
 571:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 781              		.loc 1 571 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785 0000 10B5     		push	{r4, lr}
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 4, -8
 788              		.cfi_offset 14, -4
 789              	.LVL93:
 576:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 790              		.loc 1 576 0
 791 0002 0024     		movs	r4, #0
 792 0004 0DE0     		b	.L66
 793              	.LVL94:
 794              	.L68:
 578:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 795              		.loc 1 578 0
 796 0006 E208     		lsrs	r2, r4, #3
 579:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) != 0u)
 797              		.loc 1 579 0
 798 0008 04F00701 		and	r1, r4, #7
 799 000c 0123     		movs	r3, #1
 800 000e 8B40     		lsls	r3, r3, r1
 801              	.LVL95:
 580:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 802              		.loc 1 580 0
 803 0010 0549     		ldr	r1, .L70
 804 0012 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 805 0014 1342     		tst	r3, r2
 806 0016 02D0     		beq	.L67
 582:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 807              		.loc 1 582 0
 808 0018 2046     		mov	r0, r4
 809 001a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 810              	.LVL96:
 811              	.L67:
 576:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 812              		.loc 1 576 0 discriminator 2
 813 001e 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 51


 814              	.LVL97:
 815 0020 E4B2     		uxtb	r4, r4
 816              	.LVL98:
 817              	.L66:
 576:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 818              		.loc 1 576 0 is_stmt 0 discriminator 1
 819 0022 192C     		cmp	r4, #25
 820 0024 EFD9     		bls	.L68
 585:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 821              		.loc 1 585 0 is_stmt 1
 822 0026 10BD     		pop	{r4, pc}
 823              	.LVL99:
 824              	.L71:
 825              		.align	2
 826              	.L70:
 827 0028 00000000 		.word	CapSense_sensorEnableMask
 828              		.cfi_endproc
 829              	.LFE5:
 830              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 831              		.global	CapSense_numberOfSensors
 832              		.global	CapSense_rawDataIndex
 833              		.global	CapSense_debounceCounter
 834              		.global	CapSense_debounce
 835              		.global	CapSense_hysteresis
 836              		.global	CapSense_noiseThreshold
 837              		.global	CapSense_fingerThreshold
 838              		.comm	CapSense_lowBaselineResetCnt,26,4
 839              		.comm	CapSense_sensorOnMask,4,4
 840              		.comm	CapSense_sensorSignal,52,4
 841              		.comm	CapSense_sensorBaselineLow,26,4
 842              		.comm	CapSense_sensorBaseline,52,4
 843              		.comm	CapSense_rawFilterData1,52,4
 844              		.section	.rodata
 845              		.align	2
 846              		.set	.LANCHOR2,. + 0
 847              		.type	CapSense_rawDataIndex, %object
 848              		.size	CapSense_rawDataIndex, 26
 849              	CapSense_rawDataIndex:
 850 0000 00       		.byte	0
 851 0001 01       		.byte	1
 852 0002 02       		.byte	2
 853 0003 03       		.byte	3
 854 0004 04       		.byte	4
 855 0005 05       		.byte	5
 856 0006 06       		.byte	6
 857 0007 07       		.byte	7
 858 0008 08       		.byte	8
 859 0009 09       		.byte	9
 860 000a 0A       		.byte	10
 861 000b 0B       		.byte	11
 862 000c 0C       		.byte	12
 863 000d 0D       		.byte	13
 864 000e 0E       		.byte	14
 865 000f 0F       		.byte	15
 866 0010 10       		.byte	16
 867 0011 11       		.byte	17
 868 0012 12       		.byte	18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 52


 869 0013 13       		.byte	19
 870 0014 14       		.byte	20
 871 0015 15       		.byte	21
 872 0016 16       		.byte	22
 873 0017 17       		.byte	23
 874 0018 18       		.byte	24
 875 0019 19       		.byte	25
 876 001a 0000     		.space	2
 877              		.type	CapSense_numberOfSensors, %object
 878              		.size	CapSense_numberOfSensors, 26
 879              	CapSense_numberOfSensors:
 880 001c 01       		.byte	1
 881 001d 01       		.byte	1
 882 001e 01       		.byte	1
 883 001f 01       		.byte	1
 884 0020 01       		.byte	1
 885 0021 01       		.byte	1
 886 0022 01       		.byte	1
 887 0023 01       		.byte	1
 888 0024 01       		.byte	1
 889 0025 01       		.byte	1
 890 0026 01       		.byte	1
 891 0027 01       		.byte	1
 892 0028 01       		.byte	1
 893 0029 01       		.byte	1
 894 002a 01       		.byte	1
 895 002b 01       		.byte	1
 896 002c 01       		.byte	1
 897 002d 01       		.byte	1
 898 002e 01       		.byte	1
 899 002f 01       		.byte	1
 900 0030 01       		.byte	1
 901 0031 01       		.byte	1
 902 0032 01       		.byte	1
 903 0033 01       		.byte	1
 904 0034 01       		.byte	1
 905 0035 01       		.byte	1
 906              		.data
 907              		.align	2
 908              		.set	.LANCHOR0,. + 0
 909              		.type	CapSense_debounce, %object
 910              		.size	CapSense_debounce, 26
 911              	CapSense_debounce:
 912 0000 03       		.byte	3
 913 0001 03       		.byte	3
 914 0002 05       		.byte	5
 915 0003 05       		.byte	5
 916 0004 05       		.byte	5
 917 0005 05       		.byte	5
 918 0006 05       		.byte	5
 919 0007 05       		.byte	5
 920 0008 05       		.byte	5
 921 0009 05       		.byte	5
 922 000a 05       		.byte	5
 923 000b 05       		.byte	5
 924 000c 05       		.byte	5
 925 000d 05       		.byte	5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 53


 926 000e 05       		.byte	5
 927 000f 05       		.byte	5
 928 0010 05       		.byte	5
 929 0011 05       		.byte	5
 930 0012 05       		.byte	5
 931 0013 05       		.byte	5
 932 0014 05       		.byte	5
 933 0015 05       		.byte	5
 934 0016 05       		.byte	5
 935 0017 05       		.byte	5
 936 0018 05       		.byte	5
 937 0019 05       		.byte	5
 938 001a 0000     		.space	2
 939              		.type	CapSense_fingerThreshold, %object
 940              		.size	CapSense_fingerThreshold, 52
 941              	CapSense_fingerThreshold:
 942 001c 1E00     		.short	30
 943 001e 1E00     		.short	30
 944 0020 1E00     		.short	30
 945 0022 1E00     		.short	30
 946 0024 1E00     		.short	30
 947 0026 1E00     		.short	30
 948 0028 1E00     		.short	30
 949 002a 1E00     		.short	30
 950 002c 1E00     		.short	30
 951 002e 1E00     		.short	30
 952 0030 1E00     		.short	30
 953 0032 1E00     		.short	30
 954 0034 1E00     		.short	30
 955 0036 1E00     		.short	30
 956 0038 1E00     		.short	30
 957 003a 1E00     		.short	30
 958 003c 1E00     		.short	30
 959 003e 1E00     		.short	30
 960 0040 1E00     		.short	30
 961 0042 1E00     		.short	30
 962 0044 1E00     		.short	30
 963 0046 1E00     		.short	30
 964 0048 1E00     		.short	30
 965 004a 1E00     		.short	30
 966 004c 1E00     		.short	30
 967 004e 1E00     		.short	30
 968              		.type	CapSense_hysteresis, %object
 969              		.size	CapSense_hysteresis, 52
 970              	CapSense_hysteresis:
 971 0050 0A00     		.short	10
 972 0052 0A00     		.short	10
 973 0054 0A00     		.short	10
 974 0056 0A00     		.short	10
 975 0058 0A00     		.short	10
 976 005a 0A00     		.short	10
 977 005c 0A00     		.short	10
 978 005e 0A00     		.short	10
 979 0060 0A00     		.short	10
 980 0062 0A00     		.short	10
 981 0064 0A00     		.short	10
 982 0066 0A00     		.short	10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 54


 983 0068 0A00     		.short	10
 984 006a 0A00     		.short	10
 985 006c 0A00     		.short	10
 986 006e 0A00     		.short	10
 987 0070 0A00     		.short	10
 988 0072 0A00     		.short	10
 989 0074 0A00     		.short	10
 990 0076 0A00     		.short	10
 991 0078 0A00     		.short	10
 992 007a 0A00     		.short	10
 993 007c 0A00     		.short	10
 994 007e 0A00     		.short	10
 995 0080 0A00     		.short	10
 996 0082 0A00     		.short	10
 997              		.type	CapSense_noiseThreshold, %object
 998              		.size	CapSense_noiseThreshold, 52
 999              	CapSense_noiseThreshold:
 1000 0084 0D00     		.short	13
 1001 0086 0D00     		.short	13
 1002 0088 0D00     		.short	13
 1003 008a 0D00     		.short	13
 1004 008c 0D00     		.short	13
 1005 008e 0D00     		.short	13
 1006 0090 0D00     		.short	13
 1007 0092 0D00     		.short	13
 1008 0094 0D00     		.short	13
 1009 0096 0D00     		.short	13
 1010 0098 0D00     		.short	13
 1011 009a 0D00     		.short	13
 1012 009c 0D00     		.short	13
 1013 009e 0D00     		.short	13
 1014 00a0 0D00     		.short	13
 1015 00a2 0D00     		.short	13
 1016 00a4 0D00     		.short	13
 1017 00a6 0D00     		.short	13
 1018 00a8 0D00     		.short	13
 1019 00aa 0D00     		.short	13
 1020 00ac 0D00     		.short	13
 1021 00ae 0D00     		.short	13
 1022 00b0 0D00     		.short	13
 1023 00b2 0D00     		.short	13
 1024 00b4 0D00     		.short	13
 1025 00b6 0D00     		.short	13
 1026              		.bss
 1027              		.align	2
 1028              		.set	.LANCHOR1,. + 0
 1029              		.type	CapSense_debounceCounter, %object
 1030              		.size	CapSense_debounceCounter, 27
 1031              	CapSense_debounceCounter:
 1032 0000 00000000 		.space	27
 1032      00000000 
 1032      00000000 
 1032      00000000 
 1032      00000000 
 1033              		.text
 1034              	.Letext0:
 1035              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 55


 1036              		.file 3 "Generated_Source\\PSoC5\\CapSense.h"
 1037              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSHL.h"
 1038              		.section	.debug_info,"",%progbits
 1039              	.Ldebug_info0:
 1040 0000 8C060000 		.4byte	0x68c
 1041 0004 0400     		.2byte	0x4
 1042 0006 00000000 		.4byte	.Ldebug_abbrev0
 1043 000a 04       		.byte	0x4
 1044 000b 01       		.uleb128 0x1
 1045 000c 7A030000 		.4byte	.LASF63
 1046 0010 0C       		.byte	0xc
 1047 0011 B7040000 		.4byte	.LASF64
 1048 0015 49040000 		.4byte	.LASF65
 1049 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1050 001d 00000000 		.4byte	0
 1051 0021 00000000 		.4byte	.Ldebug_line0
 1052 0025 02       		.uleb128 0x2
 1053 0026 01       		.byte	0x1
 1054 0027 06       		.byte	0x6
 1055 0028 D0000000 		.4byte	.LASF0
 1056 002c 02       		.uleb128 0x2
 1057 002d 01       		.byte	0x1
 1058 002e 08       		.byte	0x8
 1059 002f 25030000 		.4byte	.LASF1
 1060 0033 02       		.uleb128 0x2
 1061 0034 02       		.byte	0x2
 1062 0035 05       		.byte	0x5
 1063 0036 62030000 		.4byte	.LASF2
 1064 003a 02       		.uleb128 0x2
 1065 003b 02       		.byte	0x2
 1066 003c 07       		.byte	0x7
 1067 003d E8010000 		.4byte	.LASF3
 1068 0041 02       		.uleb128 0x2
 1069 0042 04       		.byte	0x4
 1070 0043 05       		.byte	0x5
 1071 0044 12010000 		.4byte	.LASF4
 1072 0048 02       		.uleb128 0x2
 1073 0049 04       		.byte	0x4
 1074 004a 07       		.byte	0x7
 1075 004b A5010000 		.4byte	.LASF5
 1076 004f 02       		.uleb128 0x2
 1077 0050 08       		.byte	0x8
 1078 0051 05       		.byte	0x5
 1079 0052 C2000000 		.4byte	.LASF6
 1080 0056 02       		.uleb128 0x2
 1081 0057 08       		.byte	0x8
 1082 0058 07       		.byte	0x7
 1083 0059 51000000 		.4byte	.LASF7
 1084 005d 03       		.uleb128 0x3
 1085 005e 04       		.byte	0x4
 1086 005f 05       		.byte	0x5
 1087 0060 696E7400 		.ascii	"int\000"
 1088 0064 02       		.uleb128 0x2
 1089 0065 04       		.byte	0x4
 1090 0066 07       		.byte	0x7
 1091 0067 98010000 		.4byte	.LASF8
 1092 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 56


 1093 006c 3B010000 		.4byte	.LASF9
 1094 0070 02       		.byte	0x2
 1095 0071 E401     		.2byte	0x1e4
 1096 0073 2C000000 		.4byte	0x2c
 1097 0077 04       		.uleb128 0x4
 1098 0078 00000000 		.4byte	.LASF10
 1099 007c 02       		.byte	0x2
 1100 007d E501     		.2byte	0x1e5
 1101 007f 3A000000 		.4byte	0x3a
 1102 0083 04       		.uleb128 0x4
 1103 0084 5E010000 		.4byte	.LASF11
 1104 0088 02       		.byte	0x2
 1105 0089 E601     		.2byte	0x1e6
 1106 008b 48000000 		.4byte	0x48
 1107 008f 02       		.uleb128 0x2
 1108 0090 04       		.byte	0x4
 1109 0091 04       		.byte	0x4
 1110 0092 02030000 		.4byte	.LASF12
 1111 0096 02       		.uleb128 0x2
 1112 0097 08       		.byte	0x8
 1113 0098 04       		.byte	0x4
 1114 0099 41010000 		.4byte	.LASF13
 1115 009d 02       		.uleb128 0x2
 1116 009e 01       		.byte	0x1
 1117 009f 08       		.byte	0x8
 1118 00a0 A4040000 		.4byte	.LASF14
 1119 00a4 02       		.uleb128 0x2
 1120 00a5 08       		.byte	0x8
 1121 00a6 04       		.byte	0x4
 1122 00a7 67020000 		.4byte	.LASF15
 1123 00ab 02       		.uleb128 0x2
 1124 00ac 04       		.byte	0x4
 1125 00ad 07       		.byte	0x7
 1126 00ae 48020000 		.4byte	.LASF16
 1127 00b2 05       		.uleb128 0x5
 1128 00b3 08040000 		.4byte	.LASF17
 1129 00b7 01       		.byte	0x1
 1130 00b8 AB       		.byte	0xab
 1131 00b9 00000000 		.4byte	.LFB0
 1132 00bd 50000000 		.4byte	.LFE0-.LFB0
 1133 00c1 01       		.uleb128 0x1
 1134 00c2 9C       		.byte	0x9c
 1135 00c3 E4000000 		.4byte	0xe4
 1136 00c7 06       		.uleb128 0x6
 1137 00c8 FB010000 		.4byte	.LASF19
 1138 00cc 01       		.byte	0x1
 1139 00cd AB       		.byte	0xab
 1140 00ce 6B000000 		.4byte	0x6b
 1141 00d2 01       		.uleb128 0x1
 1142 00d3 50       		.byte	0x50
 1143 00d4 07       		.uleb128 0x7
 1144 00d5 6C030000 		.4byte	.LASF21
 1145 00d9 01       		.byte	0x1
 1146 00da AF       		.byte	0xaf
 1147 00db 6B000000 		.4byte	0x6b
 1148 00df 00000000 		.4byte	.LLST0
 1149 00e3 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 57


 1150 00e4 05       		.uleb128 0x5
 1151 00e5 73020000 		.4byte	.LASF18
 1152 00e9 01       		.byte	0x1
 1153 00ea F4       		.byte	0xf4
 1154 00eb 00000000 		.4byte	.LFB1
 1155 00ef 18000000 		.4byte	.LFE1-.LFB1
 1156 00f3 01       		.uleb128 0x1
 1157 00f4 9C       		.byte	0x9c
 1158 00f5 36010000 		.4byte	0x136
 1159 00f9 08       		.uleb128 0x8
 1160 00fa FB010000 		.4byte	.LASF19
 1161 00fe 01       		.byte	0x1
 1162 00ff F4       		.byte	0xf4
 1163 0100 6B000000 		.4byte	0x6b
 1164 0104 13000000 		.4byte	.LLST1
 1165 0108 09       		.uleb128 0x9
 1166 0109 08000000 		.4byte	.LVL4
 1167 010d 6E060000 		.4byte	0x66e
 1168 0111 1C010000 		.4byte	0x11c
 1169 0115 0A       		.uleb128 0xa
 1170 0116 01       		.uleb128 0x1
 1171 0117 50       		.byte	0x50
 1172 0118 02       		.uleb128 0x2
 1173 0119 74       		.byte	0x74
 1174 011a 00       		.sleb128 0
 1175 011b 00       		.byte	0
 1176 011c 0B       		.uleb128 0xb
 1177 011d 0C000000 		.4byte	.LVL5
 1178 0121 79060000 		.4byte	0x679
 1179 0125 0C       		.uleb128 0xc
 1180 0126 16000000 		.4byte	.LVL6
 1181 012a B2000000 		.4byte	0xb2
 1182 012e 0A       		.uleb128 0xa
 1183 012f 01       		.uleb128 0x1
 1184 0130 50       		.byte	0x50
 1185 0131 02       		.uleb128 0x2
 1186 0132 74       		.byte	0x74
 1187 0133 00       		.sleb128 0
 1188 0134 00       		.byte	0
 1189 0135 00       		.byte	0
 1190 0136 0D       		.uleb128 0xd
 1191 0137 33030000 		.4byte	.LASF20
 1192 013b 01       		.byte	0x1
 1193 013c 2801     		.2byte	0x128
 1194 013e 00000000 		.4byte	.LFB2
 1195 0142 16000000 		.4byte	.LFE2-.LFB2
 1196 0146 01       		.uleb128 0x1
 1197 0147 9C       		.byte	0x9c
 1198 0148 6B010000 		.4byte	0x16b
 1199 014c 0E       		.uleb128 0xe
 1200 014d 6900     		.ascii	"i\000"
 1201 014f 01       		.byte	0x1
 1202 0150 2B01     		.2byte	0x12b
 1203 0152 6B000000 		.4byte	0x6b
 1204 0156 34000000 		.4byte	.LLST2
 1205 015a 0C       		.uleb128 0xc
 1206 015b 0C000000 		.4byte	.LVL9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 58


 1207 015f E4000000 		.4byte	0xe4
 1208 0163 0A       		.uleb128 0xa
 1209 0164 01       		.uleb128 0x1
 1210 0165 50       		.byte	0x50
 1211 0166 02       		.uleb128 0x2
 1212 0167 74       		.byte	0x74
 1213 0168 00       		.sleb128 0
 1214 0169 00       		.byte	0
 1215 016a 00       		.byte	0
 1216 016b 0D       		.uleb128 0xd
 1217 016c 7E000000 		.4byte	.LASF22
 1218 0170 01       		.byte	0x1
 1219 0171 4901     		.2byte	0x149
 1220 0173 00000000 		.4byte	.LFB3
 1221 0177 44000000 		.4byte	.LFE3-.LFB3
 1222 017b 01       		.uleb128 0x1
 1223 017c 9C       		.byte	0x9c
 1224 017d D0010000 		.4byte	0x1d0
 1225 0181 0E       		.uleb128 0xe
 1226 0182 6900     		.ascii	"i\000"
 1227 0184 01       		.byte	0x1
 1228 0185 4C01     		.2byte	0x14c
 1229 0187 6B000000 		.4byte	0x6b
 1230 018b 5E000000 		.4byte	.LLST3
 1231 018f 0F       		.uleb128 0xf
 1232 0190 706F7300 		.ascii	"pos\000"
 1233 0194 01       		.byte	0x1
 1234 0195 4D01     		.2byte	0x14d
 1235 0197 6B000000 		.4byte	0x6b
 1236 019b 01       		.uleb128 0x1
 1237 019c 52       		.byte	0x52
 1238 019d 10       		.uleb128 0x10
 1239 019e B2020000 		.4byte	.LASF23
 1240 01a2 01       		.byte	0x1
 1241 01a3 4E01     		.2byte	0x14e
 1242 01a5 6B000000 		.4byte	0x6b
 1243 01a9 7C000000 		.4byte	.LLST4
 1244 01ad 0B       		.uleb128 0xb
 1245 01ae 06000000 		.4byte	.LVL12
 1246 01b2 84060000 		.4byte	0x684
 1247 01b6 0B       		.uleb128 0xb
 1248 01b7 0A000000 		.4byte	.LVL13
 1249 01bb 79060000 		.4byte	0x679
 1250 01bf 0C       		.uleb128 0xc
 1251 01c0 32000000 		.4byte	.LVL17
 1252 01c4 B2000000 		.4byte	0xb2
 1253 01c8 0A       		.uleb128 0xa
 1254 01c9 01       		.uleb128 0x1
 1255 01ca 50       		.byte	0x50
 1256 01cb 02       		.uleb128 0x2
 1257 01cc 74       		.byte	0x74
 1258 01cd 00       		.sleb128 0
 1259 01ce 00       		.byte	0
 1260 01cf 00       		.byte	0
 1261 01d0 11       		.uleb128 0x11
 1262 01d1 95020000 		.4byte	.LASF29
 1263 01d5 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 59


 1264 01d6 7302     		.2byte	0x273
 1265 01d8 6B000000 		.4byte	0x6b
 1266 01dc 00000000 		.4byte	.LFB6
 1267 01e0 8C000000 		.4byte	.LFE6-.LFB6
 1268 01e4 01       		.uleb128 0x1
 1269 01e5 9C       		.byte	0x9c
 1270 01e6 61020000 		.4byte	0x261
 1271 01ea 12       		.uleb128 0x12
 1272 01eb FB010000 		.4byte	.LASF19
 1273 01ef 01       		.byte	0x1
 1274 01f0 7302     		.2byte	0x273
 1275 01f2 6B000000 		.4byte	0x6b
 1276 01f6 B1000000 		.4byte	.LLST5
 1277 01fa 13       		.uleb128 0x13
 1278 01fb A9040000 		.4byte	.LASF25
 1279 01ff 01       		.byte	0x1
 1280 0200 7602     		.2byte	0x276
 1281 0202 6B000000 		.4byte	0x6b
 1282 0206 0E       		.uleb128 0xe
 1283 0207 706F7300 		.ascii	"pos\000"
 1284 020b 01       		.byte	0x1
 1285 020c 7802     		.2byte	0x278
 1286 020e 6B000000 		.4byte	0x6b
 1287 0212 EB000000 		.4byte	.LLST6
 1288 0216 14       		.uleb128 0x14
 1289 0217 73030000 		.4byte	.LASF24
 1290 021b 01       		.byte	0x1
 1291 021c 7902     		.2byte	0x279
 1292 021e 6B000000 		.4byte	0x6b
 1293 0222 01       		.uleb128 0x1
 1294 0223 53       		.byte	0x53
 1295 0224 13       		.uleb128 0x13
 1296 0225 6C030000 		.4byte	.LASF21
 1297 0229 01       		.byte	0x1
 1298 022a 7B02     		.2byte	0x27b
 1299 022c 6B000000 		.4byte	0x6b
 1300 0230 10       		.uleb128 0x10
 1301 0231 41000000 		.4byte	.LASF26
 1302 0235 01       		.byte	0x1
 1303 0236 7C02     		.2byte	0x27c
 1304 0238 77000000 		.4byte	0x77
 1305 023c FE000000 		.4byte	.LLST7
 1306 0240 10       		.uleb128 0x10
 1307 0241 65010000 		.4byte	.LASF27
 1308 0245 01       		.byte	0x1
 1309 0246 7D02     		.2byte	0x27d
 1310 0248 77000000 		.4byte	0x77
 1311 024c 11010000 		.4byte	.LLST8
 1312 0250 10       		.uleb128 0x10
 1313 0251 3F020000 		.4byte	.LASF28
 1314 0255 01       		.byte	0x1
 1315 0256 7E02     		.2byte	0x27e
 1316 0258 6B000000 		.4byte	0x6b
 1317 025c 57010000 		.4byte	.LLST9
 1318 0260 00       		.byte	0
 1319 0261 11       		.uleb128 0x11
 1320 0262 08030000 		.4byte	.LASF30
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 60


 1321 0266 01       		.byte	0x1
 1322 0267 BB02     		.2byte	0x2bb
 1323 0269 6B000000 		.4byte	0x6b
 1324 026d 00000000 		.4byte	.LFB7
 1325 0271 2C000000 		.4byte	.LFE7-.LFB7
 1326 0275 01       		.uleb128 0x1
 1327 0276 9C       		.byte	0x9c
 1328 0277 CC020000 		.4byte	0x2cc
 1329 027b 12       		.uleb128 0x12
 1330 027c 6C030000 		.4byte	.LASF21
 1331 0280 01       		.byte	0x1
 1332 0281 BB02     		.2byte	0x2bb
 1333 0283 6B000000 		.4byte	0x6b
 1334 0287 6A010000 		.4byte	.LLST10
 1335 028b 10       		.uleb128 0x10
 1336 028c F3000000 		.4byte	.LASF31
 1337 0290 01       		.byte	0x1
 1338 0291 BE02     		.2byte	0x2be
 1339 0293 6B000000 		.4byte	0x6b
 1340 0297 8B010000 		.4byte	.LLST11
 1341 029b 10       		.uleb128 0x10
 1342 029c FC000000 		.4byte	.LASF32
 1343 02a0 01       		.byte	0x1
 1344 02a1 BF02     		.2byte	0x2bf
 1345 02a3 6B000000 		.4byte	0x6b
 1346 02a7 A9010000 		.4byte	.LLST12
 1347 02ab 10       		.uleb128 0x10
 1348 02ac 0C010000 		.4byte	.LASF33
 1349 02b0 01       		.byte	0x1
 1350 02b1 C002     		.2byte	0x2c0
 1351 02b3 6B000000 		.4byte	0x6b
 1352 02b7 BC010000 		.4byte	.LLST13
 1353 02bb 0C       		.uleb128 0xc
 1354 02bc 16000000 		.4byte	.LVL39
 1355 02c0 D0010000 		.4byte	0x1d0
 1356 02c4 0A       		.uleb128 0xa
 1357 02c5 01       		.uleb128 0x1
 1358 02c6 50       		.byte	0x50
 1359 02c7 02       		.uleb128 0x2
 1360 02c8 74       		.byte	0x74
 1361 02c9 00       		.sleb128 0
 1362 02ca 00       		.byte	0
 1363 02cb 00       		.byte	0
 1364 02cc 11       		.uleb128 0x11
 1365 02cd 1B010000 		.4byte	.LASF34
 1366 02d1 01       		.byte	0x1
 1367 02d2 E702     		.2byte	0x2e7
 1368 02d4 6B000000 		.4byte	0x6b
 1369 02d8 00000000 		.4byte	.LFB8
 1370 02dc 1E000000 		.4byte	.LFE8-.LFB8
 1371 02e0 01       		.uleb128 0x1
 1372 02e1 9C       		.byte	0x9c
 1373 02e2 15030000 		.4byte	0x315
 1374 02e6 0E       		.uleb128 0xe
 1375 02e7 6900     		.ascii	"i\000"
 1376 02e9 01       		.byte	0x1
 1377 02ea EA02     		.2byte	0x2ea
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 61


 1378 02ec 6B000000 		.4byte	0x6b
 1379 02f0 DB010000 		.4byte	.LLST14
 1380 02f4 10       		.uleb128 0x10
 1381 02f5 0C010000 		.4byte	.LASF33
 1382 02f9 01       		.byte	0x1
 1383 02fa EB02     		.2byte	0x2eb
 1384 02fc 6B000000 		.4byte	0x6b
 1385 0300 05020000 		.4byte	.LLST15
 1386 0304 0C       		.uleb128 0xc
 1387 0305 0E000000 		.4byte	.LVL46
 1388 0309 61020000 		.4byte	0x261
 1389 030d 0A       		.uleb128 0xa
 1390 030e 01       		.uleb128 0x1
 1391 030f 50       		.byte	0x50
 1392 0310 02       		.uleb128 0x2
 1393 0311 74       		.byte	0x74
 1394 0312 00       		.sleb128 0
 1395 0313 00       		.byte	0
 1396 0314 00       		.byte	0
 1397 0315 0D       		.uleb128 0xd
 1398 0316 51020000 		.4byte	.LASF35
 1399 031a 01       		.byte	0x1
 1400 031b 1503     		.2byte	0x315
 1401 031d 00000000 		.4byte	.LFB9
 1402 0321 38000000 		.4byte	.LFE9-.LFB9
 1403 0325 01       		.uleb128 0x1
 1404 0326 9C       		.byte	0x9c
 1405 0327 7A030000 		.4byte	0x37a
 1406 032b 12       		.uleb128 0x12
 1407 032c 6C030000 		.4byte	.LASF21
 1408 0330 01       		.byte	0x1
 1409 0331 1503     		.2byte	0x315
 1410 0333 6B000000 		.4byte	0x6b
 1411 0337 24020000 		.4byte	.LLST16
 1412 033b 0F       		.uleb128 0xf
 1413 033c 706F7300 		.ascii	"pos\000"
 1414 0340 01       		.byte	0x1
 1415 0341 1803     		.2byte	0x318
 1416 0343 6B000000 		.4byte	0x6b
 1417 0347 01       		.uleb128 0x1
 1418 0348 50       		.byte	0x50
 1419 0349 10       		.uleb128 0x10
 1420 034a B2020000 		.4byte	.LASF23
 1421 034e 01       		.byte	0x1
 1422 034f 1903     		.2byte	0x319
 1423 0351 6B000000 		.4byte	0x6b
 1424 0355 45020000 		.4byte	.LLST17
 1425 0359 10       		.uleb128 0x10
 1426 035a F3000000 		.4byte	.LASF31
 1427 035e 01       		.byte	0x1
 1428 035f 1A03     		.2byte	0x31a
 1429 0361 6B000000 		.4byte	0x6b
 1430 0365 7A020000 		.4byte	.LLST18
 1431 0369 10       		.uleb128 0x10
 1432 036a FC000000 		.4byte	.LASF32
 1433 036e 01       		.byte	0x1
 1434 036f 1B03     		.2byte	0x31b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 62


 1435 0371 6B000000 		.4byte	0x6b
 1436 0375 98020000 		.4byte	.LLST19
 1437 0379 00       		.byte	0
 1438 037a 0D       		.uleb128 0xd
 1439 037b DC000000 		.4byte	.LASF36
 1440 037f 01       		.byte	0x1
 1441 0380 4703     		.2byte	0x347
 1442 0382 00000000 		.4byte	.LFB10
 1443 0386 38000000 		.4byte	.LFE10-.LFB10
 1444 038a 01       		.uleb128 0x1
 1445 038b 9C       		.byte	0x9c
 1446 038c DF030000 		.4byte	0x3df
 1447 0390 12       		.uleb128 0x12
 1448 0391 6C030000 		.4byte	.LASF21
 1449 0395 01       		.byte	0x1
 1450 0396 4703     		.2byte	0x347
 1451 0398 6B000000 		.4byte	0x6b
 1452 039c AB020000 		.4byte	.LLST20
 1453 03a0 0F       		.uleb128 0xf
 1454 03a1 706F7300 		.ascii	"pos\000"
 1455 03a5 01       		.byte	0x1
 1456 03a6 4A03     		.2byte	0x34a
 1457 03a8 6B000000 		.4byte	0x6b
 1458 03ac 01       		.uleb128 0x1
 1459 03ad 50       		.byte	0x50
 1460 03ae 10       		.uleb128 0x10
 1461 03af B2020000 		.4byte	.LASF23
 1462 03b3 01       		.byte	0x1
 1463 03b4 4B03     		.2byte	0x34b
 1464 03b6 6B000000 		.4byte	0x6b
 1465 03ba CC020000 		.4byte	.LLST21
 1466 03be 10       		.uleb128 0x10
 1467 03bf F3000000 		.4byte	.LASF31
 1468 03c3 01       		.byte	0x1
 1469 03c4 4C03     		.2byte	0x34c
 1470 03c6 6B000000 		.4byte	0x6b
 1471 03ca 01030000 		.4byte	.LLST22
 1472 03ce 10       		.uleb128 0x10
 1473 03cf FC000000 		.4byte	.LASF32
 1474 03d3 01       		.byte	0x1
 1475 03d4 4D03     		.2byte	0x34d
 1476 03d6 6B000000 		.4byte	0x6b
 1477 03da 1F030000 		.4byte	.LLST23
 1478 03de 00       		.byte	0
 1479 03df 11       		.uleb128 0x11
 1480 03e0 70010000 		.4byte	.LASF37
 1481 03e4 01       		.byte	0x1
 1482 03e5 C007     		.2byte	0x7c0
 1483 03e7 77000000 		.4byte	0x77
 1484 03eb 00000000 		.4byte	.LFB11
 1485 03ef 0C000000 		.4byte	.LFE11-.LFB11
 1486 03f3 01       		.uleb128 0x1
 1487 03f4 9C       		.byte	0x9c
 1488 03f5 26040000 		.4byte	0x426
 1489 03f9 15       		.uleb128 0x15
 1490 03fa 783100   		.ascii	"x1\000"
 1491 03fd 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 63


 1492 03fe C007     		.2byte	0x7c0
 1493 0400 77000000 		.4byte	0x77
 1494 0404 32030000 		.4byte	.LLST24
 1495 0408 16       		.uleb128 0x16
 1496 0409 783200   		.ascii	"x2\000"
 1497 040c 01       		.byte	0x1
 1498 040d C007     		.2byte	0x7c0
 1499 040f 77000000 		.4byte	0x77
 1500 0413 01       		.uleb128 0x1
 1501 0414 51       		.byte	0x51
 1502 0415 0E       		.uleb128 0xe
 1503 0416 746D7000 		.ascii	"tmp\000"
 1504 041a 01       		.byte	0x1
 1505 041b C307     		.2byte	0x7c3
 1506 041d 83000000 		.4byte	0x83
 1507 0421 53030000 		.4byte	.LLST25
 1508 0425 00       		.byte	0
 1509 0426 0D       		.uleb128 0xd
 1510 0427 1C020000 		.4byte	.LASF38
 1511 042b 01       		.byte	0x1
 1512 042c 8C01     		.2byte	0x18c
 1513 042e 00000000 		.4byte	.LFB4
 1514 0432 C4000000 		.4byte	.LFE4-.LFB4
 1515 0436 01       		.uleb128 0x1
 1516 0437 9C       		.byte	0x9c
 1517 0438 B6040000 		.4byte	0x4b6
 1518 043c 12       		.uleb128 0x12
 1519 043d FB010000 		.4byte	.LASF19
 1520 0441 01       		.byte	0x1
 1521 0442 8C01     		.2byte	0x18c
 1522 0444 6B000000 		.4byte	0x6b
 1523 0448 75030000 		.4byte	.LLST26
 1524 044c 10       		.uleb128 0x10
 1525 044d 3A020000 		.4byte	.LASF39
 1526 0451 01       		.byte	0x1
 1527 0452 8F01     		.2byte	0x18f
 1528 0454 83000000 		.4byte	0x83
 1529 0458 96030000 		.4byte	.LLST27
 1530 045c 10       		.uleb128 0x10
 1531 045d 26050000 		.4byte	.LASF40
 1532 0461 01       		.byte	0x1
 1533 0462 9001     		.2byte	0x190
 1534 0464 77000000 		.4byte	0x77
 1535 0468 C3030000 		.4byte	.LLST28
 1536 046c 10       		.uleb128 0x10
 1537 046d 07000000 		.4byte	.LASF41
 1538 0471 01       		.byte	0x1
 1539 0472 9101     		.2byte	0x191
 1540 0474 77000000 		.4byte	0x77
 1541 0478 E1030000 		.4byte	.LLST29
 1542 047c 10       		.uleb128 0x10
 1543 047d 6C030000 		.4byte	.LASF21
 1544 0481 01       		.byte	0x1
 1545 0482 9201     		.2byte	0x192
 1546 0484 6B000000 		.4byte	0x6b
 1547 0488 27040000 		.4byte	.LLST30
 1548 048c 10       		.uleb128 0x10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 64


 1549 048d 53030000 		.4byte	.LASF42
 1550 0491 01       		.byte	0x1
 1551 0492 9301     		.2byte	0x193
 1552 0494 77000000 		.4byte	0x77
 1553 0498 5D040000 		.4byte	.LLST31
 1554 049c 0B       		.uleb128 0xb
 1555 049d 22000000 		.4byte	.LVL78
 1556 04a1 DF030000 		.4byte	0x3df
 1557 04a5 0C       		.uleb128 0xc
 1558 04a6 52000000 		.4byte	.LVL84
 1559 04aa B2000000 		.4byte	0xb2
 1560 04ae 0A       		.uleb128 0xa
 1561 04af 01       		.uleb128 0x1
 1562 04b0 50       		.byte	0x50
 1563 04b1 02       		.uleb128 0x2
 1564 04b2 74       		.byte	0x74
 1565 04b3 00       		.sleb128 0
 1566 04b4 00       		.byte	0
 1567 04b5 00       		.byte	0
 1568 04b6 0D       		.uleb128 0xd
 1569 04b7 A2000000 		.4byte	.LASF43
 1570 04bb 01       		.byte	0x1
 1571 04bc 3902     		.2byte	0x239
 1572 04be 00000000 		.4byte	.LFB5
 1573 04c2 2C000000 		.4byte	.LFE5-.LFB5
 1574 04c6 01       		.uleb128 0x1
 1575 04c7 9C       		.byte	0x9c
 1576 04c8 09050000 		.4byte	0x509
 1577 04cc 0E       		.uleb128 0xe
 1578 04cd 6900     		.ascii	"i\000"
 1579 04cf 01       		.byte	0x1
 1580 04d0 3C02     		.2byte	0x23c
 1581 04d2 6B000000 		.4byte	0x6b
 1582 04d6 70040000 		.4byte	.LLST32
 1583 04da 0F       		.uleb128 0xf
 1584 04db 706F7300 		.ascii	"pos\000"
 1585 04df 01       		.byte	0x1
 1586 04e0 3D02     		.2byte	0x23d
 1587 04e2 6B000000 		.4byte	0x6b
 1588 04e6 01       		.uleb128 0x1
 1589 04e7 52       		.byte	0x52
 1590 04e8 10       		.uleb128 0x10
 1591 04e9 B2020000 		.4byte	.LASF23
 1592 04ed 01       		.byte	0x1
 1593 04ee 3E02     		.2byte	0x23e
 1594 04f0 6B000000 		.4byte	0x6b
 1595 04f4 9A040000 		.4byte	.LLST33
 1596 04f8 0C       		.uleb128 0xc
 1597 04f9 1E000000 		.4byte	.LVL96
 1598 04fd 26040000 		.4byte	0x426
 1599 0501 0A       		.uleb128 0xa
 1600 0502 01       		.uleb128 0x1
 1601 0503 50       		.byte	0x50
 1602 0504 02       		.uleb128 0x2
 1603 0505 74       		.byte	0x74
 1604 0506 00       		.sleb128 0
 1605 0507 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 65


 1606 0508 00       		.byte	0
 1607 0509 17       		.uleb128 0x17
 1608 050a 77000000 		.4byte	0x77
 1609 050e 19050000 		.4byte	0x519
 1610 0512 18       		.uleb128 0x18
 1611 0513 AB000000 		.4byte	0xab
 1612 0517 19       		.byte	0x19
 1613 0518 00       		.byte	0
 1614 0519 19       		.uleb128 0x19
 1615 051a DE040000 		.4byte	.LASF44
 1616 051e 03       		.byte	0x3
 1617 051f D202     		.2byte	0x2d2
 1618 0521 09050000 		.4byte	0x509
 1619 0525 1A       		.uleb128 0x1a
 1620 0526 EA020000 		.4byte	.LASF45
 1621 052a 01       		.byte	0x1
 1622 052b 21       		.byte	0x21
 1623 052c 09050000 		.4byte	0x509
 1624 0530 05       		.uleb128 0x5
 1625 0531 03       		.byte	0x3
 1626 0532 00000000 		.4byte	CapSense_rawFilterData1
 1627 0536 17       		.uleb128 0x17
 1628 0537 6B000000 		.4byte	0x6b
 1629 053b 46050000 		.4byte	0x546
 1630 053f 18       		.uleb128 0x18
 1631 0540 AB000000 		.4byte	0xab
 1632 0544 03       		.byte	0x3
 1633 0545 00       		.byte	0
 1634 0546 19       		.uleb128 0x19
 1635 0547 02020000 		.4byte	.LASF46
 1636 054b 04       		.byte	0x4
 1637 054c 1C01     		.2byte	0x11c
 1638 054e 36050000 		.4byte	0x536
 1639 0552 17       		.uleb128 0x17
 1640 0553 62050000 		.4byte	0x562
 1641 0557 62050000 		.4byte	0x562
 1642 055b 18       		.uleb128 0x18
 1643 055c AB000000 		.4byte	0xab
 1644 0560 19       		.byte	0x19
 1645 0561 00       		.byte	0
 1646 0562 1B       		.uleb128 0x1b
 1647 0563 6B000000 		.4byte	0x6b
 1648 0567 19       		.uleb128 0x19
 1649 0568 48010000 		.4byte	.LASF47
 1650 056c 04       		.byte	0x4
 1651 056d 1D01     		.2byte	0x11d
 1652 056f 73050000 		.4byte	0x573
 1653 0573 1B       		.uleb128 0x1b
 1654 0574 52050000 		.4byte	0x552
 1655 0578 1A       		.uleb128 0x1a
 1656 0579 8C040000 		.4byte	.LASF48
 1657 057d 01       		.byte	0x1
 1658 057e 29       		.byte	0x29
 1659 057f 09050000 		.4byte	0x509
 1660 0583 05       		.uleb128 0x5
 1661 0584 03       		.byte	0x3
 1662 0585 00000000 		.4byte	CapSense_sensorBaseline
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 66


 1663 0589 17       		.uleb128 0x17
 1664 058a 6B000000 		.4byte	0x6b
 1665 058e 99050000 		.4byte	0x599
 1666 0592 18       		.uleb128 0x18
 1667 0593 AB000000 		.4byte	0xab
 1668 0597 19       		.byte	0x19
 1669 0598 00       		.byte	0
 1670 0599 1A       		.uleb128 0x1a
 1671 059a B7010000 		.4byte	.LASF49
 1672 059e 01       		.byte	0x1
 1673 059f 2A       		.byte	0x2a
 1674 05a0 89050000 		.4byte	0x589
 1675 05a4 05       		.uleb128 0x5
 1676 05a5 03       		.byte	0x3
 1677 05a6 00000000 		.4byte	CapSense_sensorBaselineLow
 1678 05aa 1A       		.uleb128 0x1a
 1679 05ab 68000000 		.4byte	.LASF50
 1680 05af 01       		.byte	0x1
 1681 05b0 2B       		.byte	0x2b
 1682 05b1 09050000 		.4byte	0x509
 1683 05b5 05       		.uleb128 0x5
 1684 05b6 03       		.byte	0x3
 1685 05b7 00000000 		.4byte	CapSense_sensorSignal
 1686 05bb 1A       		.uleb128 0x1a
 1687 05bc 2B000000 		.4byte	.LASF51
 1688 05c0 01       		.byte	0x1
 1689 05c1 2C       		.byte	0x2c
 1690 05c2 36050000 		.4byte	0x536
 1691 05c6 05       		.uleb128 0x5
 1692 05c7 03       		.byte	0x3
 1693 05c8 00000000 		.4byte	CapSense_sensorOnMask
 1694 05cc 1A       		.uleb128 0x1a
 1695 05cd 1A040000 		.4byte	.LASF52
 1696 05d1 01       		.byte	0x1
 1697 05d2 2E       		.byte	0x2e
 1698 05d3 89050000 		.4byte	0x589
 1699 05d7 05       		.uleb128 0x5
 1700 05d8 03       		.byte	0x3
 1701 05d9 00000000 		.4byte	CapSense_lowBaselineResetCnt
 1702 05dd 1A       		.uleb128 0x1a
 1703 05de D1020000 		.4byte	.LASF53
 1704 05e2 01       		.byte	0x1
 1705 05e3 30       		.byte	0x30
 1706 05e4 09050000 		.4byte	0x509
 1707 05e8 05       		.uleb128 0x5
 1708 05e9 03       		.byte	0x3
 1709 05ea 00000000 		.4byte	CapSense_fingerThreshold
 1710 05ee 1A       		.uleb128 0x1a
 1711 05ef B9020000 		.4byte	.LASF54
 1712 05f3 01       		.byte	0x1
 1713 05f4 34       		.byte	0x34
 1714 05f5 09050000 		.4byte	0x509
 1715 05f9 05       		.uleb128 0x5
 1716 05fa 03       		.byte	0x3
 1717 05fb 00000000 		.4byte	CapSense_noiseThreshold
 1718 05ff 1A       		.uleb128 0x1a
 1719 0600 17000000 		.4byte	.LASF55
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 67


 1720 0604 01       		.byte	0x1
 1721 0605 38       		.byte	0x38
 1722 0606 09050000 		.4byte	0x509
 1723 060a 05       		.uleb128 0x5
 1724 060b 03       		.byte	0x3
 1725 060c 00000000 		.4byte	CapSense_hysteresis
 1726 0610 1A       		.uleb128 0x1a
 1727 0611 37040000 		.4byte	.LASF56
 1728 0615 01       		.byte	0x1
 1729 0616 3C       		.byte	0x3c
 1730 0617 89050000 		.4byte	0x589
 1731 061b 05       		.uleb128 0x5
 1732 061c 03       		.byte	0x3
 1733 061d 00000000 		.4byte	CapSense_debounce
 1734 0621 17       		.uleb128 0x17
 1735 0622 6B000000 		.4byte	0x6b
 1736 0626 31060000 		.4byte	0x631
 1737 062a 18       		.uleb128 0x18
 1738 062b AB000000 		.4byte	0xab
 1739 062f 1A       		.byte	0x1a
 1740 0630 00       		.byte	0
 1741 0631 1A       		.uleb128 0x1a
 1742 0632 0D050000 		.4byte	.LASF57
 1743 0636 01       		.byte	0x1
 1744 0637 40       		.byte	0x40
 1745 0638 21060000 		.4byte	0x621
 1746 063c 05       		.uleb128 0x5
 1747 063d 03       		.byte	0x3
 1748 063e 00000000 		.4byte	CapSense_debounceCounter
 1749 0642 1A       		.uleb128 0x1a
 1750 0643 D2010000 		.4byte	.LASF58
 1751 0647 01       		.byte	0x1
 1752 0648 44       		.byte	0x44
 1753 0649 53060000 		.4byte	0x653
 1754 064d 05       		.uleb128 0x5
 1755 064e 03       		.byte	0x3
 1756 064f 00000000 		.4byte	CapSense_rawDataIndex
 1757 0653 1B       		.uleb128 0x1b
 1758 0654 52050000 		.4byte	0x552
 1759 0658 1A       		.uleb128 0x1a
 1760 0659 3E050000 		.4byte	.LASF59
 1761 065d 01       		.byte	0x1
 1762 065e 62       		.byte	0x62
 1763 065f 69060000 		.4byte	0x669
 1764 0663 05       		.uleb128 0x5
 1765 0664 03       		.byte	0x3
 1766 0665 00000000 		.4byte	CapSense_numberOfSensors
 1767 0669 1B       		.uleb128 0x1b
 1768 066a 52050000 		.4byte	0x552
 1769 066e 1C       		.uleb128 0x1c
 1770 066f 84010000 		.4byte	.LASF60
 1771 0673 84010000 		.4byte	.LASF60
 1772 0677 03       		.byte	0x3
 1773 0678 9A       		.byte	0x9a
 1774 0679 1C       		.uleb128 0x1c
 1775 067a 2E050000 		.4byte	.LASF61
 1776 067e 2E050000 		.4byte	.LASF61
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 68


 1777 0682 03       		.byte	0x3
 1778 0683 99       		.byte	0x99
 1779 0684 1C       		.uleb128 0x1c
 1780 0685 F1040000 		.4byte	.LASF62
 1781 0689 F1040000 		.4byte	.LASF62
 1782 068d 03       		.byte	0x3
 1783 068e 9B       		.byte	0x9b
 1784 068f 00       		.byte	0
 1785              		.section	.debug_abbrev,"",%progbits
 1786              	.Ldebug_abbrev0:
 1787 0000 01       		.uleb128 0x1
 1788 0001 11       		.uleb128 0x11
 1789 0002 01       		.byte	0x1
 1790 0003 25       		.uleb128 0x25
 1791 0004 0E       		.uleb128 0xe
 1792 0005 13       		.uleb128 0x13
 1793 0006 0B       		.uleb128 0xb
 1794 0007 03       		.uleb128 0x3
 1795 0008 0E       		.uleb128 0xe
 1796 0009 1B       		.uleb128 0x1b
 1797 000a 0E       		.uleb128 0xe
 1798 000b 55       		.uleb128 0x55
 1799 000c 17       		.uleb128 0x17
 1800 000d 11       		.uleb128 0x11
 1801 000e 01       		.uleb128 0x1
 1802 000f 10       		.uleb128 0x10
 1803 0010 17       		.uleb128 0x17
 1804 0011 00       		.byte	0
 1805 0012 00       		.byte	0
 1806 0013 02       		.uleb128 0x2
 1807 0014 24       		.uleb128 0x24
 1808 0015 00       		.byte	0
 1809 0016 0B       		.uleb128 0xb
 1810 0017 0B       		.uleb128 0xb
 1811 0018 3E       		.uleb128 0x3e
 1812 0019 0B       		.uleb128 0xb
 1813 001a 03       		.uleb128 0x3
 1814 001b 0E       		.uleb128 0xe
 1815 001c 00       		.byte	0
 1816 001d 00       		.byte	0
 1817 001e 03       		.uleb128 0x3
 1818 001f 24       		.uleb128 0x24
 1819 0020 00       		.byte	0
 1820 0021 0B       		.uleb128 0xb
 1821 0022 0B       		.uleb128 0xb
 1822 0023 3E       		.uleb128 0x3e
 1823 0024 0B       		.uleb128 0xb
 1824 0025 03       		.uleb128 0x3
 1825 0026 08       		.uleb128 0x8
 1826 0027 00       		.byte	0
 1827 0028 00       		.byte	0
 1828 0029 04       		.uleb128 0x4
 1829 002a 16       		.uleb128 0x16
 1830 002b 00       		.byte	0
 1831 002c 03       		.uleb128 0x3
 1832 002d 0E       		.uleb128 0xe
 1833 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 69


 1834 002f 0B       		.uleb128 0xb
 1835 0030 3B       		.uleb128 0x3b
 1836 0031 05       		.uleb128 0x5
 1837 0032 49       		.uleb128 0x49
 1838 0033 13       		.uleb128 0x13
 1839 0034 00       		.byte	0
 1840 0035 00       		.byte	0
 1841 0036 05       		.uleb128 0x5
 1842 0037 2E       		.uleb128 0x2e
 1843 0038 01       		.byte	0x1
 1844 0039 3F       		.uleb128 0x3f
 1845 003a 19       		.uleb128 0x19
 1846 003b 03       		.uleb128 0x3
 1847 003c 0E       		.uleb128 0xe
 1848 003d 3A       		.uleb128 0x3a
 1849 003e 0B       		.uleb128 0xb
 1850 003f 3B       		.uleb128 0x3b
 1851 0040 0B       		.uleb128 0xb
 1852 0041 27       		.uleb128 0x27
 1853 0042 19       		.uleb128 0x19
 1854 0043 11       		.uleb128 0x11
 1855 0044 01       		.uleb128 0x1
 1856 0045 12       		.uleb128 0x12
 1857 0046 06       		.uleb128 0x6
 1858 0047 40       		.uleb128 0x40
 1859 0048 18       		.uleb128 0x18
 1860 0049 9742     		.uleb128 0x2117
 1861 004b 19       		.uleb128 0x19
 1862 004c 01       		.uleb128 0x1
 1863 004d 13       		.uleb128 0x13
 1864 004e 00       		.byte	0
 1865 004f 00       		.byte	0
 1866 0050 06       		.uleb128 0x6
 1867 0051 05       		.uleb128 0x5
 1868 0052 00       		.byte	0
 1869 0053 03       		.uleb128 0x3
 1870 0054 0E       		.uleb128 0xe
 1871 0055 3A       		.uleb128 0x3a
 1872 0056 0B       		.uleb128 0xb
 1873 0057 3B       		.uleb128 0x3b
 1874 0058 0B       		.uleb128 0xb
 1875 0059 49       		.uleb128 0x49
 1876 005a 13       		.uleb128 0x13
 1877 005b 02       		.uleb128 0x2
 1878 005c 18       		.uleb128 0x18
 1879 005d 00       		.byte	0
 1880 005e 00       		.byte	0
 1881 005f 07       		.uleb128 0x7
 1882 0060 34       		.uleb128 0x34
 1883 0061 00       		.byte	0
 1884 0062 03       		.uleb128 0x3
 1885 0063 0E       		.uleb128 0xe
 1886 0064 3A       		.uleb128 0x3a
 1887 0065 0B       		.uleb128 0xb
 1888 0066 3B       		.uleb128 0x3b
 1889 0067 0B       		.uleb128 0xb
 1890 0068 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 70


 1891 0069 13       		.uleb128 0x13
 1892 006a 02       		.uleb128 0x2
 1893 006b 17       		.uleb128 0x17
 1894 006c 00       		.byte	0
 1895 006d 00       		.byte	0
 1896 006e 08       		.uleb128 0x8
 1897 006f 05       		.uleb128 0x5
 1898 0070 00       		.byte	0
 1899 0071 03       		.uleb128 0x3
 1900 0072 0E       		.uleb128 0xe
 1901 0073 3A       		.uleb128 0x3a
 1902 0074 0B       		.uleb128 0xb
 1903 0075 3B       		.uleb128 0x3b
 1904 0076 0B       		.uleb128 0xb
 1905 0077 49       		.uleb128 0x49
 1906 0078 13       		.uleb128 0x13
 1907 0079 02       		.uleb128 0x2
 1908 007a 17       		.uleb128 0x17
 1909 007b 00       		.byte	0
 1910 007c 00       		.byte	0
 1911 007d 09       		.uleb128 0x9
 1912 007e 898201   		.uleb128 0x4109
 1913 0081 01       		.byte	0x1
 1914 0082 11       		.uleb128 0x11
 1915 0083 01       		.uleb128 0x1
 1916 0084 31       		.uleb128 0x31
 1917 0085 13       		.uleb128 0x13
 1918 0086 01       		.uleb128 0x1
 1919 0087 13       		.uleb128 0x13
 1920 0088 00       		.byte	0
 1921 0089 00       		.byte	0
 1922 008a 0A       		.uleb128 0xa
 1923 008b 8A8201   		.uleb128 0x410a
 1924 008e 00       		.byte	0
 1925 008f 02       		.uleb128 0x2
 1926 0090 18       		.uleb128 0x18
 1927 0091 9142     		.uleb128 0x2111
 1928 0093 18       		.uleb128 0x18
 1929 0094 00       		.byte	0
 1930 0095 00       		.byte	0
 1931 0096 0B       		.uleb128 0xb
 1932 0097 898201   		.uleb128 0x4109
 1933 009a 00       		.byte	0
 1934 009b 11       		.uleb128 0x11
 1935 009c 01       		.uleb128 0x1
 1936 009d 31       		.uleb128 0x31
 1937 009e 13       		.uleb128 0x13
 1938 009f 00       		.byte	0
 1939 00a0 00       		.byte	0
 1940 00a1 0C       		.uleb128 0xc
 1941 00a2 898201   		.uleb128 0x4109
 1942 00a5 01       		.byte	0x1
 1943 00a6 11       		.uleb128 0x11
 1944 00a7 01       		.uleb128 0x1
 1945 00a8 31       		.uleb128 0x31
 1946 00a9 13       		.uleb128 0x13
 1947 00aa 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 71


 1948 00ab 00       		.byte	0
 1949 00ac 0D       		.uleb128 0xd
 1950 00ad 2E       		.uleb128 0x2e
 1951 00ae 01       		.byte	0x1
 1952 00af 3F       		.uleb128 0x3f
 1953 00b0 19       		.uleb128 0x19
 1954 00b1 03       		.uleb128 0x3
 1955 00b2 0E       		.uleb128 0xe
 1956 00b3 3A       		.uleb128 0x3a
 1957 00b4 0B       		.uleb128 0xb
 1958 00b5 3B       		.uleb128 0x3b
 1959 00b6 05       		.uleb128 0x5
 1960 00b7 27       		.uleb128 0x27
 1961 00b8 19       		.uleb128 0x19
 1962 00b9 11       		.uleb128 0x11
 1963 00ba 01       		.uleb128 0x1
 1964 00bb 12       		.uleb128 0x12
 1965 00bc 06       		.uleb128 0x6
 1966 00bd 40       		.uleb128 0x40
 1967 00be 18       		.uleb128 0x18
 1968 00bf 9742     		.uleb128 0x2117
 1969 00c1 19       		.uleb128 0x19
 1970 00c2 01       		.uleb128 0x1
 1971 00c3 13       		.uleb128 0x13
 1972 00c4 00       		.byte	0
 1973 00c5 00       		.byte	0
 1974 00c6 0E       		.uleb128 0xe
 1975 00c7 34       		.uleb128 0x34
 1976 00c8 00       		.byte	0
 1977 00c9 03       		.uleb128 0x3
 1978 00ca 08       		.uleb128 0x8
 1979 00cb 3A       		.uleb128 0x3a
 1980 00cc 0B       		.uleb128 0xb
 1981 00cd 3B       		.uleb128 0x3b
 1982 00ce 05       		.uleb128 0x5
 1983 00cf 49       		.uleb128 0x49
 1984 00d0 13       		.uleb128 0x13
 1985 00d1 02       		.uleb128 0x2
 1986 00d2 17       		.uleb128 0x17
 1987 00d3 00       		.byte	0
 1988 00d4 00       		.byte	0
 1989 00d5 0F       		.uleb128 0xf
 1990 00d6 34       		.uleb128 0x34
 1991 00d7 00       		.byte	0
 1992 00d8 03       		.uleb128 0x3
 1993 00d9 08       		.uleb128 0x8
 1994 00da 3A       		.uleb128 0x3a
 1995 00db 0B       		.uleb128 0xb
 1996 00dc 3B       		.uleb128 0x3b
 1997 00dd 05       		.uleb128 0x5
 1998 00de 49       		.uleb128 0x49
 1999 00df 13       		.uleb128 0x13
 2000 00e0 02       		.uleb128 0x2
 2001 00e1 18       		.uleb128 0x18
 2002 00e2 00       		.byte	0
 2003 00e3 00       		.byte	0
 2004 00e4 10       		.uleb128 0x10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 72


 2005 00e5 34       		.uleb128 0x34
 2006 00e6 00       		.byte	0
 2007 00e7 03       		.uleb128 0x3
 2008 00e8 0E       		.uleb128 0xe
 2009 00e9 3A       		.uleb128 0x3a
 2010 00ea 0B       		.uleb128 0xb
 2011 00eb 3B       		.uleb128 0x3b
 2012 00ec 05       		.uleb128 0x5
 2013 00ed 49       		.uleb128 0x49
 2014 00ee 13       		.uleb128 0x13
 2015 00ef 02       		.uleb128 0x2
 2016 00f0 17       		.uleb128 0x17
 2017 00f1 00       		.byte	0
 2018 00f2 00       		.byte	0
 2019 00f3 11       		.uleb128 0x11
 2020 00f4 2E       		.uleb128 0x2e
 2021 00f5 01       		.byte	0x1
 2022 00f6 3F       		.uleb128 0x3f
 2023 00f7 19       		.uleb128 0x19
 2024 00f8 03       		.uleb128 0x3
 2025 00f9 0E       		.uleb128 0xe
 2026 00fa 3A       		.uleb128 0x3a
 2027 00fb 0B       		.uleb128 0xb
 2028 00fc 3B       		.uleb128 0x3b
 2029 00fd 05       		.uleb128 0x5
 2030 00fe 27       		.uleb128 0x27
 2031 00ff 19       		.uleb128 0x19
 2032 0100 49       		.uleb128 0x49
 2033 0101 13       		.uleb128 0x13
 2034 0102 11       		.uleb128 0x11
 2035 0103 01       		.uleb128 0x1
 2036 0104 12       		.uleb128 0x12
 2037 0105 06       		.uleb128 0x6
 2038 0106 40       		.uleb128 0x40
 2039 0107 18       		.uleb128 0x18
 2040 0108 9742     		.uleb128 0x2117
 2041 010a 19       		.uleb128 0x19
 2042 010b 01       		.uleb128 0x1
 2043 010c 13       		.uleb128 0x13
 2044 010d 00       		.byte	0
 2045 010e 00       		.byte	0
 2046 010f 12       		.uleb128 0x12
 2047 0110 05       		.uleb128 0x5
 2048 0111 00       		.byte	0
 2049 0112 03       		.uleb128 0x3
 2050 0113 0E       		.uleb128 0xe
 2051 0114 3A       		.uleb128 0x3a
 2052 0115 0B       		.uleb128 0xb
 2053 0116 3B       		.uleb128 0x3b
 2054 0117 05       		.uleb128 0x5
 2055 0118 49       		.uleb128 0x49
 2056 0119 13       		.uleb128 0x13
 2057 011a 02       		.uleb128 0x2
 2058 011b 17       		.uleb128 0x17
 2059 011c 00       		.byte	0
 2060 011d 00       		.byte	0
 2061 011e 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 73


 2062 011f 34       		.uleb128 0x34
 2063 0120 00       		.byte	0
 2064 0121 03       		.uleb128 0x3
 2065 0122 0E       		.uleb128 0xe
 2066 0123 3A       		.uleb128 0x3a
 2067 0124 0B       		.uleb128 0xb
 2068 0125 3B       		.uleb128 0x3b
 2069 0126 05       		.uleb128 0x5
 2070 0127 49       		.uleb128 0x49
 2071 0128 13       		.uleb128 0x13
 2072 0129 00       		.byte	0
 2073 012a 00       		.byte	0
 2074 012b 14       		.uleb128 0x14
 2075 012c 34       		.uleb128 0x34
 2076 012d 00       		.byte	0
 2077 012e 03       		.uleb128 0x3
 2078 012f 0E       		.uleb128 0xe
 2079 0130 3A       		.uleb128 0x3a
 2080 0131 0B       		.uleb128 0xb
 2081 0132 3B       		.uleb128 0x3b
 2082 0133 05       		.uleb128 0x5
 2083 0134 49       		.uleb128 0x49
 2084 0135 13       		.uleb128 0x13
 2085 0136 02       		.uleb128 0x2
 2086 0137 18       		.uleb128 0x18
 2087 0138 00       		.byte	0
 2088 0139 00       		.byte	0
 2089 013a 15       		.uleb128 0x15
 2090 013b 05       		.uleb128 0x5
 2091 013c 00       		.byte	0
 2092 013d 03       		.uleb128 0x3
 2093 013e 08       		.uleb128 0x8
 2094 013f 3A       		.uleb128 0x3a
 2095 0140 0B       		.uleb128 0xb
 2096 0141 3B       		.uleb128 0x3b
 2097 0142 05       		.uleb128 0x5
 2098 0143 49       		.uleb128 0x49
 2099 0144 13       		.uleb128 0x13
 2100 0145 02       		.uleb128 0x2
 2101 0146 17       		.uleb128 0x17
 2102 0147 00       		.byte	0
 2103 0148 00       		.byte	0
 2104 0149 16       		.uleb128 0x16
 2105 014a 05       		.uleb128 0x5
 2106 014b 00       		.byte	0
 2107 014c 03       		.uleb128 0x3
 2108 014d 08       		.uleb128 0x8
 2109 014e 3A       		.uleb128 0x3a
 2110 014f 0B       		.uleb128 0xb
 2111 0150 3B       		.uleb128 0x3b
 2112 0151 05       		.uleb128 0x5
 2113 0152 49       		.uleb128 0x49
 2114 0153 13       		.uleb128 0x13
 2115 0154 02       		.uleb128 0x2
 2116 0155 18       		.uleb128 0x18
 2117 0156 00       		.byte	0
 2118 0157 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 74


 2119 0158 17       		.uleb128 0x17
 2120 0159 01       		.uleb128 0x1
 2121 015a 01       		.byte	0x1
 2122 015b 49       		.uleb128 0x49
 2123 015c 13       		.uleb128 0x13
 2124 015d 01       		.uleb128 0x1
 2125 015e 13       		.uleb128 0x13
 2126 015f 00       		.byte	0
 2127 0160 00       		.byte	0
 2128 0161 18       		.uleb128 0x18
 2129 0162 21       		.uleb128 0x21
 2130 0163 00       		.byte	0
 2131 0164 49       		.uleb128 0x49
 2132 0165 13       		.uleb128 0x13
 2133 0166 2F       		.uleb128 0x2f
 2134 0167 0B       		.uleb128 0xb
 2135 0168 00       		.byte	0
 2136 0169 00       		.byte	0
 2137 016a 19       		.uleb128 0x19
 2138 016b 34       		.uleb128 0x34
 2139 016c 00       		.byte	0
 2140 016d 03       		.uleb128 0x3
 2141 016e 0E       		.uleb128 0xe
 2142 016f 3A       		.uleb128 0x3a
 2143 0170 0B       		.uleb128 0xb
 2144 0171 3B       		.uleb128 0x3b
 2145 0172 05       		.uleb128 0x5
 2146 0173 49       		.uleb128 0x49
 2147 0174 13       		.uleb128 0x13
 2148 0175 3F       		.uleb128 0x3f
 2149 0176 19       		.uleb128 0x19
 2150 0177 3C       		.uleb128 0x3c
 2151 0178 19       		.uleb128 0x19
 2152 0179 00       		.byte	0
 2153 017a 00       		.byte	0
 2154 017b 1A       		.uleb128 0x1a
 2155 017c 34       		.uleb128 0x34
 2156 017d 00       		.byte	0
 2157 017e 03       		.uleb128 0x3
 2158 017f 0E       		.uleb128 0xe
 2159 0180 3A       		.uleb128 0x3a
 2160 0181 0B       		.uleb128 0xb
 2161 0182 3B       		.uleb128 0x3b
 2162 0183 0B       		.uleb128 0xb
 2163 0184 49       		.uleb128 0x49
 2164 0185 13       		.uleb128 0x13
 2165 0186 3F       		.uleb128 0x3f
 2166 0187 19       		.uleb128 0x19
 2167 0188 02       		.uleb128 0x2
 2168 0189 18       		.uleb128 0x18
 2169 018a 00       		.byte	0
 2170 018b 00       		.byte	0
 2171 018c 1B       		.uleb128 0x1b
 2172 018d 26       		.uleb128 0x26
 2173 018e 00       		.byte	0
 2174 018f 49       		.uleb128 0x49
 2175 0190 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 75


 2176 0191 00       		.byte	0
 2177 0192 00       		.byte	0
 2178 0193 1C       		.uleb128 0x1c
 2179 0194 2E       		.uleb128 0x2e
 2180 0195 00       		.byte	0
 2181 0196 3F       		.uleb128 0x3f
 2182 0197 19       		.uleb128 0x19
 2183 0198 3C       		.uleb128 0x3c
 2184 0199 19       		.uleb128 0x19
 2185 019a 6E       		.uleb128 0x6e
 2186 019b 0E       		.uleb128 0xe
 2187 019c 03       		.uleb128 0x3
 2188 019d 0E       		.uleb128 0xe
 2189 019e 3A       		.uleb128 0x3a
 2190 019f 0B       		.uleb128 0xb
 2191 01a0 3B       		.uleb128 0x3b
 2192 01a1 0B       		.uleb128 0xb
 2193 01a2 00       		.byte	0
 2194 01a3 00       		.byte	0
 2195 01a4 00       		.byte	0
 2196              		.section	.debug_loc,"",%progbits
 2197              	.Ldebug_loc0:
 2198              	.LLST0:
 2199 0000 06000000 		.4byte	.LVL1
 2200 0004 28000000 		.4byte	.LVL2
 2201 0008 0100     		.2byte	0x1
 2202 000a 52       		.byte	0x52
 2203 000b 00000000 		.4byte	0
 2204 000f 00000000 		.4byte	0
 2205              	.LLST1:
 2206 0013 00000000 		.4byte	.LVL3
 2207 0017 07000000 		.4byte	.LVL4-1
 2208 001b 0100     		.2byte	0x1
 2209 001d 50       		.byte	0x50
 2210 001e 07000000 		.4byte	.LVL4-1
 2211 0022 18000000 		.4byte	.LFE1
 2212 0026 0400     		.2byte	0x4
 2213 0028 F3       		.byte	0xf3
 2214 0029 01       		.uleb128 0x1
 2215 002a 50       		.byte	0x50
 2216 002b 9F       		.byte	0x9f
 2217 002c 00000000 		.4byte	0
 2218 0030 00000000 		.4byte	0
 2219              	.LLST2:
 2220 0034 02000000 		.4byte	.LVL7
 2221 0038 06000000 		.4byte	.LVL8
 2222 003c 0200     		.2byte	0x2
 2223 003e 30       		.byte	0x30
 2224 003f 9F       		.byte	0x9f
 2225 0040 06000000 		.4byte	.LVL8
 2226 0044 0E000000 		.4byte	.LVL10
 2227 0048 0100     		.2byte	0x1
 2228 004a 54       		.byte	0x54
 2229 004b 10000000 		.4byte	.LVL11
 2230 004f 16000000 		.4byte	.LFE2
 2231 0053 0100     		.2byte	0x1
 2232 0055 54       		.byte	0x54
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 76


 2233 0056 00000000 		.4byte	0
 2234 005a 00000000 		.4byte	0
 2235              	.LLST3:
 2236 005e 12000000 		.4byte	.LVL14
 2237 0062 34000000 		.4byte	.LVL18
 2238 0066 0100     		.2byte	0x1
 2239 0068 54       		.byte	0x54
 2240 0069 36000000 		.4byte	.LVL19
 2241 006d 3C000000 		.4byte	.LVL20
 2242 0071 0100     		.2byte	0x1
 2243 0073 54       		.byte	0x54
 2244 0074 00000000 		.4byte	0
 2245 0078 00000000 		.4byte	0
 2246              	.LLST4:
 2247 007c 1C000000 		.4byte	.LVL15
 2248 0080 28000000 		.4byte	.LVL16
 2249 0084 0100     		.2byte	0x1
 2250 0086 53       		.byte	0x53
 2251 0087 28000000 		.4byte	.LVL16
 2252 008b 34000000 		.4byte	.LVL18
 2253 008f 0700     		.2byte	0x7
 2254 0091 31       		.byte	0x31
 2255 0092 74       		.byte	0x74
 2256 0093 00       		.sleb128 0
 2257 0094 37       		.byte	0x37
 2258 0095 1A       		.byte	0x1a
 2259 0096 24       		.byte	0x24
 2260 0097 9F       		.byte	0x9f
 2261 0098 34000000 		.4byte	.LVL18
 2262 009c 36000000 		.4byte	.LVL19
 2263 00a0 0700     		.2byte	0x7
 2264 00a2 31       		.byte	0x31
 2265 00a3 74       		.byte	0x74
 2266 00a4 7F       		.sleb128 -1
 2267 00a5 37       		.byte	0x37
 2268 00a6 1A       		.byte	0x1a
 2269 00a7 24       		.byte	0x24
 2270 00a8 9F       		.byte	0x9f
 2271 00a9 00000000 		.4byte	0
 2272 00ad 00000000 		.4byte	0
 2273              	.LLST5:
 2274 00b1 00000000 		.4byte	.LVL21
 2275 00b5 30000000 		.4byte	.LVL27
 2276 00b9 0100     		.2byte	0x1
 2277 00bb 50       		.byte	0x50
 2278 00bc 30000000 		.4byte	.LVL27
 2279 00c0 44000000 		.4byte	.LVL29
 2280 00c4 0400     		.2byte	0x4
 2281 00c6 F3       		.byte	0xf3
 2282 00c7 01       		.uleb128 0x1
 2283 00c8 50       		.byte	0x50
 2284 00c9 9F       		.byte	0x9f
 2285 00ca 44000000 		.4byte	.LVL29
 2286 00ce 4C000000 		.4byte	.LVL30
 2287 00d2 0100     		.2byte	0x1
 2288 00d4 50       		.byte	0x50
 2289 00d5 4C000000 		.4byte	.LVL30
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 77


 2290 00d9 8C000000 		.4byte	.LFE6
 2291 00dd 0400     		.2byte	0x4
 2292 00df F3       		.byte	0xf3
 2293 00e0 01       		.uleb128 0x1
 2294 00e1 50       		.byte	0x50
 2295 00e2 9F       		.byte	0x9f
 2296 00e3 00000000 		.4byte	0
 2297 00e7 00000000 		.4byte	0
 2298              	.LLST6:
 2299 00eb 04000000 		.4byte	.LVL22
 2300 00ef 78000000 		.4byte	.LVL33
 2301 00f3 0100     		.2byte	0x1
 2302 00f5 54       		.byte	0x54
 2303 00f6 00000000 		.4byte	0
 2304 00fa 00000000 		.4byte	0
 2305              	.LLST7:
 2306 00fe 1A000000 		.4byte	.LVL24
 2307 0102 78000000 		.4byte	.LVL33
 2308 0106 0100     		.2byte	0x1
 2309 0108 57       		.byte	0x57
 2310 0109 00000000 		.4byte	0
 2311 010d 00000000 		.4byte	0
 2312              	.LLST8:
 2313 0111 1E000000 		.4byte	.LVL25
 2314 0115 32000000 		.4byte	.LVL28
 2315 0119 0100     		.2byte	0x1
 2316 011b 51       		.byte	0x51
 2317 011c 32000000 		.4byte	.LVL28
 2318 0120 44000000 		.4byte	.LVL29
 2319 0124 0A00     		.2byte	0xa
 2320 0126 72       		.byte	0x72
 2321 0127 00       		.sleb128 0
 2322 0128 31       		.byte	0x31
 2323 0129 24       		.byte	0x24
 2324 012a 03       		.byte	0x3
 2325 012b 50000000 		.4byte	.LANCHOR0+80
 2326 012f 22       		.byte	0x22
 2327 0130 44000000 		.4byte	.LVL29
 2328 0134 4E000000 		.4byte	.LVL31
 2329 0138 0100     		.2byte	0x1
 2330 013a 51       		.byte	0x51
 2331 013b 4E000000 		.4byte	.LVL31
 2332 013f 6E000000 		.4byte	.LVL32
 2333 0143 0A00     		.2byte	0xa
 2334 0145 72       		.byte	0x72
 2335 0146 00       		.sleb128 0
 2336 0147 31       		.byte	0x31
 2337 0148 24       		.byte	0x24
 2338 0149 03       		.byte	0x3
 2339 014a 50000000 		.4byte	.LANCHOR0+80
 2340 014e 22       		.byte	0x22
 2341 014f 00000000 		.4byte	0
 2342 0153 00000000 		.4byte	0
 2343              	.LLST9:
 2344 0157 20000000 		.4byte	.LVL26
 2345 015b 78000000 		.4byte	.LVL33
 2346 015f 0100     		.2byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 78


 2347 0161 56       		.byte	0x56
 2348 0162 00000000 		.4byte	0
 2349 0166 00000000 		.4byte	0
 2350              	.LLST10:
 2351 016a 00000000 		.4byte	.LVL34
 2352 016e 08000000 		.4byte	.LVL36
 2353 0172 0100     		.2byte	0x1
 2354 0174 50       		.byte	0x50
 2355 0175 08000000 		.4byte	.LVL36
 2356 0179 2C000000 		.4byte	.LFE7
 2357 017d 0400     		.2byte	0x4
 2358 017f F3       		.byte	0xf3
 2359 0180 01       		.uleb128 0x1
 2360 0181 50       		.byte	0x50
 2361 0182 9F       		.byte	0x9f
 2362 0183 00000000 		.4byte	0
 2363 0187 00000000 		.4byte	0
 2364              	.LLST11:
 2365 018b 06000000 		.4byte	.LVL35
 2366 018f 1C000000 		.4byte	.LVL41
 2367 0193 0100     		.2byte	0x1
 2368 0195 54       		.byte	0x54
 2369 0196 1E000000 		.4byte	.LVL42
 2370 019a 26000000 		.4byte	.LVL43
 2371 019e 0100     		.2byte	0x1
 2372 01a0 54       		.byte	0x54
 2373 01a1 00000000 		.4byte	0
 2374 01a5 00000000 		.4byte	0
 2375              	.LLST12:
 2376 01a9 0E000000 		.4byte	.LVL37
 2377 01ad 26000000 		.4byte	.LVL43
 2378 01b1 0100     		.2byte	0x1
 2379 01b3 55       		.byte	0x55
 2380 01b4 00000000 		.4byte	0
 2381 01b8 00000000 		.4byte	0
 2382              	.LLST13:
 2383 01bc 0E000000 		.4byte	.LVL37
 2384 01c0 10000000 		.4byte	.LVL38
 2385 01c4 0200     		.2byte	0x2
 2386 01c6 30       		.byte	0x30
 2387 01c7 9F       		.byte	0x9f
 2388 01c8 10000000 		.4byte	.LVL38
 2389 01cc 26000000 		.4byte	.LVL43
 2390 01d0 0100     		.2byte	0x1
 2391 01d2 56       		.byte	0x56
 2392 01d3 00000000 		.4byte	0
 2393 01d7 00000000 		.4byte	0
 2394              	.LLST14:
 2395 01db 02000000 		.4byte	.LVL44
 2396 01df 08000000 		.4byte	.LVL45
 2397 01e3 0200     		.2byte	0x2
 2398 01e5 30       		.byte	0x30
 2399 01e6 9F       		.byte	0x9f
 2400 01e7 08000000 		.4byte	.LVL45
 2401 01eb 14000000 		.4byte	.LVL48
 2402 01ef 0100     		.2byte	0x1
 2403 01f1 54       		.byte	0x54
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 79


 2404 01f2 16000000 		.4byte	.LVL49
 2405 01f6 1E000000 		.4byte	.LFE8
 2406 01fa 0100     		.2byte	0x1
 2407 01fc 54       		.byte	0x54
 2408 01fd 00000000 		.4byte	0
 2409 0201 00000000 		.4byte	0
 2410              	.LLST15:
 2411 0205 02000000 		.4byte	.LVL44
 2412 0209 08000000 		.4byte	.LVL45
 2413 020d 0200     		.2byte	0x2
 2414 020f 30       		.byte	0x30
 2415 0210 9F       		.byte	0x9f
 2416 0211 08000000 		.4byte	.LVL45
 2417 0215 1E000000 		.4byte	.LFE8
 2418 0219 0100     		.2byte	0x1
 2419 021b 55       		.byte	0x55
 2420 021c 00000000 		.4byte	0
 2421 0220 00000000 		.4byte	0
 2422              	.LLST16:
 2423 0224 00000000 		.4byte	.LVL50
 2424 0228 08000000 		.4byte	.LVL52
 2425 022c 0100     		.2byte	0x1
 2426 022e 50       		.byte	0x50
 2427 022f 08000000 		.4byte	.LVL52
 2428 0233 38000000 		.4byte	.LFE9
 2429 0237 0400     		.2byte	0x4
 2430 0239 F3       		.byte	0xf3
 2431 023a 01       		.uleb128 0x1
 2432 023b 50       		.byte	0x50
 2433 023c 9F       		.byte	0x9f
 2434 023d 00000000 		.4byte	0
 2435 0241 00000000 		.4byte	0
 2436              	.LLST17:
 2437 0245 1A000000 		.4byte	.LVL55
 2438 0249 20000000 		.4byte	.LVL56
 2439 024d 0100     		.2byte	0x1
 2440 024f 52       		.byte	0x52
 2441 0250 20000000 		.4byte	.LVL56
 2442 0254 24000000 		.4byte	.LVL57
 2443 0258 0700     		.2byte	0x7
 2444 025a 31       		.byte	0x31
 2445 025b 73       		.byte	0x73
 2446 025c 00       		.sleb128 0
 2447 025d 37       		.byte	0x37
 2448 025e 1A       		.byte	0x1a
 2449 025f 24       		.byte	0x24
 2450 0260 9F       		.byte	0x9f
 2451 0261 24000000 		.4byte	.LVL57
 2452 0265 26000000 		.4byte	.LVL58
 2453 0269 0700     		.2byte	0x7
 2454 026b 31       		.byte	0x31
 2455 026c 73       		.byte	0x73
 2456 026d 7F       		.sleb128 -1
 2457 026e 37       		.byte	0x37
 2458 026f 1A       		.byte	0x1a
 2459 0270 24       		.byte	0x24
 2460 0271 9F       		.byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 80


 2461 0272 00000000 		.4byte	0
 2462 0276 00000000 		.4byte	0
 2463              	.LLST18:
 2464 027a 06000000 		.4byte	.LVL51
 2465 027e 24000000 		.4byte	.LVL57
 2466 0282 0100     		.2byte	0x1
 2467 0284 53       		.byte	0x53
 2468 0285 26000000 		.4byte	.LVL58
 2469 0289 38000000 		.4byte	.LFE9
 2470 028d 0100     		.2byte	0x1
 2471 028f 53       		.byte	0x53
 2472 0290 00000000 		.4byte	0
 2473 0294 00000000 		.4byte	0
 2474              	.LLST19:
 2475 0298 0E000000 		.4byte	.LVL53
 2476 029c 2C000000 		.4byte	.LVL59
 2477 02a0 0100     		.2byte	0x1
 2478 02a2 55       		.byte	0x55
 2479 02a3 00000000 		.4byte	0
 2480 02a7 00000000 		.4byte	0
 2481              	.LLST20:
 2482 02ab 00000000 		.4byte	.LVL60
 2483 02af 08000000 		.4byte	.LVL62
 2484 02b3 0100     		.2byte	0x1
 2485 02b5 50       		.byte	0x50
 2486 02b6 08000000 		.4byte	.LVL62
 2487 02ba 38000000 		.4byte	.LFE10
 2488 02be 0400     		.2byte	0x4
 2489 02c0 F3       		.byte	0xf3
 2490 02c1 01       		.uleb128 0x1
 2491 02c2 50       		.byte	0x50
 2492 02c3 9F       		.byte	0x9f
 2493 02c4 00000000 		.4byte	0
 2494 02c8 00000000 		.4byte	0
 2495              	.LLST21:
 2496 02cc 1A000000 		.4byte	.LVL65
 2497 02d0 22000000 		.4byte	.LVL66
 2498 02d4 0100     		.2byte	0x1
 2499 02d6 52       		.byte	0x52
 2500 02d7 22000000 		.4byte	.LVL66
 2501 02db 26000000 		.4byte	.LVL67
 2502 02df 0700     		.2byte	0x7
 2503 02e1 31       		.byte	0x31
 2504 02e2 73       		.byte	0x73
 2505 02e3 00       		.sleb128 0
 2506 02e4 37       		.byte	0x37
 2507 02e5 1A       		.byte	0x1a
 2508 02e6 24       		.byte	0x24
 2509 02e7 9F       		.byte	0x9f
 2510 02e8 26000000 		.4byte	.LVL67
 2511 02ec 28000000 		.4byte	.LVL68
 2512 02f0 0700     		.2byte	0x7
 2513 02f2 31       		.byte	0x31
 2514 02f3 73       		.byte	0x73
 2515 02f4 7F       		.sleb128 -1
 2516 02f5 37       		.byte	0x37
 2517 02f6 1A       		.byte	0x1a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 81


 2518 02f7 24       		.byte	0x24
 2519 02f8 9F       		.byte	0x9f
 2520 02f9 00000000 		.4byte	0
 2521 02fd 00000000 		.4byte	0
 2522              	.LLST22:
 2523 0301 06000000 		.4byte	.LVL61
 2524 0305 26000000 		.4byte	.LVL67
 2525 0309 0100     		.2byte	0x1
 2526 030b 53       		.byte	0x53
 2527 030c 28000000 		.4byte	.LVL68
 2528 0310 38000000 		.4byte	.LFE10
 2529 0314 0100     		.2byte	0x1
 2530 0316 53       		.byte	0x53
 2531 0317 00000000 		.4byte	0
 2532 031b 00000000 		.4byte	0
 2533              	.LLST23:
 2534 031f 0E000000 		.4byte	.LVL63
 2535 0323 2E000000 		.4byte	.LVL69
 2536 0327 0100     		.2byte	0x1
 2537 0329 55       		.byte	0x55
 2538 032a 00000000 		.4byte	0
 2539 032e 00000000 		.4byte	0
 2540              	.LLST24:
 2541 0332 00000000 		.4byte	.LVL70
 2542 0336 02000000 		.4byte	.LVL71
 2543 033a 0100     		.2byte	0x1
 2544 033c 50       		.byte	0x50
 2545 033d 02000000 		.4byte	.LVL71
 2546 0341 0C000000 		.4byte	.LFE11
 2547 0345 0400     		.2byte	0x4
 2548 0347 F3       		.byte	0xf3
 2549 0348 01       		.uleb128 0x1
 2550 0349 50       		.byte	0x50
 2551 034a 9F       		.byte	0x9f
 2552 034b 00000000 		.4byte	0
 2553 034f 00000000 		.4byte	0
 2554              	.LLST25:
 2555 0353 02000000 		.4byte	.LVL71
 2556 0357 06000000 		.4byte	.LVL72
 2557 035b 0100     		.2byte	0x1
 2558 035d 50       		.byte	0x50
 2559 035e 06000000 		.4byte	.LVL72
 2560 0362 0A000000 		.4byte	.LVL73
 2561 0366 0500     		.2byte	0x5
 2562 0368 70       		.byte	0x70
 2563 0369 00       		.sleb128 0
 2564 036a 32       		.byte	0x32
 2565 036b 25       		.byte	0x25
 2566 036c 9F       		.byte	0x9f
 2567 036d 00000000 		.4byte	0
 2568 0371 00000000 		.4byte	0
 2569              	.LLST26:
 2570 0375 00000000 		.4byte	.LVL74
 2571 0379 1E000000 		.4byte	.LVL77
 2572 037d 0100     		.2byte	0x1
 2573 037f 50       		.byte	0x50
 2574 0380 1E000000 		.4byte	.LVL77
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 82


 2575 0384 C4000000 		.4byte	.LFE4
 2576 0388 0400     		.2byte	0x4
 2577 038a F3       		.byte	0xf3
 2578 038b 01       		.uleb128 0x1
 2579 038c 50       		.byte	0x50
 2580 038d 9F       		.byte	0x9f
 2581 038e 00000000 		.4byte	0
 2582 0392 00000000 		.4byte	0
 2583              	.LLST27:
 2584 0396 6C000000 		.4byte	.LVL86
 2585 039a 74000000 		.4byte	.LVL87
 2586 039e 0500     		.2byte	0x5
 2587 03a0 72       		.byte	0x72
 2588 03a1 00       		.sleb128 0
 2589 03a2 38       		.byte	0x38
 2590 03a3 24       		.byte	0x24
 2591 03a4 9F       		.byte	0x9f
 2592 03a5 74000000 		.4byte	.LVL87
 2593 03a9 76000000 		.4byte	.LVL88
 2594 03ad 0100     		.2byte	0x1
 2595 03af 53       		.byte	0x53
 2596 03b0 76000000 		.4byte	.LVL88
 2597 03b4 8A000000 		.4byte	.LVL90
 2598 03b8 0100     		.2byte	0x1
 2599 03ba 50       		.byte	0x50
 2600 03bb 00000000 		.4byte	0
 2601 03bf 00000000 		.4byte	0
 2602              	.LLST28:
 2603 03c3 34000000 		.4byte	.LVL79
 2604 03c7 38000000 		.4byte	.LVL80
 2605 03cb 0100     		.2byte	0x1
 2606 03cd 55       		.byte	0x55
 2607 03ce 3C000000 		.4byte	.LVL81
 2608 03d2 A2000000 		.4byte	.LVL92
 2609 03d6 0100     		.2byte	0x1
 2610 03d8 55       		.byte	0x55
 2611 03d9 00000000 		.4byte	0
 2612 03dd 00000000 		.4byte	0
 2613              	.LLST29:
 2614 03e1 22000000 		.4byte	.LVL78
 2615 03e5 4E000000 		.4byte	.LVL83
 2616 03e9 0100     		.2byte	0x1
 2617 03eb 50       		.byte	0x50
 2618 03ec 4E000000 		.4byte	.LVL83
 2619 03f0 51000000 		.4byte	.LVL84-1
 2620 03f4 0A00     		.2byte	0xa
 2621 03f6 74       		.byte	0x74
 2622 03f7 00       		.sleb128 0
 2623 03f8 31       		.byte	0x31
 2624 03f9 24       		.byte	0x24
 2625 03fa 03       		.byte	0x3
 2626 03fb 00000000 		.4byte	CapSense_rawFilterData1
 2627 03ff 22       		.byte	0x22
 2628 0400 5A000000 		.4byte	.LVL85
 2629 0404 76000000 		.4byte	.LVL88
 2630 0408 0100     		.2byte	0x1
 2631 040a 50       		.byte	0x50
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 83


 2632 040b 76000000 		.4byte	.LVL88
 2633 040f 8A000000 		.4byte	.LVL90
 2634 0413 0A00     		.2byte	0xa
 2635 0415 74       		.byte	0x74
 2636 0416 00       		.sleb128 0
 2637 0417 31       		.byte	0x31
 2638 0418 24       		.byte	0x24
 2639 0419 03       		.byte	0x3
 2640 041a 00000000 		.4byte	CapSense_rawFilterData1
 2641 041e 22       		.byte	0x22
 2642 041f 00000000 		.4byte	0
 2643 0423 00000000 		.4byte	0
 2644              	.LLST30:
 2645 0427 08000000 		.4byte	.LVL75
 2646 042b 21000000 		.4byte	.LVL78-1
 2647 042f 0100     		.2byte	0x1
 2648 0431 52       		.byte	0x52
 2649 0432 34000000 		.4byte	.LVL79
 2650 0436 38000000 		.4byte	.LVL80
 2651 043a 0200     		.2byte	0x2
 2652 043c 31       		.byte	0x31
 2653 043d 9F       		.byte	0x9f
 2654 043e 3C000000 		.4byte	.LVL81
 2655 0442 3E000000 		.4byte	.LVL82
 2656 0446 0200     		.2byte	0x2
 2657 0448 30       		.byte	0x30
 2658 0449 9F       		.byte	0x9f
 2659 044a 3E000000 		.4byte	.LVL82
 2660 044e A2000000 		.4byte	.LVL92
 2661 0452 0100     		.2byte	0x1
 2662 0454 57       		.byte	0x57
 2663 0455 00000000 		.4byte	0
 2664 0459 00000000 		.4byte	0
 2665              	.LLST31:
 2666 045d 12000000 		.4byte	.LVL76
 2667 0461 A2000000 		.4byte	.LVL92
 2668 0465 0100     		.2byte	0x1
 2669 0467 56       		.byte	0x56
 2670 0468 00000000 		.4byte	0
 2671 046c 00000000 		.4byte	0
 2672              	.LLST32:
 2673 0470 02000000 		.4byte	.LVL93
 2674 0474 06000000 		.4byte	.LVL94
 2675 0478 0200     		.2byte	0x2
 2676 047a 30       		.byte	0x30
 2677 047b 9F       		.byte	0x9f
 2678 047c 06000000 		.4byte	.LVL94
 2679 0480 20000000 		.4byte	.LVL97
 2680 0484 0100     		.2byte	0x1
 2681 0486 54       		.byte	0x54
 2682 0487 22000000 		.4byte	.LVL98
 2683 048b 28000000 		.4byte	.LVL99
 2684 048f 0100     		.2byte	0x1
 2685 0491 54       		.byte	0x54
 2686 0492 00000000 		.4byte	0
 2687 0496 00000000 		.4byte	0
 2688              	.LLST33:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 84


 2689 049a 10000000 		.4byte	.LVL95
 2690 049e 1D000000 		.4byte	.LVL96-1
 2691 04a2 0100     		.2byte	0x1
 2692 04a4 53       		.byte	0x53
 2693 04a5 1D000000 		.4byte	.LVL96-1
 2694 04a9 20000000 		.4byte	.LVL97
 2695 04ad 0700     		.2byte	0x7
 2696 04af 31       		.byte	0x31
 2697 04b0 74       		.byte	0x74
 2698 04b1 00       		.sleb128 0
 2699 04b2 37       		.byte	0x37
 2700 04b3 1A       		.byte	0x1a
 2701 04b4 24       		.byte	0x24
 2702 04b5 9F       		.byte	0x9f
 2703 04b6 20000000 		.4byte	.LVL97
 2704 04ba 22000000 		.4byte	.LVL98
 2705 04be 0700     		.2byte	0x7
 2706 04c0 31       		.byte	0x31
 2707 04c1 74       		.byte	0x74
 2708 04c2 7F       		.sleb128 -1
 2709 04c3 37       		.byte	0x37
 2710 04c4 1A       		.byte	0x1a
 2711 04c5 24       		.byte	0x24
 2712 04c6 9F       		.byte	0x9f
 2713 04c7 00000000 		.4byte	0
 2714 04cb 00000000 		.4byte	0
 2715              		.section	.debug_aranges,"",%progbits
 2716 0000 74000000 		.4byte	0x74
 2717 0004 0200     		.2byte	0x2
 2718 0006 00000000 		.4byte	.Ldebug_info0
 2719 000a 04       		.byte	0x4
 2720 000b 00       		.byte	0
 2721 000c 0000     		.2byte	0
 2722 000e 0000     		.2byte	0
 2723 0010 00000000 		.4byte	.LFB0
 2724 0014 50000000 		.4byte	.LFE0-.LFB0
 2725 0018 00000000 		.4byte	.LFB1
 2726 001c 18000000 		.4byte	.LFE1-.LFB1
 2727 0020 00000000 		.4byte	.LFB2
 2728 0024 16000000 		.4byte	.LFE2-.LFB2
 2729 0028 00000000 		.4byte	.LFB3
 2730 002c 44000000 		.4byte	.LFE3-.LFB3
 2731 0030 00000000 		.4byte	.LFB6
 2732 0034 8C000000 		.4byte	.LFE6-.LFB6
 2733 0038 00000000 		.4byte	.LFB7
 2734 003c 2C000000 		.4byte	.LFE7-.LFB7
 2735 0040 00000000 		.4byte	.LFB8
 2736 0044 1E000000 		.4byte	.LFE8-.LFB8
 2737 0048 00000000 		.4byte	.LFB9
 2738 004c 38000000 		.4byte	.LFE9-.LFB9
 2739 0050 00000000 		.4byte	.LFB10
 2740 0054 38000000 		.4byte	.LFE10-.LFB10
 2741 0058 00000000 		.4byte	.LFB11
 2742 005c 0C000000 		.4byte	.LFE11-.LFB11
 2743 0060 00000000 		.4byte	.LFB4
 2744 0064 C4000000 		.4byte	.LFE4-.LFB4
 2745 0068 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 85


 2746 006c 2C000000 		.4byte	.LFE5-.LFB5
 2747 0070 00000000 		.4byte	0
 2748 0074 00000000 		.4byte	0
 2749              		.section	.debug_ranges,"",%progbits
 2750              	.Ldebug_ranges0:
 2751 0000 00000000 		.4byte	.LFB0
 2752 0004 50000000 		.4byte	.LFE0
 2753 0008 00000000 		.4byte	.LFB1
 2754 000c 18000000 		.4byte	.LFE1
 2755 0010 00000000 		.4byte	.LFB2
 2756 0014 16000000 		.4byte	.LFE2
 2757 0018 00000000 		.4byte	.LFB3
 2758 001c 44000000 		.4byte	.LFE3
 2759 0020 00000000 		.4byte	.LFB6
 2760 0024 8C000000 		.4byte	.LFE6
 2761 0028 00000000 		.4byte	.LFB7
 2762 002c 2C000000 		.4byte	.LFE7
 2763 0030 00000000 		.4byte	.LFB8
 2764 0034 1E000000 		.4byte	.LFE8
 2765 0038 00000000 		.4byte	.LFB9
 2766 003c 38000000 		.4byte	.LFE9
 2767 0040 00000000 		.4byte	.LFB10
 2768 0044 38000000 		.4byte	.LFE10
 2769 0048 00000000 		.4byte	.LFB11
 2770 004c 0C000000 		.4byte	.LFE11
 2771 0050 00000000 		.4byte	.LFB4
 2772 0054 C4000000 		.4byte	.LFE4
 2773 0058 00000000 		.4byte	.LFB5
 2774 005c 2C000000 		.4byte	.LFE5
 2775 0060 00000000 		.4byte	0
 2776 0064 00000000 		.4byte	0
 2777              		.section	.debug_line,"",%progbits
 2778              	.Ldebug_line0:
 2779 0000 2D020000 		.section	.debug_str,"MS",%progbits,1
 2779      02006B00 
 2779      00000201 
 2779      FB0E0D00 
 2779      01010101 
 2780              	.LASF10:
 2781 0000 75696E74 		.ascii	"uint16\000"
 2781      313600
 2782              	.LASF41:
 2783 0007 66696C74 		.ascii	"filteredRawData\000"
 2783      65726564 
 2783      52617744 
 2783      61746100 
 2784              	.LASF55:
 2785 0017 43617053 		.ascii	"CapSense_hysteresis\000"
 2785      656E7365 
 2785      5F687973 
 2785      74657265 
 2785      73697300 
 2786              	.LASF51:
 2787 002b 43617053 		.ascii	"CapSense_sensorOnMask\000"
 2787      656E7365 
 2787      5F73656E 
 2787      736F724F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 86


 2787      6E4D6173 
 2788              	.LASF26:
 2789 0041 66696E67 		.ascii	"fingerThreshold\000"
 2789      65725468 
 2789      72657368 
 2789      6F6C6400 
 2790              	.LASF7:
 2791 0051 6C6F6E67 		.ascii	"long long unsigned int\000"
 2791      206C6F6E 
 2791      6720756E 
 2791      7369676E 
 2791      65642069 
 2792              	.LASF50:
 2793 0068 43617053 		.ascii	"CapSense_sensorSignal\000"
 2793      656E7365 
 2793      5F73656E 
 2793      736F7253 
 2793      69676E61 
 2794              	.LASF22:
 2795 007e 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 2795      656E7365 
 2795      5F496E69 
 2795      7469616C 
 2795      697A6545 
 2796              	.LASF43:
 2797 00a2 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 2797      656E7365 
 2797      5F557064 
 2797      61746545 
 2797      6E61626C 
 2798              	.LASF6:
 2799 00c2 6C6F6E67 		.ascii	"long long int\000"
 2799      206C6F6E 
 2799      6720696E 
 2799      7400
 2800              	.LASF0:
 2801 00d0 7369676E 		.ascii	"signed char\000"
 2801      65642063 
 2801      68617200 
 2802              	.LASF36:
 2803 00dc 43617053 		.ascii	"CapSense_DisableWidget\000"
 2803      656E7365 
 2803      5F446973 
 2803      61626C65 
 2803      57696467 
 2804              	.LASF31:
 2805 00f3 72617749 		.ascii	"rawIndex\000"
 2805      6E646578 
 2805      00
 2806              	.LASF32:
 2807 00fc 6E756D62 		.ascii	"numberOfSensors\000"
 2807      65724F66 
 2807      53656E73 
 2807      6F727300 
 2808              	.LASF33:
 2809 010c 73746174 		.ascii	"state\000"
 2809      6500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 87


 2810              	.LASF4:
 2811 0112 6C6F6E67 		.ascii	"long int\000"
 2811      20696E74 
 2811      00
 2812              	.LASF34:
 2813 011b 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 2813      656E7365 
 2813      5F436865 
 2813      636B4973 
 2813      416E7957 
 2814              	.LASF9:
 2815 013b 75696E74 		.ascii	"uint8\000"
 2815      3800
 2816              	.LASF13:
 2817 0141 646F7562 		.ascii	"double\000"
 2817      6C6500
 2818              	.LASF47:
 2819 0148 43617053 		.ascii	"CapSense_widgetNumber\000"
 2819      656E7365 
 2819      5F776964 
 2819      6765744E 
 2819      756D6265 
 2820              	.LASF11:
 2821 015e 75696E74 		.ascii	"uint32\000"
 2821      333200
 2822              	.LASF27:
 2823 0165 68797374 		.ascii	"hysteresis\000"
 2823      65726573 
 2823      697300
 2824              	.LASF37:
 2825 0170 43617053 		.ascii	"CapSense_IIR4Filter\000"
 2825      656E7365 
 2825      5F494952 
 2825      3446696C 
 2825      74657200 
 2826              	.LASF60:
 2827 0184 43617053 		.ascii	"CapSense_ScanSensor\000"
 2827      656E7365 
 2827      5F536361 
 2827      6E53656E 
 2827      736F7200 
 2828              	.LASF8:
 2829 0198 756E7369 		.ascii	"unsigned int\000"
 2829      676E6564 
 2829      20696E74 
 2829      00
 2830              	.LASF5:
 2831 01a5 6C6F6E67 		.ascii	"long unsigned int\000"
 2831      20756E73 
 2831      69676E65 
 2831      6420696E 
 2831      7400
 2832              	.LASF49:
 2833 01b7 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 2833      656E7365 
 2833      5F73656E 
 2833      736F7242 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 88


 2833      6173656C 
 2834              	.LASF58:
 2835 01d2 43617053 		.ascii	"CapSense_rawDataIndex\000"
 2835      656E7365 
 2835      5F726177 
 2835      44617461 
 2835      496E6465 
 2836              	.LASF3:
 2837 01e8 73686F72 		.ascii	"short unsigned int\000"
 2837      7420756E 
 2837      7369676E 
 2837      65642069 
 2837      6E7400
 2838              	.LASF19:
 2839 01fb 73656E73 		.ascii	"sensor\000"
 2839      6F7200
 2840              	.LASF46:
 2841 0202 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2841      656E7365 
 2841      5F73656E 
 2841      736F7245 
 2841      6E61626C 
 2842              	.LASF38:
 2843 021c 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2843      656E7365 
 2843      5F557064 
 2843      61746553 
 2843      656E736F 
 2844              	.LASF39:
 2845 023a 63616C63 		.ascii	"calc\000"
 2845      00
 2846              	.LASF28:
 2847 023f 6465626F 		.ascii	"debounce\000"
 2847      756E6365 
 2847      00
 2848              	.LASF16:
 2849 0248 73697A65 		.ascii	"sizetype\000"
 2849      74797065 
 2849      00
 2850              	.LASF35:
 2851 0251 43617053 		.ascii	"CapSense_EnableWidget\000"
 2851      656E7365 
 2851      5F456E61 
 2851      626C6557 
 2851      69646765 
 2852              	.LASF15:
 2853 0267 6C6F6E67 		.ascii	"long double\000"
 2853      20646F75 
 2853      626C6500 
 2854              	.LASF18:
 2855 0273 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2855      656E7365 
 2855      5F496E69 
 2855      7469616C 
 2855      697A6553 
 2856              	.LASF29:
 2857 0295 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 89


 2857      656E7365 
 2857      5F436865 
 2857      636B4973 
 2857      53656E73 
 2858              	.LASF23:
 2859 02b2 656E4D61 		.ascii	"enMask\000"
 2859      736B00
 2860              	.LASF54:
 2861 02b9 43617053 		.ascii	"CapSense_noiseThreshold\000"
 2861      656E7365 
 2861      5F6E6F69 
 2861      73655468 
 2861      72657368 
 2862              	.LASF53:
 2863 02d1 43617053 		.ascii	"CapSense_fingerThreshold\000"
 2863      656E7365 
 2863      5F66696E 
 2863      67657254 
 2863      68726573 
 2864              	.LASF45:
 2865 02ea 43617053 		.ascii	"CapSense_rawFilterData1\000"
 2865      656E7365 
 2865      5F726177 
 2865      46696C74 
 2865      65724461 
 2866              	.LASF12:
 2867 0302 666C6F61 		.ascii	"float\000"
 2867      7400
 2868              	.LASF30:
 2869 0308 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 2869      656E7365 
 2869      5F436865 
 2869      636B4973 
 2869      57696467 
 2870              	.LASF1:
 2871 0325 756E7369 		.ascii	"unsigned char\000"
 2871      676E6564 
 2871      20636861 
 2871      7200
 2872              	.LASF20:
 2873 0333 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 2873      656E7365 
 2873      5F496E69 
 2873      7469616C 
 2873      697A6541 
 2874              	.LASF42:
 2875 0353 6E6F6973 		.ascii	"noiseThreshold\000"
 2875      65546872 
 2875      6573686F 
 2875      6C6400
 2876              	.LASF2:
 2877 0362 73686F72 		.ascii	"short int\000"
 2877      7420696E 
 2877      7400
 2878              	.LASF21:
 2879 036c 77696467 		.ascii	"widget\000"
 2879      657400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 90


 2880              	.LASF24:
 2881 0373 6F6E4D61 		.ascii	"onMask\000"
 2881      736B00
 2882              	.LASF63:
 2883 037a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2883      43313120 
 2883      352E342E 
 2883      31203230 
 2883      31363036 
 2884 03ad 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2884      20726576 
 2884      6973696F 
 2884      6E203233 
 2884      37373135 
 2885 03e0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2885      66756E63 
 2885      74696F6E 
 2885      2D736563 
 2885      74696F6E 
 2886              	.LASF17:
 2887 0408 43617053 		.ascii	"CapSense_BaseInit\000"
 2887      656E7365 
 2887      5F426173 
 2887      65496E69 
 2887      7400
 2888              	.LASF52:
 2889 041a 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 2889      656E7365 
 2889      5F6C6F77 
 2889      42617365 
 2889      6C696E65 
 2890              	.LASF56:
 2891 0437 43617053 		.ascii	"CapSense_debounce\000"
 2891      656E7365 
 2891      5F646562 
 2891      6F756E63 
 2891      6500
 2892              	.LASF65:
 2893 0449 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Documents\\PSoC Creator\\wes"
 2893      73657273 
 2893      5C4A6566 
 2893      66536E79 
 2893      6465725C 
 2894 0477 746F6E5F 		.ascii	"ton_1\\weston_1.cydsn\000"
 2894      315C7765 
 2894      73746F6E 
 2894      5F312E63 
 2894      7964736E 
 2895              	.LASF48:
 2896 048c 43617053 		.ascii	"CapSense_sensorBaseline\000"
 2896      656E7365 
 2896      5F73656E 
 2896      736F7242 
 2896      6173656C 
 2897              	.LASF14:
 2898 04a4 63686172 		.ascii	"char\000"
 2898      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccG3vFpC.s 			page 91


 2899              	.LASF25:
 2900 04a9 6465626F 		.ascii	"debounceIndex\000"
 2900      756E6365 
 2900      496E6465 
 2900      7800
 2901              	.LASF64:
 2902 04b7 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 2902      72617465 
 2902      645F536F 
 2902      75726365 
 2902      5C50536F 
 2903              	.LASF44:
 2904 04de 43617053 		.ascii	"CapSense_sensorRaw\000"
 2904      656E7365 
 2904      5F73656E 
 2904      736F7252 
 2904      617700
 2905              	.LASF62:
 2906 04f1 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2906      656E7365 
 2906      5F536361 
 2906      6E456E61 
 2906      626C6564 
 2907              	.LASF57:
 2908 050d 43617053 		.ascii	"CapSense_debounceCounter\000"
 2908      656E7365 
 2908      5F646562 
 2908      6F756E63 
 2908      65436F75 
 2909              	.LASF40:
 2910 0526 74656D70 		.ascii	"tempRaw\000"
 2910      52617700 
 2911              	.LASF61:
 2912 052e 43617053 		.ascii	"CapSense_IsBusy\000"
 2912      656E7365 
 2912      5F497342 
 2912      75737900 
 2913              	.LASF59:
 2914 053e 43617053 		.ascii	"CapSense_numberOfSensors\000"
 2914      656E7365 
 2914      5F6E756D 
 2914      6265724F 
 2914      6653656E 
 2915              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
