ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_1_BaseInit
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_1_BaseInit, %function
  25              	CapSense_1_BaseInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense_1_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * File Name: CapSense_1_CSHL.c
   3:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #include "CapSense_1_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData2[CapSense_1_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #elif ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)   | \
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 2


  31:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif  /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         *    (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorBaseline[CapSense_1_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorBaselineLow[CapSense_1_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorSignal[CapSense_1_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorOnMask[(((CapSense_1_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineResetCnt[CapSense_1_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     100u, 100u, 
  50:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     20u, 20u, 
  54:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     10u, 10u, 
  58:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     5u, 5u, 
  62:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, 0u, 0u, 
  66:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, /* Button0__BTN */
  70:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button1__BTN */
  71:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  72:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  73:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  74:Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_numberOfSensors[] = {
  75:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button0__BTN */
  76:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button1__BTN */
  77:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  78:Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  79:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  80:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  81:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  82:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  83:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
  84:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_BaseInit
  85:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  86:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  87:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 3


  88:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
  89:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal to raw count value. 
  90:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Resets to zero CapSense_1_sensorBaselineLow[sensor] and 
  91:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[sensor] array element.
  92:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads CapSense_1_debounceCounter[sensor] array element with initial 
  93:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  value equal CapSense_1_debounce[].
  94:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_rawFilterData2[sensor] and 
  95:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[sensor] array element with an 
  96:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
  97:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  98:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
  99:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 100:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 101:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 102:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 103:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 104:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 105:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 106:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 107:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 108:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 109:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 110:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 111:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 112:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 113:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 114:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 115:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 116:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 117:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 118:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 119:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 120:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 121:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 122:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 123:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_BaseInit(uint8 sensor) 
 124:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
  28              		.loc 1 124 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 10B4     		push	{r4}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 4, -4
 125:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_TOTAL_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || \
 126:Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_TOTAL_GENERICS_COUNT))
 127:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 widget = CapSense_1_widgetNumber[sensor];
  37              		.loc 1 127 0
  38 0002 0B4B     		ldr	r3, .L3
  39 0004 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
  40              	.LVL1:
 128:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* ((CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) 
 129:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 130:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)
 131:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 debounceIndex;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 4


 132:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) */
 133:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 134:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 135:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 136:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 137:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 138:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 139:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 140:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Initialize Baseline */
 141:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaseline[sensor] = CapSense_1_sensorRaw[sensor];
  41              		.loc 1 141 0
  42 0006 0B4B     		ldr	r3, .L3+4
  43 0008 33F81030 		ldrh	r3, [r3, r0, lsl #1]
  44 000c 0A49     		ldr	r1, .L3+8
  45 000e 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
 142:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaselineLow[sensor] = 0u;
  46              		.loc 1 142 0
  47 0012 0021     		movs	r1, #0
  48 0014 094C     		ldr	r4, .L3+12
  49 0016 2154     		strb	r1, [r4, r0]
 143:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = 0u;
  50              		.loc 1 143 0
  51 0018 094C     		ldr	r4, .L3+16
  52 001a 24F81010 		strh	r1, [r4, r0, lsl #1]	@ movhi
 144:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 145:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_debounceCounter[widget] =  CapSense_1_debounce[widget];
  53              		.loc 1 145 0
  54 001e 0949     		ldr	r1, .L3+20
  55 0020 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
  56 0022 0949     		ldr	r1, .L3+24
  57 0024 8C54     		strb	r4, [r1, r2]
 146:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 147:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 148:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) |\
 149:Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 150:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 151:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 152:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_sensorRaw[sensor];
 153:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 154:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif ((CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) |\
 155:Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) |\
 156:Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) |\
 157:Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER) |\
 158:Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
 159:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 160:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
  58              		.loc 1 160 0
  59 0026 094A     		ldr	r2, .L3+28
  60              	.LVL2:
  61 0028 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
 161:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 162:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 163:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 164:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
 165:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             *   (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 166:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             */
 167:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 5


 168:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 169:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 170:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 171:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 172:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
  62              		.loc 1 172 0
  63 002c 10BC     		pop	{r4}
  64              		.cfi_restore 4
  65              		.cfi_def_cfa_offset 0
  66 002e 7047     		bx	lr
  67              	.L4:
  68              		.align	2
  69              	.L3:
  70 0030 00000000 		.word	CapSense_1_widgetNumber
  71 0034 00000000 		.word	CapSense_1_sensorRaw
  72 0038 00000000 		.word	CapSense_1_sensorBaseline
  73 003c 00000000 		.word	CapSense_1_sensorBaselineLow
  74 0040 00000000 		.word	CapSense_1_sensorSignal
  75 0044 00000000 		.word	.LANCHOR0
  76 0048 00000000 		.word	.LANCHOR1
  77 004c 00000000 		.word	CapSense_1_rawFilterData1
  78              		.cfi_endproc
  79              	.LFE0:
  80              		.size	CapSense_1_BaseInit, .-CapSense_1_BaseInit
  81              		.section	.text.CapSense_1_InitializeSensorBaseline,"ax",%progbits
  82              		.align	2
  83              		.global	CapSense_1_InitializeSensorBaseline
  84              		.thumb
  85              		.thumb_func
  86              		.type	CapSense_1_InitializeSensorBaseline, %function
  87              	CapSense_1_InitializeSensorBaseline:
  88              	.LFB1:
 173:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 174:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 175:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeSensorBaseline
 177:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 178:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 179:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 180:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 181:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 182:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 183:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 184:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  enabled.
 185:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 186:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 187:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 188:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 189:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 190:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 191:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 192:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 193:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 194:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 195:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 196:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeSensorBaseline(uint8 sensor)
 197:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 6


 198:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
  89              		.loc 1 198 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL3:
  94 0000 10B5     		push	{r4, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 4, -8
  97              		.cfi_offset 14, -4
  98 0002 0446     		mov	r4, r0
 199:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Scan sensor */
 200:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanSensor(sensor);
  99              		.loc 1 200 0
 100 0004 FFF7FEFF 		bl	CapSense_1_ScanSensor
 101              	.LVL4:
 102              	.L6:
 201:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 103              		.loc 1 201 0 discriminator 1
 104 0008 FFF7FEFF 		bl	CapSense_1_IsBusy
 105              	.LVL5:
 106 000c 0028     		cmp	r0, #0
 107 000e FBD1     		bne	.L6
 202:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 203:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 204:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 205:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 206:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN)
 207:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 208:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(sensor);
 108              		.loc 1 208 0
 109 0010 2046     		mov	r0, r4
 110 0012 FFF7FEFF 		bl	CapSense_1_BaseInit
 111              	.LVL6:
 112 0016 10BD     		pop	{r4, pc}
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	CapSense_1_InitializeSensorBaseline, .-CapSense_1_InitializeSensorBaseline
 116              		.section	.text.CapSense_1_InitializeAllBaselines,"ax",%progbits
 117              		.align	2
 118              		.global	CapSense_1_InitializeAllBaselines
 119              		.thumb
 120              		.thumb_func
 121              		.type	CapSense_1_InitializeAllBaselines, %function
 122              	CapSense_1_InitializeAllBaselines:
 123              	.LFB2:
 209:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 210:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 211:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 212:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH0)
 213:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 214:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 215:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 216:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 217:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 218:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH1)
 219:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 7


 220:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 221:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor + CapSense_1_TOTAL_SENSOR_COUNT__CH0);
 222:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 223:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 224:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN) */
 225:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 226:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 227:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 228:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 229:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeAllBaselines
 230:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 231:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 232:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 233:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Uses the CapSense_1_InitializeSensorBaseline function to loads the 
 234:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] array with an initial values by scanning 
 235:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 236:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 237:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 238:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 239:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 240:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 241:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 242:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 243:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 244:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 245:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 246:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 247:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeAllBaselines(void)
 249:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 250:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 124              		.loc 1 250 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 10B5     		push	{r4, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132              	.LVL7:
 251:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 252:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 253:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 254:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 133              		.loc 1 254 0
 134 0002 0024     		movs	r4, #0
 135 0004 04E0     		b	.L9
 136              	.LVL8:
 137              	.L10:
 255:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 256:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_InitializeSensorBaseline(i);
 138              		.loc 1 256 0 discriminator 3
 139 0006 2046     		mov	r0, r4
 140 0008 FFF7FEFF 		bl	CapSense_1_InitializeSensorBaseline
 141              	.LVL9:
 254:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 142              		.loc 1 254 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 8


 143 000c 0134     		adds	r4, r4, #1
 144              	.LVL10:
 145 000e E4B2     		uxtb	r4, r4
 146              	.LVL11:
 147              	.L9:
 254:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 148              		.loc 1 254 0 is_stmt 0 discriminator 1
 149 0010 012C     		cmp	r4, #1
 150 0012 F8D9     		bls	.L10
 257:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 258:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 151              		.loc 1 258 0 is_stmt 1
 152 0014 10BD     		pop	{r4, pc}
 153              		.cfi_endproc
 154              	.LFE2:
 155              		.size	CapSense_1_InitializeAllBaselines, .-CapSense_1_InitializeAllBaselines
 156 0016 00BF     		.section	.text.CapSense_1_InitializeEnabledBaselines,"ax",%progbits
 157              		.align	2
 158              		.global	CapSense_1_InitializeEnabledBaselines
 159              		.thumb
 160              		.thumb_func
 161              		.type	CapSense_1_InitializeEnabledBaselines, %function
 162              	CapSense_1_InitializeEnabledBaselines:
 163              	.LFB3:
 259:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 260:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 261:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 262:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeEnabledBaselines
 263:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 264:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 265:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 266:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 267:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 268:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 269:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The raw data filters are initialized if enabled.
 270:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 271:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 272:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 273:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 274:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 275:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 276:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 277:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 278:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 279:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 280:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 281:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeEnabledBaselines(void)
 282:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              
 283:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 164              		.loc 1 283 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 10B5     		push	{r4, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 9


 284:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 285:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 286:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 287:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 288:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanEnabledWidgets();
 172              		.loc 1 288 0
 173 0002 FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
 174              	.LVL12:
 175              	.L13:
 289:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 176              		.loc 1 289 0 discriminator 1
 177 0006 FFF7FEFF 		bl	CapSense_1_IsBusy
 178              	.LVL13:
 179 000a 0028     		cmp	r0, #0
 180 000c FBD1     		bne	.L13
 181 000e 0024     		movs	r4, #0
 182 0010 11E0     		b	.L14
 183              	.LVL14:
 184              	.L16:
 290:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 291:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 292:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 293:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 294:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 295:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 296:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 185              		.loc 1 296 0
 186 0012 E208     		lsrs	r2, r4, #3
 297:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 187              		.loc 1 297 0
 188 0014 04F00701 		and	r1, r4, #7
 189 0018 0123     		movs	r3, #1
 190 001a 8B40     		lsls	r3, r3, r1
 191              	.LVL15:
 298:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 299:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 300:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) == 0u)
 192              		.loc 1 300 0
 193 001c 0749     		ldr	r1, .L18
 194 001e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 195 0020 1342     		tst	r3, r2
 196 0022 03D1     		bne	.L15
 301:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 302:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorRaw[i] = 0u;
 197              		.loc 1 302 0
 198 0024 0022     		movs	r2, #0
 199 0026 064B     		ldr	r3, .L18+4
 200              	.LVL16:
 201 0028 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 202              	.L15:
 303:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 304:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 305:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize baselines */
 306:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(i);
 203              		.loc 1 306 0 discriminator 2
 204 002c 2046     		mov	r0, r4
 205 002e FFF7FEFF 		bl	CapSense_1_BaseInit
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 10


 206              	.LVL17:
 294:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 207              		.loc 1 294 0 discriminator 2
 208 0032 0134     		adds	r4, r4, #1
 209              	.LVL18:
 210 0034 E4B2     		uxtb	r4, r4
 211              	.LVL19:
 212              	.L14:
 294:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 213              		.loc 1 294 0 is_stmt 0 discriminator 1
 214 0036 012C     		cmp	r4, #1
 215 0038 EBD9     		bls	.L16
 307:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 308:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }  
 216              		.loc 1 308 0 is_stmt 1
 217 003a 10BD     		pop	{r4, pc}
 218              	.LVL20:
 219              	.L19:
 220              		.align	2
 221              	.L18:
 222 003c 00000000 		.word	CapSense_1_sensorEnableMask
 223 0040 00000000 		.word	CapSense_1_sensorRaw
 224              		.cfi_endproc
 225              	.LFE3:
 226              		.size	CapSense_1_InitializeEnabledBaselines, .-CapSense_1_InitializeEnabledBaselines
 227              		.section	.text.CapSense_1_CheckIsSensorActive,"ax",%progbits
 228              		.align	2
 229              		.global	CapSense_1_CheckIsSensorActive
 230              		.thumb
 231              		.thumb_func
 232              		.type	CapSense_1_CheckIsSensorActive, %function
 233              	CapSense_1_CheckIsSensorActive:
 234              	.LFB6:
 309:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 310:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 311:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 312:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateSensorBaseline
 313:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 314:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 315:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 316:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the 
 317:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 318:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 319:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  it in CapSense_1_SensorSignal[sensor]. 
 320:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 321:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 322:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 323:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  that noise threshold.
 324:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 325:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  calculation.
 326:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 327:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 328:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 329:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 330:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 331:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 332:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 11


 333:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 334:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 335:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 336:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 337:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 338:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 339:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 340:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 341:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 342:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 343:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 344:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 345:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 346:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 347:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 348:Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateSensorBaseline(uint8 sensor)
 349:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 350:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 351:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint32 calc;
 352:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 tempRaw;
 353:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 filteredRawData;
 354:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 355:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 noiseThreshold = CapSense_1_noiseThreshold[widget];
 356:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 357:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 358:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 359:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 360:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 361:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 362:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 363:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     filteredRawData = CapSense_1_sensorRaw[sensor];
 364:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 365:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)
 366:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 367:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_MedianFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 368:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                         CapSense_1_rawFilterData2[sensor]);
 369:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 370:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 371:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 372:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)
 373:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 374:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_AveragingFilter(filteredRawData, CapSense_1_rawFilterData1[sen
 375:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                            CapSense_1_rawFilterData2[sensor]);
 376:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 377:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 378:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 379:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)
 380:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR2Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 381:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 382:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 383:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)
 384:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR4Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 385:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 386:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 387:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)
 388:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_JitterFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 389:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 12


 390:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 391:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)
 392:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR8Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 393:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 394:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 395:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)
 396:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR16Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]
 397:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 398:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 399:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 400:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 401:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) */
 402:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 403:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING)
 404:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_CalculateThresholds(sensor);
 405:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING) */
 406:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 407:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 408:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Baseline calculation */
 409:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 410:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if(filteredRawData >= CapSense_1_sensorBaseline[sensor])
 411:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 412:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData - CapSense_1_sensorBaseline[sensor];
 413:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 414:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 415:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 416:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 417:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = CapSense_1_sensorBaseline[sensor] - filteredRawData;
 418:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 419:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 420:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 421:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 422:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 423:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_LOW_BASELINE_RESET)
 424:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 425:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 426:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 427:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 428:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 429:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 430:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor]++;
 431:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 432:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 433:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 434:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 435:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 436:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 437:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 438:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 439:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                    && (widget == 0u)))
 440:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 441:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 442:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make full Baseline 23 bits */
 443:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc = (uint32) CapSense_1_sensorBaseline[sensor] << 8u;
 444:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc |= (uint32) CapSense_1_sensorBaselineLow[sensor];
 445:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 446:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Add Raw Data to Baseline */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 13


 447:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc += filteredRawData;
 448:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 449:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Sub the high Baseline */
 450:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc -= CapSense_1_sensorBaseline[sensor];
 451:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 452:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Put Baseline and BaselineLow */
 453:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 454:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 455:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 456:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 457:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 458:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 459:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 460:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 461:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 462:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 463:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 464:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 465:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8)
 466:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Over flow defence for uint8 */
 467:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 468:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 469:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = 0xFFu;
 470:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 471:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else 
 472:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 473:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = ((uint8) tempRaw);
 474:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 475:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 476:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorSignal[sensor] = ((uint16) tempRaw);
 477:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8) */
 478:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 479:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 480:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 481:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Signal is zero */
 482:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorSignal[sensor] = 0u;
 483:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 484:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 485:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 486:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 487:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 488:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 489:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 490:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 491:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 492:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 493:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateEnabledBaselines
 494:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 495:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 496:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 497:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the 
 498:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines 
 499:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  for enabled sensors.
 500:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 501:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 502:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 503:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 14


 504:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 505:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 506:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 507:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 508:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 509:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 510:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 511:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 512:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 513:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 514:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 515:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 516:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 517:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 518:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 519:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 520:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 521:Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateEnabledBaselines(void)
 522:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 523:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 524:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 525:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 526:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 527:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 528:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 529:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 530:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 531:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 532:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 533:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 534:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 535:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 536:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 537:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 538:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 539:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 540:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsSensorActive
 542:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 543:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 544:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 545:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares the CapSense_1_SensorSignal[sensor] array element to finger
 546:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 547:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 548:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  based on whether the sensor is currently active. 
 549:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 550:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 551:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The debounce counter added to the sensor active transition.
 552:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This function updates CapSense_1_SensorOnMask[] array element.
 553:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 554:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 555:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 556:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 557:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 558:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 559:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 560:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 15


 561:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 562:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 563:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 564:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 565:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 566:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 567:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] - used to store sensors on/off state.
 568:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[0] contains the masked bits for sensors 
 569:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 570:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 571:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 572:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor is inactive.
 573:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor is active.
 574:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 575:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 576:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 577:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 578:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 579:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsSensorActive(uint8 sensor)
 580:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                   
 581:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 235              		.loc 1 581 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL21:
 240 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 241              		.cfi_def_cfa_offset 20
 242              		.cfi_offset 4, -20
 243              		.cfi_offset 5, -16
 244              		.cfi_offset 6, -12
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 582:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounceIndex;
 583:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Get On/Off mask */
 584:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos = (sensor >> 3u);
 247              		.loc 1 584 0
 248 0002 C408     		lsrs	r4, r0, #3
 249              	.LVL22:
 585:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 250              		.loc 1 585 0
 251 0004 00F00702 		and	r2, r0, #7
 252 0008 0123     		movs	r3, #1
 253 000a 9340     		lsls	r3, r3, r2
 254 000c DBB2     		uxtb	r3, r3
 255              	.LVL23:
 586:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Prepare to find debounce counter index */
 587:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 256              		.loc 1 587 0
 257 000e 1A4A     		ldr	r2, .L27
 258 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 588:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 fingerThreshold = CapSense_1_fingerThreshold[widget];
 259              		.loc 1 588 0
 260 0012 1A4D     		ldr	r5, .L27+4
 261 0014 05EB4206 		add	r6, r5, r2, lsl #1
 262 0018 B788     		ldrh	r7, [r6, #4]
 263              	.LVL24:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 16


 589:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 hysteresis = CapSense_1_hysteresis[widget];
 264              		.loc 1 589 0
 265 001a 3189     		ldrh	r1, [r6, #8]
 266              	.LVL25:
 590:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounce = CapSense_1_debounce[widget];
 267              		.loc 1 590 0
 268 001c AE5C     		ldrb	r6, [r5, r2]	@ zero_extendqisi2
 269              	.LVL26:
 591:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 592:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     debounceIndex = widget;
 593:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 594:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 595:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Was on */
 596:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if (0u != (CapSense_1_sensorOnMask[pos] & onMask))
 270              		.loc 1 596 0
 271 001e 184D     		ldr	r5, .L27+8
 272 0020 2D5D     		ldrb	r5, [r5, r4]	@ zero_extendqisi2
 273 0022 2B42     		tst	r3, r5
 274 0024 0DD0     		beq	.L21
 597:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 598:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis minus */
 599:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 275              		.loc 1 599 0
 276 0026 DFF860E0 		ldr	lr, .L27+16
 277 002a 3EF81000 		ldrh	r0, [lr, r0, lsl #1]
 278              	.LVL27:
 279 002e 791A     		subs	r1, r7, r1
 280              	.LVL28:
 281 0030 8842     		cmp	r0, r1
 282 0032 1ADA     		bge	.L22
 600:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 601:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorOnMask[pos] &= (uint8)~onMask;
 283              		.loc 1 601 0
 284 0034 25EA0305 		bic	r5, r5, r3
 285 0038 1149     		ldr	r1, .L27+8
 286 003a 0D55     		strb	r5, [r1, r4]
 602:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce; 
 287              		.loc 1 602 0
 288 003c 1149     		ldr	r1, .L27+12
 289 003e 8E54     		strb	r6, [r1, r2]
 290 0040 13E0     		b	.L22
 291              	.LVL29:
 292              	.L21:
 603:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 604:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 605:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else    /* Was off */
 606:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 607:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis plus */
 608:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 293              		.loc 1 608 0
 294 0042 DFF844E0 		ldr	lr, .L27+16
 295 0046 3EF81000 		ldrh	r0, [lr, r0, lsl #1]
 296              	.LVL30:
 297 004a 3944     		add	r1, r1, r7
 298              	.LVL31:
 299 004c 8842     		cmp	r0, r1
 300 004e 0ADD     		ble	.L23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 17


 609:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 610:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor active, decrement debounce counter */
 611:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (CapSense_1_debounceCounter[debounceIndex] <= 1u)
 301              		.loc 1 611 0
 302 0050 0C49     		ldr	r1, .L27+12
 303 0052 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 304 0054 0129     		cmp	r1, #1
 305 0056 02D8     		bhi	.L24
 612:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 613:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorOnMask[pos] |= onMask; 
 306              		.loc 1 613 0
 307 0058 1D43     		orrs	r5, r5, r3
 308 005a 0948     		ldr	r0, .L27+8
 309 005c 0555     		strb	r5, [r0, r4]
 310              	.L24:
 614:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 615:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex]--;
 311              		.loc 1 615 0
 312 005e 0139     		subs	r1, r1, #1
 313 0060 0848     		ldr	r0, .L27+12
 314 0062 8154     		strb	r1, [r0, r2]
 315 0064 01E0     		b	.L22
 316              	.L23:
 616:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 617:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 618:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 619:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 620:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 317              		.loc 1 620 0
 318 0066 0749     		ldr	r1, .L27+12
 319 0068 8E54     		strb	r6, [r1, r2]
 320              	.L22:
 621:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 622:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 623:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 624:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (((CapSense_1_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 321              		.loc 1 624 0
 322 006a 054A     		ldr	r2, .L27+8
 323              	.LVL32:
 324 006c 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 325 006e 1840     		ands	r0, r3, r0
 326 0070 00D0     		beq	.L25
 327 0072 0120     		movs	r0, #1
 328              	.L25:
 625:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 329              		.loc 1 625 0 discriminator 4
 330 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 331              	.LVL33:
 332              	.L28:
 333 0076 00BF     		.align	2
 334              	.L27:
 335 0078 00000000 		.word	CapSense_1_widgetNumber
 336 007c 00000000 		.word	.LANCHOR0
 337 0080 00000000 		.word	CapSense_1_sensorOnMask
 338 0084 00000000 		.word	.LANCHOR1
 339 0088 00000000 		.word	CapSense_1_sensorSignal
 340              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 18


 341              	.LFE6:
 342              		.size	CapSense_1_CheckIsSensorActive, .-CapSense_1_CheckIsSensorActive
 343              		.section	.text.CapSense_1_CheckIsWidgetActive,"ax",%progbits
 344              		.align	2
 345              		.global	CapSense_1_CheckIsWidgetActive
 346              		.thumb
 347              		.thumb_func
 348              		.type	CapSense_1_CheckIsWidgetActive, %function
 349              	CapSense_1_CheckIsWidgetActive:
 350              	.LFB7:
 626:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 627:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 628:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 629:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsWidgetActive
 630:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 631:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 632:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 633:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Use function CapSense_1_CheckIsSensorActive() to update 
 634:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] for all sensors within the widget.
 635:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 636:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active.
 637:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 638:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  col and row to return widget active status.
 639:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 640:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 641:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 642:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 643:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 644:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 645:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 646:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 647:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 648:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 649:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 650:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 651:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsWidgetActive(uint8 widget)
 652:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 653:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 351              		.loc 1 653 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              	.LVL34:
 356 0000 70B5     		push	{r4, r5, r6, lr}
 357              		.cfi_def_cfa_offset 16
 358              		.cfi_offset 4, -16
 359              		.cfi_offset 5, -12
 360              		.cfi_offset 6, -8
 361              		.cfi_offset 14, -4
 654:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 362              		.loc 1 654 0
 363 0002 094B     		ldr	r3, .L34
 364 0004 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 365              	.LVL35:
 655:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 366              		.loc 1 655 0
 367 0006 1844     		add	r0, r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 19


 368              	.LVL36:
 369 0008 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 370 000a 2544     		add	r5, r5, r4
 371 000c EDB2     		uxtb	r5, r5
 372              	.LVL37:
 656:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 373              		.loc 1 656 0
 374 000e 0026     		movs	r6, #0
 375              	.LVL38:
 376              	.L31:
 657:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 658:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Check all sensors of the widget */
 659:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 660:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 661:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_CheckIsSensorActive(rawIndex) != 0u)
 377              		.loc 1 661 0
 378 0010 2046     		mov	r0, r4
 379 0012 FFF7FEFF 		bl	CapSense_1_CheckIsSensorActive
 380              	.LVL39:
 381 0016 00B1     		cbz	r0, .L30
 662:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 663:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_SENSOR_1_IS_ACTIVE;
 382              		.loc 1 663 0
 383 0018 0126     		movs	r6, #1
 384              	.LVL40:
 385              	.L30:
 664:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 665:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 386              		.loc 1 665 0
 387 001a 0134     		adds	r4, r4, #1
 388              	.LVL41:
 389 001c E4B2     		uxtb	r4, r4
 390              	.LVL42:
 666:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 667:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 391              		.loc 1 667 0
 392 001e A542     		cmp	r5, r4
 393 0020 F6D8     		bhi	.L31
 668:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 669:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 670:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 671:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 672:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 394              		.loc 1 672 0
 395 0022 3046     		mov	r0, r6
 396 0024 70BD     		pop	{r4, r5, r6, pc}
 397              	.LVL43:
 398              	.L35:
 399 0026 00BF     		.align	2
 400              	.L34:
 401 0028 00000000 		.word	.LANCHOR2
 402              		.cfi_endproc
 403              	.LFE7:
 404              		.size	CapSense_1_CheckIsWidgetActive, .-CapSense_1_CheckIsWidgetActive
 405              		.section	.text.CapSense_1_CheckIsAnyWidgetActive,"ax",%progbits
 406              		.align	2
 407              		.global	CapSense_1_CheckIsAnyWidgetActive
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 20


 408              		.thumb
 409              		.thumb_func
 410              		.type	CapSense_1_CheckIsAnyWidgetActive, %function
 411              	CapSense_1_CheckIsAnyWidgetActive:
 412              	.LFB8:
 673:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 674:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 675:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 676:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsAnyWidgetActive
 677:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 678:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 679:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 680:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares all sensors of the CapSense_1_signal[] array to their finger 
 681:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold. Calls CapSense_1_CheckIsWidgetActive() for each widget so 
 682:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  the CapSense_1_SensorOnMask[] array is up to date after calling this 
 683:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  function.
 684:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 685:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 686:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 687:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 688:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 689:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 690:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 691:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 692:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 693:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 694:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 695:Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsAnyWidgetActive(void)
 696:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 697:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 413              		.loc 1 697 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 38B5     		push	{r3, r4, r5, lr}
 418              		.cfi_def_cfa_offset 16
 419              		.cfi_offset 3, -16
 420              		.cfi_offset 4, -12
 421              		.cfi_offset 5, -8
 422              		.cfi_offset 14, -4
 423              	.LVL44:
 698:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 699:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 424              		.loc 1 699 0
 425 0002 0025     		movs	r5, #0
 700:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 701:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 426              		.loc 1 701 0
 427 0004 2C46     		mov	r4, r5
 428 0006 06E0     		b	.L37
 429              	.LVL45:
 430              	.L39:
 702:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 703:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(i) != 0u)
 431              		.loc 1 703 0
 432 0008 2046     		mov	r0, r4
 433 000a FFF7FEFF 		bl	CapSense_1_CheckIsWidgetActive
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 21


 434              	.LVL46:
 435 000e 00B1     		cbz	r0, .L38
 704:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 705:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_WIDGET_IS_ACTIVE;
 436              		.loc 1 705 0
 437 0010 0125     		movs	r5, #1
 438              	.LVL47:
 439              	.L38:
 701:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 440              		.loc 1 701 0 discriminator 2
 441 0012 0134     		adds	r4, r4, #1
 442              	.LVL48:
 443 0014 E4B2     		uxtb	r4, r4
 444              	.LVL49:
 445              	.L37:
 701:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 446              		.loc 1 701 0 is_stmt 0 discriminator 1
 447 0016 012C     		cmp	r4, #1
 448 0018 F6D9     		bls	.L39
 706:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 707:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 708:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 709:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 710:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 711:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 449              		.loc 1 711 0 is_stmt 1
 450 001a 2846     		mov	r0, r5
 451 001c 38BD     		pop	{r3, r4, r5, pc}
 452              		.cfi_endproc
 453              	.LFE8:
 454              		.size	CapSense_1_CheckIsAnyWidgetActive, .-CapSense_1_CheckIsAnyWidgetActive
 455 001e 00BF     		.section	.text.CapSense_1_EnableWidget,"ax",%progbits
 456              		.align	2
 457              		.global	CapSense_1_EnableWidget
 458              		.thumb
 459              		.thumb_func
 460              		.type	CapSense_1_EnableWidget, %function
 461              	CapSense_1_EnableWidget:
 462              	.LFB9:
 712:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 713:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 714:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 715:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_EnableWidget
 716:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 717:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 718:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 719:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 720:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 721:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 722:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 723:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 724:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 725:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 726:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 727:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 728:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 729:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 22


 730:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 731:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 732:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 733:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 734:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 735:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 736:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 737:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 738:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 739:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 740:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 741:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_EnableWidget(uint8 widget)
 742:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    
 743:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 463              		.loc 1 743 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              	.LVL50:
 469 0000 30B4     		push	{r4, r5}
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 4, -8
 472              		.cfi_offset 5, -4
 744:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 745:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 746:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 473              		.loc 1 746 0
 474 0002 0B4A     		ldr	r2, .L45
 475 0004 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 476              	.LVL51:
 747:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 477              		.loc 1 747 0
 478 0006 1044     		add	r0, r0, r2
 479              	.LVL52:
 480 0008 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 481 000a 1D44     		add	r5, r5, r3
 482 000c EDB2     		uxtb	r5, r5
 483              	.LVL53:
 484              	.L43:
 748:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 749:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Enable all sensors of the widget */
 750:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 751:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 752:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 485              		.loc 1 752 0 discriminator 1
 486 000e D808     		lsrs	r0, r3, #3
 487              	.LVL54:
 753:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 488              		.loc 1 753 0 discriminator 1
 489 0010 03F00701 		and	r1, r3, #7
 490 0014 0122     		movs	r2, #1
 491 0016 8A40     		lsls	r2, r2, r1
 492 0018 D2B2     		uxtb	r2, r2
 493              	.LVL55:
 754:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 755:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] |= enMask;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 23


 494              		.loc 1 755 0 discriminator 1
 495 001a 064C     		ldr	r4, .L45+4
 496 001c 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 497 001e 0A43     		orrs	r2, r2, r1
 498              	.LVL56:
 499 0020 2254     		strb	r2, [r4, r0]
 756:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 500              		.loc 1 756 0 discriminator 1
 501 0022 0133     		adds	r3, r3, #1
 502              	.LVL57:
 503 0024 DBB2     		uxtb	r3, r3
 504              	.LVL58:
 757:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 758:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 505              		.loc 1 758 0 discriminator 1
 506 0026 9D42     		cmp	r5, r3
 507 0028 F1D8     		bhi	.L43
 759:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 760:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 761:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 508              		.loc 1 761 0
 509 002a 30BC     		pop	{r4, r5}
 510              		.cfi_restore 5
 511              		.cfi_restore 4
 512              		.cfi_def_cfa_offset 0
 513              	.LVL59:
 514 002c 7047     		bx	lr
 515              	.L46:
 516 002e 00BF     		.align	2
 517              	.L45:
 518 0030 00000000 		.word	.LANCHOR2
 519 0034 00000000 		.word	CapSense_1_sensorEnableMask
 520              		.cfi_endproc
 521              	.LFE9:
 522              		.size	CapSense_1_EnableWidget, .-CapSense_1_EnableWidget
 523              		.section	.text.CapSense_1_DisableWidget,"ax",%progbits
 524              		.align	2
 525              		.global	CapSense_1_DisableWidget
 526              		.thumb
 527              		.thumb_func
 528              		.type	CapSense_1_DisableWidget, %function
 529              	CapSense_1_DisableWidget:
 530              	.LFB10:
 762:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 763:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 764:Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 765:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_DisableWidget
 766:Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 767:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 768:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 769:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 770:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 771:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 772:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 773:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 774:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 775:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 24


 776:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 777:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 778:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 779:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 780:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 781:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 782:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 783:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 784:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 785:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 786:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 787:Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 788:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 789:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 790:Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 791:Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_DisableWidget(uint8 widget)
 792:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
 793:Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 531              		.loc 1 793 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536              	.LVL60:
 537 0000 30B4     		push	{r4, r5}
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 4, -8
 540              		.cfi_offset 5, -4
 794:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 795:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 796:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 541              		.loc 1 796 0
 542 0002 0B4A     		ldr	r2, .L50
 543 0004 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 544              	.LVL61:
 797:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 545              		.loc 1 797 0
 546 0006 1044     		add	r0, r0, r2
 547              	.LVL62:
 548 0008 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 549 000a 1D44     		add	r5, r5, r3
 550 000c EDB2     		uxtb	r5, r5
 551              	.LVL63:
 552              	.L48:
 798:Generated_Source\PSoC5/CapSense_1_CSHL.c ****    
 799:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Disable all sensors of the widget */
 800:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 801:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 802:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 553              		.loc 1 802 0 discriminator 1
 554 000e D808     		lsrs	r0, r3, #3
 555              	.LVL64:
 803:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 556              		.loc 1 803 0 discriminator 1
 557 0010 03F00701 		and	r1, r3, #7
 558 0014 0122     		movs	r2, #1
 559 0016 8A40     		lsls	r2, r2, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 25


 560 0018 D2B2     		uxtb	r2, r2
 561              	.LVL65:
 804:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 805:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] &= (uint8)~enMask;
 562              		.loc 1 805 0 discriminator 1
 563 001a 064C     		ldr	r4, .L50+4
 564 001c 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 565 001e 21EA0202 		bic	r2, r1, r2
 566              	.LVL66:
 567 0022 2254     		strb	r2, [r4, r0]
 806:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 568              		.loc 1 806 0 discriminator 1
 569 0024 0133     		adds	r3, r3, #1
 570              	.LVL67:
 571 0026 DBB2     		uxtb	r3, r3
 572              	.LVL68:
 807:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 808:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 573              		.loc 1 808 0 discriminator 1
 574 0028 9D42     		cmp	r5, r3
 575 002a F0D8     		bhi	.L48
 809:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 810:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 811:Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 576              		.loc 1 811 0
 577 002c 30BC     		pop	{r4, r5}
 578              		.cfi_restore 5
 579              		.cfi_restore 4
 580              		.cfi_def_cfa_offset 0
 581              	.LVL69:
 582 002e 7047     		bx	lr
 583              	.L51:
 584              		.align	2
 585              	.L50:
 586 0030 00000000 		.word	.LANCHOR2
 587 0034 00000000 		.word	CapSense_1_sensorEnableMask
 588              		.cfi_endproc
 589              	.LFE10:
 590              		.size	CapSense_1_DisableWidget, .-CapSense_1_DisableWidget
 591              		.section	.text.CapSense_1_IIR4Filter,"ax",%progbits
 592              		.align	2
 593              		.global	CapSense_1_IIR4Filter
 594              		.thumb
 595              		.thumb_func
 596              		.type	CapSense_1_IIR4Filter, %function
 597              	CapSense_1_IIR4Filter:
 598              	.LFB11:
 812:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_CENTROIDS_COUNT)
 813:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 814:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_FindMaximum
 815:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 816:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 817:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 818:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 819:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense_1_SensorSignal[] within defined cenrtoid and 
 820:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 821:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  ignored.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 26


 822:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 823:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 824:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 825:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 826:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 827:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_1_sensorSignal[] array.
 828:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:   number of elements within centroid.
 829:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 830:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:   pointer to diplex table.
 831:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 832:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 833:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 834:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 835:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 836:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 837:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_IS_DIPLEX_SLIDER)
 838:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uint8
 839:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 840:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else 
 841:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
 842:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 843:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 844:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 845:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 i;
 846:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 847:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curPos = 0u;
 848:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* No centroid at the Start */
 849:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCntrdSize = 0u;
 850:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 851:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The biggset centroid is zero */
 852:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 853:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 854:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 855:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum = 0xFFu;
 856:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 temp = 0u;
 857:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 *startOfSlider = &CapSense_1_sensorSignal[offset]; 
 858:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 859:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 860:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(diplex != 0u)
 861:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 862:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Initialize */
 863:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 i = 0u;
 864:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
 865:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make slider x2 as Diplexed */
 866:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count <<= 1u;
 867:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 while(1u)
 868:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
 869:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 870:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 871:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 872:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 873:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Start of centroid */
 874:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = i;
 875:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 876:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 877:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
 878:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 27


 879:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 880:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 881:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 882:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 883:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {          
 884:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(curCntrdSize > 0u)
 885:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 886:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* We are in the end of current */
 887:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 888:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 889:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 890:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 891:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 892:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
 893:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize = 0u;
 894:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 895:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 896:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 897:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 898:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     i++; 
 899:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     curPos = diplex[i];
 900:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(i == count)
 901:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 902:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         break;
 903:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }            
 904:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 905:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 906:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 907:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                        We are in the end of current */
 908:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 909:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 910:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 911:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 912:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 913:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 914:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
 915:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 916:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Without diplexing */ 
 917:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 biggestCtrdSize = count;
 918:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 919:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
 920:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 921:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Check centroid size */
 922:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_NON_DIPLEX_SLIDER)
 923:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 924:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else                    
 925:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 926:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_NON_DIPLEX_SLIDER) */
 927:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 928:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 929:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 930:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)
 931:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (diplex == 0u)
 932:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 933:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = i;
 934:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 935:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 28


 936:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 937:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = diplex[i];
 938:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                    
 939:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #elif (CapSense_1_IS_DIPLEX_SLIDER)                    
 940:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curPos = diplex[i];                    
 941:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) 
 942:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Looking for the grater element within centroid */
 943:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 944:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 945:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 946:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 947:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 maximum = i;
 948:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 temp = startOfSlider[curPos];
 949:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 950:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 951:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 952:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 } 
 953:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 954:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
 955:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 956:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Looking for the grater element within centroid */
 957:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 958:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 959:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(startOfSlider[i] > temp)
 960:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 961:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         maximum = i;
 962:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         temp = startOfSlider[i];
 963:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 964:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 965:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 966:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 967:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (maximum);
 968:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 969:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 970:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 971:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 972:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_CalcCentroid
 973:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 974:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 975:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 976:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 977:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution.
 978:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 979:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 980:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  type:  widget type.
 981:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:  pointer to diplex table.
 982:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 983:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_1_SensorSignal[] array.
 984:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:    Number of elements within centroid.
 985:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 986:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  API resolution.
 987:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 988:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 989:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 990:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the slider.
 991:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 992:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 29


 993:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
 994:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
 995:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 996:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 997:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset, 
 998:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
 999:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
1000:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1001:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0
1002:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posPrev = 0u;
1003:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posNext = 0u;
1004:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1005:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                
1006:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)                
1007:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 pos;
1008:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1009:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1010:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Helps while centroid calulation */
1011:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         static uint16 CapSense_1_centroid[3u];
1012:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1013:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 position;
1014:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 numerator;
1015:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         int32 denominator;
1016:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 *startOfSlider = &CapSense_1_sensorSignal[offset];
1017:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1018:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1019:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(type == CapSense_1_TYPE_RADIAL_SLIDER)
1020:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1021:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1022:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1023:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1024:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1025:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1026:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  
1027:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for ROTARY Slider */
1028:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1029:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1030:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[count - 1u];
1031:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[1u];
1032:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1033:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1034:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1035:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1036:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[0u];
1037:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1038:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1039:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1040:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1041:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[maximum + 1u];
1042:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1043:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1044:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1045:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1046:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1047:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1048:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1049:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 30


1050:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1051:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1052:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)               
1053:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1054:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(diplex == 0u)
1055:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1056:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = maximum;
1057:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1058:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = maximum + 1u; 
1059:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1060:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1061:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1062:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = diplex[maximum];
1063:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1064:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = diplex[maximum + 1u];
1065:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         count <<= 1u;
1066:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }                    
1067:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #elif (CapSense_1_IS_DIPLEX_SLIDER)
1068:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1069:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     pos     = diplex[maximum];
1070:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1071:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = diplex[maximum + 1u];
1072:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     count <<= 1u;                    
1073:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else                    
1074:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1075:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (maximum >= 1u)
1076:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1077:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1078:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1079:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = maximum + 1u; 
1080:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) */
1081:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1082:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1083:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER)
1084:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[pos];
1085:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else
1086:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1087:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1088:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1089:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for LINEAR Slider */
1090:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1091:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1092:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1093:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1094:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1095:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1096:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1097:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1098:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1099:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1100:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1101:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1102:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1103:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1104:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1105:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_1_TOTAL_TOUCH_PADS_COU
1106:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 31


1107:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1108:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1109:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1110:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1111:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1112:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_PREV] > noiseThreshold)
1113:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1114:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] -= noiseThreshold;
1115:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1116:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1117:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1118:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1119:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1120:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1121:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1122:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_centroid[CapSense_1_POS] -= noiseThreshold;
1123:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1124:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1125:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_NEXT] > noiseThreshold)
1126:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1127:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] -= noiseThreshold;
1128:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1129:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1130:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1131:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1132:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1133:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1134:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1135:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 - Si-1 */
1136:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         numerator = (uint32) CapSense_1_centroid[CapSense_1_POS_NEXT] -
1137:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
1138:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1139:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 + Si + Si-1 */
1140:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] + 
1141:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] + 
1142:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS_NEXT];
1143:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1144:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* (numerator/denominator) + maximum */
1145:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1146:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1147:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1148:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Only required for RADIAL Slider */
1149:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(denominator < 0)
1150:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1151:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1152:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1153:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1154:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1155:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator *= (int16)resolution;
1156:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1157:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Round the relust and put it to uint8 */
1158:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_1_CENTROID_ROUND_VALUE));
1159:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1160:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1161:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }    
1162:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_CENTROIDS_COUNT) */
1163:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 32


1164:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1165:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1166:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1167:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetCentroidPos
1168:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1169:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1170:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1171:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1172:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1173:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1174:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1175:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1176:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1177:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1178:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1179:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_LS__"widget_name"            5
1180:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1181:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1182:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the linear slider.
1183:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1184:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1185:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1186:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1187:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1188:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1189:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1190:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1191:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1192:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1193:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1194:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1195:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1196:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1197:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1198:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1199:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1200:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1201:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1202:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_GetCentroidPos(uint8 widget) 
1203:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1204:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1205:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             const uint8 CYCODE *diplex;
1206:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1207:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1208:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1209:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1210:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1211:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];  
1212:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1213:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1214:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1215:Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1216:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1217:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) 
1218:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK
1219:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1220:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 33


1221:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1222:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1223:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1224:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1225:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1226:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1227:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(widget < CapSense_1_TOTAL_DIPLEXED_SLIDERS_COUNT)
1228:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1229:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maximum = CapSense_1_diplexTable[widget];
1230:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = &CapSense_1_diplexTable[maximum];
1231:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1232:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1233:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1234:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = 0u;
1235:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1236:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1237:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1238:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */      
1239:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
1240:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], dip
1241:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1242:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1243:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1244:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1245:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1246:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1247:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1248:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1249:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1250:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1251:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1252:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1253:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1254:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1255:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1256:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1257:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1258:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1259:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1260:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1261:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1262:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1263:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1264:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1265:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1266:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1267:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1268:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1269:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1270:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1271:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1272:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1273:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1274:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1275:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1276:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1277:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 34


1278:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1279:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1280:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1281:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1282:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1283:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1284:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1285:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1286:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1287:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1288:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1289:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1290:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] =
1291:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1292:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1293:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1294:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /*(0u != (CapSense_1_MEDIAN_FILTER &
1295:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *         CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1296:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1297:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1298:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if(0u!=(CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1299:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) 
1300:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1301:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1302:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position,
1303:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1304:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1305:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]=CapSense_1_posFiltersData[po
1306:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1307:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1308:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1309:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1310:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1311:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1312:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1313:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER)) 
1314:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1315:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1316:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1317:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1318:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1319:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1320:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1321:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1322:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1323:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1324:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1325:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1326:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1327:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1328:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1329:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                                
1330:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1331:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1332:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1333:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1334:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 35


1335:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1336:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1337:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position,
1338:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1339:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1340:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1341:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1342:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1343:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1344:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1345:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1346:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1347:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1348:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1349:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1350:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1351:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum wasn't found */
1352:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1353:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1354:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if(0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1355:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1356:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1357:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1358:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1359:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1360:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1361:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1362:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1363:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1364:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1365:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1366:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1367:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1368:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1369:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1370:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1371:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetRadialCentroidPos
1372:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1373:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1374:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1375:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1376:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1377:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1378:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1379:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1380:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1381:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1382:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1383:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_RS_"widget_name"            5
1384:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1385:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1386:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the radial slider.
1387:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1388:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1389:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1390:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1391:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 36


1392:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1393:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1394:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1395:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1396:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1397:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1398:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1399:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1400:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1401:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1402:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1403:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1404:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1405:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1406:Generated_Source\PSoC5/CapSense_1_CSHL.c ****      uint16 CapSense_1_GetRadialCentroidPos(uint8 widget)
1407:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
1408:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1409:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1410:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1411:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1412:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget]; 
1413:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1414:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1415:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1416:Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1417:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1418:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) 
1419:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK
1420:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1421:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1422:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1423:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1424:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1425:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1426:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1427:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */        
1428:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1429:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u)
1430:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1431:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1432:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1433:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1434:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1435:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1436:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1437:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1438:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1439:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1440:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1441:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1442:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1443:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1444:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1445:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1446:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1447:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1448:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 37


1449:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1450:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1451:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1452:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1453:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1454:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1455:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1456:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))  || 
1457:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1458:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1459:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1460:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1461:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1462:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1463:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1464:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1465:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1466:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1467:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1468:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1469:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1470:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1471:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1472:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1473:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1474:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1475:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1476:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1477:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1478:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1479:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = 
1480:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                               CapSense_1_posFilters
1481:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1482:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1483:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_MEDIAN_FILTER & 
1484:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1485:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1486:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1487:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_AVERAGING_FILTER & \
1488:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1489:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1490:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1491:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1492:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position, 
1493:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1494:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1495:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]= CapSense_1_posFiltersData[p
1496:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1497:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1498:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1499:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1500:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1501:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1502:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1503:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1504:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1505:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 38


1506:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1507:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1508:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1509:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & 
1510:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1511:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1512:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1513:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1514:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1515:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1516:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1517:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1518:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1519:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1520:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & 
1521:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1522:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1523:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1524:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1525:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1526:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1527:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position, 
1528:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                          CapSense_1_posFiltersData[
1529:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1530:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1531:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER &
1532:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1533:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1534:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1535:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1536:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1537:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1538:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1539:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1540:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1541:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum didn't find */
1542:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1543:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1544:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1545:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1546:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1547:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1548:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1549:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1550:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1551:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1552:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1553:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1554:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1555:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif
1556:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1557:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1558:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u)
1559:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1560:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetTouchCentroidPos
1561:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1562:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 39


1563:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1564:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1565:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1566:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1567:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1568:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The position filter is applied to the result if enabled.
1569:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1570:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  customizer.
1571:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1572:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1573:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number. 
1574:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1575:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_TP_"widget_name"            5
1576:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1577:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1578:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result of calculation of X and Y position are stored.
1579:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[0u]  - position of X
1580:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[1u]  - position of Y
1581:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1582:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1583:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1584:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1585:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1586:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1587:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1588:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   calculations.
1589:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1590:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1591:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1592:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1593:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1594:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_GetTouchCentroidPos(uint8 widget, uint16* pos)
1595:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
1596:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1597:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1598:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posXIndex;
1599:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posYIndex;
1600:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1601:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
1602:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1603:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1604:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1605:Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1606:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint16 tempPos;
1607:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1608:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1609:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1610:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1611:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxX;
1612:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxY;
1613:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posX;
1614:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posY;
1615:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 touch = 0u;
1616:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1617:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1618:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1619:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within X centroid */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 40


1620:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1621:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u);
1622:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1623:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1624:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1625:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1626:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maxX != 0xFFu)
1627:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1628:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             offset = CapSense_1_rawDataIndex[widget + 1u];
1629:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             count = CapSense_1_numberOfSensors[widget + 1u];
1630:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1631:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Find Maximum within Y centroid */
1632:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_DIPLEX_SLIDER)
1633:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1634:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else
1635:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1636:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1637:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1638:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (maxY != 0xFFu)
1639:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1640:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* X and Y maximums are found = true touch */
1641:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 touch = 1u;
1642:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1643:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate Y centroid */
1644:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posY = CapSense_1_CalcCentroid(maxY, offset, count, 
1645:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget + 1u], CapSense_1_noiseThreshold[widget 
1646:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1647:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate X centroid */
1648:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 offset = CapSense_1_rawDataIndex[widget];
1649:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count = CapSense_1_numberOfSensors[widget];
1650:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1651:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posX = CapSense_1_CalcCentroid(maxX, offset, count, 
1652:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget],CapSense_1_noiseThreshold[widget]);
1653:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1654:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1655:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Check if this TP has enabled filters */
1656:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1657:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1658:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Caluclate position to store filters data */
1659:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1660:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posYIndex  = CapSense_1_posFiltersData[widget + 1u];
1661:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1662:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1663:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1664:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Init filters */
1665:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posXIndex] = posX;
1666:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posYIndex] = posY;
1667:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1668:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if((0u != (CapSense_1_MEDIAN_FILTER & \
1669:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))|| \
1670:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 (0u != (CapSense_1_AVERAGING_FILTER & \
1671:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1672:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1673:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1674:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1675:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1676:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = posX;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 41


1677:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = posY;
1678:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1679:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1680:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1681:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *    (0u != (CapSense_1_AVERAGING_FILTER & \
1682:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *            CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1683:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1684:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
1685:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1686:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1687:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
1688:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1689:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Do filtering */
1690:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1691:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1692:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1693:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1694:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_MedianFilter(posX,
1695:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1696:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1697:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1698:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1699:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1700:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1701:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1702:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_MedianFilter(posY,
1703:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1704:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1705:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1706:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1707:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1708:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1709:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1710:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_MEDIAN_FILTER & \
1711:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1712:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1713:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1714:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if(0u !=(CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTE
1715:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1716:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1717:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1718:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_AveragingFilter(posX,
1719:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1720:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1721:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1722:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1723:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1724:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1725:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1726:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_AveragingFilter(posY, 
1727:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1728:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1729:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1730:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1731:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1732:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1733:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 42


1734:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1735:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1736:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1737:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1738:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1739:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1740:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1741:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR2Filter(posX, 
1742:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                            CapSense_1_posFiltersDat
1743:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1744:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1745:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR2Filter(posY, 
1746:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1747:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1748:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1749:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1750:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1751:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1752:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1753:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1754:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1755:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1756:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1757:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR4Filter((uint16)posX,
1758:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1759:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1760:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1761:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR4Filter((uint16)posY,
1762:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1763:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1764:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1765:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1766:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1767:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1768:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1769:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1770:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1771:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1772:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     {
1773:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posX = (uint8) CapSense_1_JitterFilter(posX, 
1774:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1775:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posXIndex] = posX;
1776:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         
1777:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posY = (uint8) CapSense_1_JitterFilter(posY, 
1778:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1779:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posYIndex] = posY;
1780:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     }
1781:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1782:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1783:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1784:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1785:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1786:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1787:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1788:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Save positions */
1789:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[0u] = posX;
1790:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[1u] = posY;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 43


1791:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1792:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1793:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1794:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1795:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(touch == 0u)
1796:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1797:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1798:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if ((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1799:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1800:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1801:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1802:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1803:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1804:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1805:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (touch);
1806:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1807:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u) */
1808:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1809:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1810:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1811:Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1812:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1813:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_MedianFilter
1814:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1815:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1816:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1817:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Median filter function. 
1818:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1819:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  median value.
1820:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1821:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1822:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1823:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1824:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1825:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1826:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1827:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1828:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1829:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1830:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1831:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                          
1832:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1833:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 tmp;
1834:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1835:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x1 > x2)
1836:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1837:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             tmp = x2;
1838:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x1;
1839:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x1 = tmp;
1840:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1841:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1842:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x2 > x3)
1843:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1844:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x3;
1845:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1846:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1847:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 44


1848:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1849:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1850:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1851:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1852:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1853:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1854:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1855:Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1856:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1857:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_AveragingFilter
1858:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1859:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1860:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1861:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Averaging filter function.
1862:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1863:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  reports the averaging value.
1864:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1865:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1866:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1867:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1868:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1869:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1870:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1871:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1872:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1873:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1874:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1875:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                             
1876:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1877:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1878:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1879:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1880:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1881:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1882:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1883:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1884:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1885:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1886:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1887:Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1888:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1889:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR2Filter
1890:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1891:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1892:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1893:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1894:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1895:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1896:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1897:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1898:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1899:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1900:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1901:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1902:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1903:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR2Filter(uint16 x1, uint16 x2)
1904:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 45


1905:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1906:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1907:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1908:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1909:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1910:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 1u;
1911:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1912:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1913:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1914:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1915:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1916:Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1917:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1918:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1919:Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) | \
1920:Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER) )
1921:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1922:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR4Filter
1923:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1924:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1925:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1926:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1927:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1928:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1929:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1930:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1931:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1932:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1933:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1934:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1935:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1936:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR4Filter(uint16 x1, uint16 x2)
1937:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1938:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 599              		.loc 1 1938 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604              	.LVL70:
1939:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1940:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1941:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1942:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 605              		.loc 1 1942 0
 606 0000 0844     		add	r0, r0, r1
 607              	.LVL71:
1943:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 608              		.loc 1 1943 0
 609 0002 00EB4100 		add	r0, r0, r1, lsl #1
 610              	.LVL72:
1944:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 2u;
1945:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1946:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1947:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 611              		.loc 1 1947 0
 612 0006 C0F38F00 		ubfx	r0, r0, #2, #16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 46


 613              	.LVL73:
 614 000a 7047     		bx	lr
 615              		.cfi_endproc
 616              	.LFE11:
 617              		.size	CapSense_1_IIR4Filter, .-CapSense_1_IIR4Filter
 618              		.section	.text.CapSense_1_UpdateSensorBaseline,"ax",%progbits
 619              		.align	2
 620              		.global	CapSense_1_UpdateSensorBaseline
 621              		.thumb
 622              		.thumb_func
 623              		.type	CapSense_1_UpdateSensorBaseline, %function
 624              	CapSense_1_UpdateSensorBaseline:
 625              	.LFB4:
 350:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint32 calc;
 626              		.loc 1 350 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              	.LVL74:
 631 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 632              		.cfi_def_cfa_offset 24
 633              		.cfi_offset 3, -24
 634              		.cfi_offset 4, -20
 635              		.cfi_offset 5, -16
 636              		.cfi_offset 6, -12
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 639 0002 0446     		mov	r4, r0
 354:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 noiseThreshold = CapSense_1_noiseThreshold[widget];
 640              		.loc 1 354 0
 641 0004 264B     		ldr	r3, .L63
 642 0006 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 643              	.LVL75:
 355:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 644              		.loc 1 355 0
 645 0008 264B     		ldr	r3, .L63+4
 646 000a 03EB4203 		add	r3, r3, r2, lsl #1
 647 000e 9E89     		ldrh	r6, [r3, #12]
 648              	.LVL76:
 384:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 649              		.loc 1 384 0
 650 0010 254D     		ldr	r5, .L63+8
 651 0012 35F81010 		ldrh	r1, [r5, r0, lsl #1]
 652 0016 254B     		ldr	r3, .L63+12
 653 0018 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 654              	.LVL77:
 655 001c FFF7FEFF 		bl	CapSense_1_IIR4Filter
 656              	.LVL78:
 385:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 657              		.loc 1 385 0
 658 0020 25F81400 		strh	r0, [r5, r4, lsl #1]	@ movhi
 410:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 659              		.loc 1 410 0
 660 0024 224B     		ldr	r3, .L63+16
 661 0026 33F81420 		ldrh	r2, [r3, r4, lsl #1]
 662 002a 9042     		cmp	r0, r2
 663 002c 03D3     		bcc	.L54
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 47


 412:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 664              		.loc 1 412 0
 665 002e 851A     		subs	r5, r0, r2
 666 0030 ADB2     		uxth	r5, r5
 667              	.LVL79:
 413:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 668              		.loc 1 413 0
 669 0032 0127     		movs	r7, #1
 670 0034 02E0     		b	.L55
 671              	.LVL80:
 672              	.L54:
 417:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 673              		.loc 1 417 0
 674 0036 151A     		subs	r5, r2, r0
 675 0038 ADB2     		uxth	r5, r5
 676              	.LVL81:
 418:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 677              		.loc 1 418 0
 678 003a 0027     		movs	r7, #0
 679              	.LVL82:
 680              	.L55:
 421:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 681              		.loc 1 421 0
 682 003c 87B9     		cbnz	r7, .L56
 421:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 683              		.loc 1 421 0 is_stmt 0 discriminator 1
 684 003e 142D     		cmp	r5, #20
 685 0040 0ED9     		bls	.L56
 423:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 686              		.loc 1 423 0 is_stmt 1
 687 0042 1C4B     		ldr	r3, .L63+20
 688 0044 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 689 0046 042B     		cmp	r3, #4
 690 0048 06D9     		bls	.L57
 425:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 691              		.loc 1 425 0
 692 004a 2046     		mov	r0, r4
 693              	.LVL83:
 694 004c FFF7FEFF 		bl	CapSense_1_BaseInit
 695              	.LVL84:
 426:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 696              		.loc 1 426 0
 697 0050 0022     		movs	r2, #0
 698 0052 184B     		ldr	r3, .L63+20
 699 0054 1A55     		strb	r2, [r3, r4]
 700 0056 17E0     		b	.L58
 701              	.LVL85:
 702              	.L57:
 430:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 703              		.loc 1 430 0
 704 0058 0133     		adds	r3, r3, #1
 705 005a 164A     		ldr	r2, .L63+20
 706 005c 1355     		strb	r3, [r2, r4]
 707 005e 13E0     		b	.L58
 708              	.L56:
 437:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 709              		.loc 1 437 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 48


 710 0060 B542     		cmp	r5, r6
 711 0062 02D9     		bls	.L59
 437:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 712              		.loc 1 437 0 is_stmt 0 discriminator 1
 713 0064 132D     		cmp	r5, #19
 714 0066 0FD8     		bhi	.L58
 439:Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 715              		.loc 1 439 0 is_stmt 1
 716 0068 77B9     		cbnz	r7, .L58
 717              	.L59:
 718              	.LVL86:
 444:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 719              		.loc 1 444 0
 720 006a 1349     		ldr	r1, .L63+24
 721 006c 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 722 006e 43EA0223 		orr	r3, r3, r2, lsl #8
 723              	.LVL87:
 447:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 724              		.loc 1 447 0
 725 0072 1844     		add	r0, r0, r3
 726              	.LVL88:
 450:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 727              		.loc 1 450 0
 728 0074 801A     		subs	r0, r0, r2
 729              	.LVL89:
 453:Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 730              		.loc 1 453 0
 731 0076 C0F30F22 		ubfx	r2, r0, #8, #16
 732 007a 0D4B     		ldr	r3, .L63+16
 733 007c 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 454:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 734              		.loc 1 454 0
 735 0080 0855     		strb	r0, [r1, r4]
 456:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 736              		.loc 1 456 0
 737 0082 0022     		movs	r2, #0
 738 0084 0B4B     		ldr	r3, .L63+20
 739 0086 1A55     		strb	r2, [r3, r4]
 740              	.LVL90:
 741              	.L58:
 463:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 742              		.loc 1 463 0
 743 0088 B542     		cmp	r5, r6
 744 008a 04D9     		bls	.L60
 463:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 745              		.loc 1 463 0 is_stmt 0 discriminator 1
 746 008c 1FB1     		cbz	r7, .L60
 476:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8) */
 747              		.loc 1 476 0 is_stmt 1
 748 008e 0B4B     		ldr	r3, .L63+28
 749 0090 23F81450 		strh	r5, [r3, r4, lsl #1]	@ movhi
 750 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 751              	.LVL91:
 752              	.L60:
 482:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 753              		.loc 1 482 0
 754 0096 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 49


 755 0098 084B     		ldr	r3, .L63+28
 756 009a 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 757 009e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 758              	.LVL92:
 759              	.L64:
 760              		.align	2
 761              	.L63:
 762 00a0 00000000 		.word	CapSense_1_widgetNumber
 763 00a4 00000000 		.word	.LANCHOR0
 764 00a8 00000000 		.word	CapSense_1_rawFilterData1
 765 00ac 00000000 		.word	CapSense_1_sensorRaw
 766 00b0 00000000 		.word	CapSense_1_sensorBaseline
 767 00b4 00000000 		.word	CapSense_1_lowBaselineResetCnt
 768 00b8 00000000 		.word	CapSense_1_sensorBaselineLow
 769 00bc 00000000 		.word	CapSense_1_sensorSignal
 770              		.cfi_endproc
 771              	.LFE4:
 772              		.size	CapSense_1_UpdateSensorBaseline, .-CapSense_1_UpdateSensorBaseline
 773              		.section	.text.CapSense_1_UpdateEnabledBaselines,"ax",%progbits
 774              		.align	2
 775              		.global	CapSense_1_UpdateEnabledBaselines
 776              		.thumb
 777              		.thumb_func
 778              		.type	CapSense_1_UpdateEnabledBaselines, %function
 779              	CapSense_1_UpdateEnabledBaselines:
 780              	.LFB5:
 523:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 781              		.loc 1 523 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785 0000 10B5     		push	{r4, lr}
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 4, -8
 788              		.cfi_offset 14, -4
 789              	.LVL93:
 528:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 790              		.loc 1 528 0
 791 0002 0024     		movs	r4, #0
 792 0004 0DE0     		b	.L66
 793              	.LVL94:
 794              	.L68:
 530:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 795              		.loc 1 530 0
 796 0006 E208     		lsrs	r2, r4, #3
 531:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 797              		.loc 1 531 0
 798 0008 04F00701 		and	r1, r4, #7
 799 000c 0123     		movs	r3, #1
 800 000e 8B40     		lsls	r3, r3, r1
 801              	.LVL95:
 532:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 802              		.loc 1 532 0
 803 0010 0549     		ldr	r1, .L70
 804 0012 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 805 0014 1342     		tst	r3, r2
 806 0016 02D0     		beq	.L67
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 50


 534:Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 807              		.loc 1 534 0
 808 0018 2046     		mov	r0, r4
 809 001a FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 810              	.LVL96:
 811              	.L67:
 528:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 812              		.loc 1 528 0 discriminator 2
 813 001e 0134     		adds	r4, r4, #1
 814              	.LVL97:
 815 0020 E4B2     		uxtb	r4, r4
 816              	.LVL98:
 817              	.L66:
 528:Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 818              		.loc 1 528 0 is_stmt 0 discriminator 1
 819 0022 012C     		cmp	r4, #1
 820 0024 EFD9     		bls	.L68
 537:Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 821              		.loc 1 537 0 is_stmt 1
 822 0026 10BD     		pop	{r4, pc}
 823              	.LVL99:
 824              	.L71:
 825              		.align	2
 826              	.L70:
 827 0028 00000000 		.word	CapSense_1_sensorEnableMask
 828              		.cfi_endproc
 829              	.LFE5:
 830              		.size	CapSense_1_UpdateEnabledBaselines, .-CapSense_1_UpdateEnabledBaselines
 831              		.global	CapSense_1_numberOfSensors
 832              		.global	CapSense_1_rawDataIndex
 833              		.global	CapSense_1_debounceCounter
 834              		.global	CapSense_1_debounce
 835              		.global	CapSense_1_hysteresis
 836              		.global	CapSense_1_noiseThreshold
 837              		.global	CapSense_1_fingerThreshold
 838              		.comm	CapSense_1_lowBaselineResetCnt,2,4
 839              		.comm	CapSense_1_sensorOnMask,1,4
 840              		.comm	CapSense_1_sensorSignal,4,4
 841              		.comm	CapSense_1_sensorBaselineLow,2,4
 842              		.comm	CapSense_1_sensorBaseline,4,4
 843              		.comm	CapSense_1_rawFilterData1,4,4
 844              		.section	.rodata
 845              		.align	2
 846              		.set	.LANCHOR2,. + 0
 847              		.type	CapSense_1_rawDataIndex, %object
 848              		.size	CapSense_1_rawDataIndex, 2
 849              	CapSense_1_rawDataIndex:
 850 0000 00       		.byte	0
 851 0001 01       		.byte	1
 852 0002 0000     		.space	2
 853              		.type	CapSense_1_numberOfSensors, %object
 854              		.size	CapSense_1_numberOfSensors, 2
 855              	CapSense_1_numberOfSensors:
 856 0004 01       		.byte	1
 857 0005 01       		.byte	1
 858              		.data
 859              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 51


 860              		.set	.LANCHOR0,. + 0
 861              		.type	CapSense_1_debounce, %object
 862              		.size	CapSense_1_debounce, 2
 863              	CapSense_1_debounce:
 864 0000 05       		.byte	5
 865 0001 05       		.byte	5
 866 0002 0000     		.space	2
 867              		.type	CapSense_1_fingerThreshold, %object
 868              		.size	CapSense_1_fingerThreshold, 4
 869              	CapSense_1_fingerThreshold:
 870 0004 6400     		.short	100
 871 0006 6400     		.short	100
 872              		.type	CapSense_1_hysteresis, %object
 873              		.size	CapSense_1_hysteresis, 4
 874              	CapSense_1_hysteresis:
 875 0008 0A00     		.short	10
 876 000a 0A00     		.short	10
 877              		.type	CapSense_1_noiseThreshold, %object
 878              		.size	CapSense_1_noiseThreshold, 4
 879              	CapSense_1_noiseThreshold:
 880 000c 1400     		.short	20
 881 000e 1400     		.short	20
 882              		.bss
 883              		.align	2
 884              		.set	.LANCHOR1,. + 0
 885              		.type	CapSense_1_debounceCounter, %object
 886              		.size	CapSense_1_debounceCounter, 3
 887              	CapSense_1_debounceCounter:
 888 0000 000000   		.space	3
 889              		.text
 890              	.Letext0:
 891              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 892              		.file 3 "Generated_Source\\PSoC5\\CapSense_1.h"
 893              		.file 4 "Generated_Source\\PSoC5\\CapSense_1_CSHL.h"
 894              		.section	.debug_info,"",%progbits
 895              	.Ldebug_info0:
 896 0000 8A060000 		.4byte	0x68a
 897 0004 0400     		.2byte	0x4
 898 0006 00000000 		.4byte	.Ldebug_abbrev0
 899 000a 04       		.byte	0x4
 900 000b 01       		.uleb128 0x1
 901 000c 4C040000 		.4byte	.LASF63
 902 0010 0C       		.byte	0xc
 903 0011 EE000000 		.4byte	.LASF64
 904 0015 DA040000 		.4byte	.LASF65
 905 0019 00000000 		.4byte	.Ldebug_ranges0+0
 906 001d 00000000 		.4byte	0
 907 0021 00000000 		.4byte	.Ldebug_line0
 908 0025 02       		.uleb128 0x2
 909 0026 01       		.byte	0x1
 910 0027 06       		.byte	0x6
 911 0028 25010000 		.4byte	.LASF0
 912 002c 02       		.uleb128 0x2
 913 002d 01       		.byte	0x1
 914 002e 08       		.byte	0x8
 915 002f 9E030000 		.4byte	.LASF1
 916 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 52


 917 0034 02       		.byte	0x2
 918 0035 05       		.byte	0x5
 919 0036 E1030000 		.4byte	.LASF2
 920 003a 02       		.uleb128 0x2
 921 003b 02       		.byte	0x2
 922 003c 07       		.byte	0x7
 923 003d 2D020000 		.4byte	.LASF3
 924 0041 02       		.uleb128 0x2
 925 0042 04       		.byte	0x4
 926 0043 05       		.byte	0x5
 927 0044 50010000 		.4byte	.LASF4
 928 0048 02       		.uleb128 0x2
 929 0049 04       		.byte	0x4
 930 004a 07       		.byte	0x7
 931 004b 1B020000 		.4byte	.LASF5
 932 004f 02       		.uleb128 0x2
 933 0050 08       		.byte	0x8
 934 0051 05       		.byte	0x5
 935 0052 17010000 		.4byte	.LASF6
 936 0056 02       		.uleb128 0x2
 937 0057 08       		.byte	0x8
 938 0058 07       		.byte	0x7
 939 0059 5D000000 		.4byte	.LASF7
 940 005d 03       		.uleb128 0x3
 941 005e 04       		.byte	0x4
 942 005f 05       		.byte	0x5
 943 0060 696E7400 		.ascii	"int\000"
 944 0064 02       		.uleb128 0x2
 945 0065 04       		.byte	0x4
 946 0066 07       		.byte	0x7
 947 0067 F0010000 		.4byte	.LASF8
 948 006b 04       		.uleb128 0x4
 949 006c 72010000 		.4byte	.LASF9
 950 0070 02       		.byte	0x2
 951 0071 E401     		.2byte	0x1e4
 952 0073 2C000000 		.4byte	0x2c
 953 0077 04       		.uleb128 0x4
 954 0078 00000000 		.4byte	.LASF10
 955 007c 02       		.byte	0x2
 956 007d E501     		.2byte	0x1e5
 957 007f 3A000000 		.4byte	0x3a
 958 0083 04       		.uleb128 0x4
 959 0084 7F010000 		.4byte	.LASF11
 960 0088 02       		.byte	0x2
 961 0089 E601     		.2byte	0x1e6
 962 008b 48000000 		.4byte	0x48
 963 008f 02       		.uleb128 0x2
 964 0090 04       		.byte	0x4
 965 0091 04       		.byte	0x4
 966 0092 25030000 		.4byte	.LASF12
 967 0096 02       		.uleb128 0x2
 968 0097 08       		.byte	0x8
 969 0098 04       		.byte	0x4
 970 0099 78010000 		.4byte	.LASF13
 971 009d 02       		.uleb128 0x2
 972 009e 01       		.byte	0x1
 973 009f 08       		.byte	0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 53


 974 00a0 1D050000 		.4byte	.LASF14
 975 00a4 02       		.uleb128 0x2
 976 00a5 08       		.byte	0x8
 977 00a6 04       		.byte	0x4
 978 00a7 9C020000 		.4byte	.LASF15
 979 00ab 02       		.uleb128 0x2
 980 00ac 04       		.byte	0x4
 981 00ad 07       		.byte	0x7
 982 00ae 93020000 		.4byte	.LASF16
 983 00b2 05       		.uleb128 0x5
 984 00b3 49000000 		.4byte	.LASF17
 985 00b7 01       		.byte	0x1
 986 00b8 7B       		.byte	0x7b
 987 00b9 00000000 		.4byte	.LFB0
 988 00bd 50000000 		.4byte	.LFE0-.LFB0
 989 00c1 01       		.uleb128 0x1
 990 00c2 9C       		.byte	0x9c
 991 00c3 E4000000 		.4byte	0xe4
 992 00c7 06       		.uleb128 0x6
 993 00c8 40020000 		.4byte	.LASF19
 994 00cc 01       		.byte	0x1
 995 00cd 7B       		.byte	0x7b
 996 00ce 6B000000 		.4byte	0x6b
 997 00d2 01       		.uleb128 0x1
 998 00d3 50       		.byte	0x50
 999 00d4 07       		.uleb128 0x7
 1000 00d5 EB030000 		.4byte	.LASF21
 1001 00d9 01       		.byte	0x1
 1002 00da 7F       		.byte	0x7f
 1003 00db 6B000000 		.4byte	0x6b
 1004 00df 00000000 		.4byte	.LLST0
 1005 00e3 00       		.byte	0
 1006 00e4 05       		.uleb128 0x5
 1007 00e5 DF020000 		.4byte	.LASF18
 1008 00e9 01       		.byte	0x1
 1009 00ea C4       		.byte	0xc4
 1010 00eb 00000000 		.4byte	.LFB1
 1011 00ef 18000000 		.4byte	.LFE1-.LFB1
 1012 00f3 01       		.uleb128 0x1
 1013 00f4 9C       		.byte	0x9c
 1014 00f5 36010000 		.4byte	0x136
 1015 00f9 08       		.uleb128 0x8
 1016 00fa 40020000 		.4byte	.LASF19
 1017 00fe 01       		.byte	0x1
 1018 00ff C4       		.byte	0xc4
 1019 0100 6B000000 		.4byte	0x6b
 1020 0104 13000000 		.4byte	.LLST1
 1021 0108 09       		.uleb128 0x9
 1022 0109 08000000 		.4byte	.LVL4
 1023 010d 6C060000 		.4byte	0x66c
 1024 0111 1C010000 		.4byte	0x11c
 1025 0115 0A       		.uleb128 0xa
 1026 0116 01       		.uleb128 0x1
 1027 0117 50       		.byte	0x50
 1028 0118 02       		.uleb128 0x2
 1029 0119 74       		.byte	0x74
 1030 011a 00       		.sleb128 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 54


 1031 011b 00       		.byte	0
 1032 011c 0B       		.uleb128 0xb
 1033 011d 0C000000 		.4byte	.LVL5
 1034 0121 77060000 		.4byte	0x677
 1035 0125 0C       		.uleb128 0xc
 1036 0126 16000000 		.4byte	.LVL6
 1037 012a B2000000 		.4byte	0xb2
 1038 012e 0A       		.uleb128 0xa
 1039 012f 01       		.uleb128 0x1
 1040 0130 50       		.byte	0x50
 1041 0131 02       		.uleb128 0x2
 1042 0132 74       		.byte	0x74
 1043 0133 00       		.sleb128 0
 1044 0134 00       		.byte	0
 1045 0135 00       		.byte	0
 1046 0136 05       		.uleb128 0x5
 1047 0137 27000000 		.4byte	.LASF20
 1048 013b 01       		.byte	0x1
 1049 013c F8       		.byte	0xf8
 1050 013d 00000000 		.4byte	.LFB2
 1051 0141 16000000 		.4byte	.LFE2-.LFB2
 1052 0145 01       		.uleb128 0x1
 1053 0146 9C       		.byte	0x9c
 1054 0147 69010000 		.4byte	0x169
 1055 014b 0D       		.uleb128 0xd
 1056 014c 6900     		.ascii	"i\000"
 1057 014e 01       		.byte	0x1
 1058 014f FB       		.byte	0xfb
 1059 0150 6B000000 		.4byte	0x6b
 1060 0154 34000000 		.4byte	.LLST2
 1061 0158 0C       		.uleb128 0xc
 1062 0159 0C000000 		.4byte	.LVL9
 1063 015d E4000000 		.4byte	0xe4
 1064 0161 0A       		.uleb128 0xa
 1065 0162 01       		.uleb128 0x1
 1066 0163 50       		.byte	0x50
 1067 0164 02       		.uleb128 0x2
 1068 0165 74       		.byte	0x74
 1069 0166 00       		.sleb128 0
 1070 0167 00       		.byte	0
 1071 0168 00       		.byte	0
 1072 0169 0E       		.uleb128 0xe
 1073 016a AC030000 		.4byte	.LASF22
 1074 016e 01       		.byte	0x1
 1075 016f 1901     		.2byte	0x119
 1076 0171 00000000 		.4byte	.LFB3
 1077 0175 44000000 		.4byte	.LFE3-.LFB3
 1078 0179 01       		.uleb128 0x1
 1079 017a 9C       		.byte	0x9c
 1080 017b CE010000 		.4byte	0x1ce
 1081 017f 0F       		.uleb128 0xf
 1082 0180 6900     		.ascii	"i\000"
 1083 0182 01       		.byte	0x1
 1084 0183 1C01     		.2byte	0x11c
 1085 0185 6B000000 		.4byte	0x6b
 1086 0189 5E000000 		.4byte	.LLST3
 1087 018d 10       		.uleb128 0x10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 55


 1088 018e 706F7300 		.ascii	"pos\000"
 1089 0192 01       		.byte	0x1
 1090 0193 1D01     		.2byte	0x11d
 1091 0195 6B000000 		.4byte	0x6b
 1092 0199 01       		.uleb128 0x1
 1093 019a 52       		.byte	0x52
 1094 019b 11       		.uleb128 0x11
 1095 019c 8C020000 		.4byte	.LASF23
 1096 01a0 01       		.byte	0x1
 1097 01a1 1E01     		.2byte	0x11e
 1098 01a3 6B000000 		.4byte	0x6b
 1099 01a7 7C000000 		.4byte	.LLST4
 1100 01ab 0B       		.uleb128 0xb
 1101 01ac 06000000 		.4byte	.LVL12
 1102 01b0 82060000 		.4byte	0x682
 1103 01b4 0B       		.uleb128 0xb
 1104 01b5 0A000000 		.4byte	.LVL13
 1105 01b9 77060000 		.4byte	0x677
 1106 01bd 0C       		.uleb128 0xc
 1107 01be 32000000 		.4byte	.LVL17
 1108 01c2 B2000000 		.4byte	0xb2
 1109 01c6 0A       		.uleb128 0xa
 1110 01c7 01       		.uleb128 0x1
 1111 01c8 50       		.byte	0x50
 1112 01c9 02       		.uleb128 0x2
 1113 01ca 74       		.byte	0x74
 1114 01cb 00       		.sleb128 0
 1115 01cc 00       		.byte	0
 1116 01cd 00       		.byte	0
 1117 01ce 12       		.uleb128 0x12
 1118 01cf 5D030000 		.4byte	.LASF29
 1119 01d3 01       		.byte	0x1
 1120 01d4 4302     		.2byte	0x243
 1121 01d6 6B000000 		.4byte	0x6b
 1122 01da 00000000 		.4byte	.LFB6
 1123 01de 8C000000 		.4byte	.LFE6-.LFB6
 1124 01e2 01       		.uleb128 0x1
 1125 01e3 9C       		.byte	0x9c
 1126 01e4 5F020000 		.4byte	0x25f
 1127 01e8 13       		.uleb128 0x13
 1128 01e9 40020000 		.4byte	.LASF19
 1129 01ed 01       		.byte	0x1
 1130 01ee 4302     		.2byte	0x243
 1131 01f0 6B000000 		.4byte	0x6b
 1132 01f4 B1000000 		.4byte	.LLST5
 1133 01f8 14       		.uleb128 0x14
 1134 01f9 51050000 		.4byte	.LASF25
 1135 01fd 01       		.byte	0x1
 1136 01fe 4602     		.2byte	0x246
 1137 0200 6B000000 		.4byte	0x6b
 1138 0204 0F       		.uleb128 0xf
 1139 0205 706F7300 		.ascii	"pos\000"
 1140 0209 01       		.byte	0x1
 1141 020a 4802     		.2byte	0x248
 1142 020c 6B000000 		.4byte	0x6b
 1143 0210 EB000000 		.4byte	.LLST6
 1144 0214 15       		.uleb128 0x15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 56


 1145 0215 F2030000 		.4byte	.LASF24
 1146 0219 01       		.byte	0x1
 1147 021a 4902     		.2byte	0x249
 1148 021c 6B000000 		.4byte	0x6b
 1149 0220 01       		.uleb128 0x1
 1150 0221 53       		.byte	0x53
 1151 0222 14       		.uleb128 0x14
 1152 0223 EB030000 		.4byte	.LASF21
 1153 0227 01       		.byte	0x1
 1154 0228 4B02     		.2byte	0x24b
 1155 022a 6B000000 		.4byte	0x6b
 1156 022e 11       		.uleb128 0x11
 1157 022f 17000000 		.4byte	.LASF26
 1158 0233 01       		.byte	0x1
 1159 0234 4C02     		.2byte	0x24c
 1160 0236 77000000 		.4byte	0x77
 1161 023a FE000000 		.4byte	.LLST7
 1162 023e 11       		.uleb128 0x11
 1163 023f 86010000 		.4byte	.LASF27
 1164 0243 01       		.byte	0x1
 1165 0244 4D02     		.2byte	0x24d
 1166 0246 77000000 		.4byte	0x77
 1167 024a 11010000 		.4byte	.LLST8
 1168 024e 11       		.uleb128 0x11
 1169 024f 83020000 		.4byte	.LASF28
 1170 0253 01       		.byte	0x1
 1171 0254 4E02     		.2byte	0x24e
 1172 0256 6B000000 		.4byte	0x6b
 1173 025a 57010000 		.4byte	.LLST9
 1174 025e 00       		.byte	0
 1175 025f 12       		.uleb128 0x12
 1176 0260 8C000000 		.4byte	.LASF30
 1177 0264 01       		.byte	0x1
 1178 0265 8B02     		.2byte	0x28b
 1179 0267 6B000000 		.4byte	0x6b
 1180 026b 00000000 		.4byte	.LFB7
 1181 026f 2C000000 		.4byte	.LFE7-.LFB7
 1182 0273 01       		.uleb128 0x1
 1183 0274 9C       		.byte	0x9c
 1184 0275 CA020000 		.4byte	0x2ca
 1185 0279 13       		.uleb128 0x13
 1186 027a EB030000 		.4byte	.LASF21
 1187 027e 01       		.byte	0x1
 1188 027f 8B02     		.2byte	0x28b
 1189 0281 6B000000 		.4byte	0x6b
 1190 0285 6A010000 		.4byte	.LLST10
 1191 0289 11       		.uleb128 0x11
 1192 028a 31010000 		.4byte	.LASF31
 1193 028e 01       		.byte	0x1
 1194 028f 8E02     		.2byte	0x28e
 1195 0291 6B000000 		.4byte	0x6b
 1196 0295 8B010000 		.4byte	.LLST11
 1197 0299 11       		.uleb128 0x11
 1198 029a 3A010000 		.4byte	.LASF32
 1199 029e 01       		.byte	0x1
 1200 029f 8F02     		.2byte	0x28f
 1201 02a1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 57


 1202 02a5 A9010000 		.4byte	.LLST12
 1203 02a9 11       		.uleb128 0x11
 1204 02aa 4A010000 		.4byte	.LASF33
 1205 02ae 01       		.byte	0x1
 1206 02af 9002     		.2byte	0x290
 1207 02b1 6B000000 		.4byte	0x6b
 1208 02b5 BC010000 		.4byte	.LLST13
 1209 02b9 0C       		.uleb128 0xc
 1210 02ba 16000000 		.4byte	.LVL39
 1211 02be CE010000 		.4byte	0x1ce
 1212 02c2 0A       		.uleb128 0xa
 1213 02c3 01       		.uleb128 0x1
 1214 02c4 50       		.byte	0x50
 1215 02c5 02       		.uleb128 0x2
 1216 02c6 74       		.byte	0x74
 1217 02c7 00       		.sleb128 0
 1218 02c8 00       		.byte	0
 1219 02c9 00       		.byte	0
 1220 02ca 12       		.uleb128 0x12
 1221 02cb 7C030000 		.4byte	.LASF34
 1222 02cf 01       		.byte	0x1
 1223 02d0 B702     		.2byte	0x2b7
 1224 02d2 6B000000 		.4byte	0x6b
 1225 02d6 00000000 		.4byte	.LFB8
 1226 02da 1E000000 		.4byte	.LFE8-.LFB8
 1227 02de 01       		.uleb128 0x1
 1228 02df 9C       		.byte	0x9c
 1229 02e0 13030000 		.4byte	0x313
 1230 02e4 0F       		.uleb128 0xf
 1231 02e5 6900     		.ascii	"i\000"
 1232 02e7 01       		.byte	0x1
 1233 02e8 BA02     		.2byte	0x2ba
 1234 02ea 6B000000 		.4byte	0x6b
 1235 02ee DB010000 		.4byte	.LLST14
 1236 02f2 11       		.uleb128 0x11
 1237 02f3 4A010000 		.4byte	.LASF33
 1238 02f7 01       		.byte	0x1
 1239 02f8 BB02     		.2byte	0x2bb
 1240 02fa 6B000000 		.4byte	0x6b
 1241 02fe 05020000 		.4byte	.LLST15
 1242 0302 0C       		.uleb128 0xc
 1243 0303 0E000000 		.4byte	.LVL46
 1244 0307 5F020000 		.4byte	0x25f
 1245 030b 0A       		.uleb128 0xa
 1246 030c 01       		.uleb128 0x1
 1247 030d 50       		.byte	0x50
 1248 030e 02       		.uleb128 0x2
 1249 030f 74       		.byte	0x74
 1250 0310 00       		.sleb128 0
 1251 0311 00       		.byte	0
 1252 0312 00       		.byte	0
 1253 0313 0E       		.uleb128 0xe
 1254 0314 74000000 		.4byte	.LASF35
 1255 0318 01       		.byte	0x1
 1256 0319 E502     		.2byte	0x2e5
 1257 031b 00000000 		.4byte	.LFB9
 1258 031f 38000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 58


 1259 0323 01       		.uleb128 0x1
 1260 0324 9C       		.byte	0x9c
 1261 0325 78030000 		.4byte	0x378
 1262 0329 13       		.uleb128 0x13
 1263 032a EB030000 		.4byte	.LASF21
 1264 032e 01       		.byte	0x1
 1265 032f E502     		.2byte	0x2e5
 1266 0331 6B000000 		.4byte	0x6b
 1267 0335 24020000 		.4byte	.LLST16
 1268 0339 10       		.uleb128 0x10
 1269 033a 706F7300 		.ascii	"pos\000"
 1270 033e 01       		.byte	0x1
 1271 033f E802     		.2byte	0x2e8
 1272 0341 6B000000 		.4byte	0x6b
 1273 0345 01       		.uleb128 0x1
 1274 0346 50       		.byte	0x50
 1275 0347 11       		.uleb128 0x11
 1276 0348 8C020000 		.4byte	.LASF23
 1277 034c 01       		.byte	0x1
 1278 034d E902     		.2byte	0x2e9
 1279 034f 6B000000 		.4byte	0x6b
 1280 0353 45020000 		.4byte	.LLST17
 1281 0357 11       		.uleb128 0x11
 1282 0358 31010000 		.4byte	.LASF31
 1283 035c 01       		.byte	0x1
 1284 035d EA02     		.2byte	0x2ea
 1285 035f 6B000000 		.4byte	0x6b
 1286 0363 7A020000 		.4byte	.LLST18
 1287 0367 11       		.uleb128 0x11
 1288 0368 3A010000 		.4byte	.LASF32
 1289 036c 01       		.byte	0x1
 1290 036d EB02     		.2byte	0x2eb
 1291 036f 6B000000 		.4byte	0x6b
 1292 0373 98020000 		.4byte	.LLST19
 1293 0377 00       		.byte	0
 1294 0378 0E       		.uleb128 0xe
 1295 0379 59010000 		.4byte	.LASF36
 1296 037d 01       		.byte	0x1
 1297 037e 1703     		.2byte	0x317
 1298 0380 00000000 		.4byte	.LFB10
 1299 0384 38000000 		.4byte	.LFE10-.LFB10
 1300 0388 01       		.uleb128 0x1
 1301 0389 9C       		.byte	0x9c
 1302 038a DD030000 		.4byte	0x3dd
 1303 038e 13       		.uleb128 0x13
 1304 038f EB030000 		.4byte	.LASF21
 1305 0393 01       		.byte	0x1
 1306 0394 1703     		.2byte	0x317
 1307 0396 6B000000 		.4byte	0x6b
 1308 039a AB020000 		.4byte	.LLST20
 1309 039e 10       		.uleb128 0x10
 1310 039f 706F7300 		.ascii	"pos\000"
 1311 03a3 01       		.byte	0x1
 1312 03a4 1A03     		.2byte	0x31a
 1313 03a6 6B000000 		.4byte	0x6b
 1314 03aa 01       		.uleb128 0x1
 1315 03ab 50       		.byte	0x50
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 59


 1316 03ac 11       		.uleb128 0x11
 1317 03ad 8C020000 		.4byte	.LASF23
 1318 03b1 01       		.byte	0x1
 1319 03b2 1B03     		.2byte	0x31b
 1320 03b4 6B000000 		.4byte	0x6b
 1321 03b8 CC020000 		.4byte	.LLST21
 1322 03bc 11       		.uleb128 0x11
 1323 03bd 31010000 		.4byte	.LASF31
 1324 03c1 01       		.byte	0x1
 1325 03c2 1C03     		.2byte	0x31c
 1326 03c4 6B000000 		.4byte	0x6b
 1327 03c8 01030000 		.4byte	.LLST22
 1328 03cc 11       		.uleb128 0x11
 1329 03cd 3A010000 		.4byte	.LASF32
 1330 03d1 01       		.byte	0x1
 1331 03d2 1D03     		.2byte	0x31d
 1332 03d4 6B000000 		.4byte	0x6b
 1333 03d8 1F030000 		.4byte	.LLST23
 1334 03dc 00       		.byte	0
 1335 03dd 12       		.uleb128 0x12
 1336 03de 79050000 		.4byte	.LASF37
 1337 03e2 01       		.byte	0x1
 1338 03e3 9007     		.2byte	0x790
 1339 03e5 77000000 		.4byte	0x77
 1340 03e9 00000000 		.4byte	.LFB11
 1341 03ed 0C000000 		.4byte	.LFE11-.LFB11
 1342 03f1 01       		.uleb128 0x1
 1343 03f2 9C       		.byte	0x9c
 1344 03f3 24040000 		.4byte	0x424
 1345 03f7 16       		.uleb128 0x16
 1346 03f8 783100   		.ascii	"x1\000"
 1347 03fb 01       		.byte	0x1
 1348 03fc 9007     		.2byte	0x790
 1349 03fe 77000000 		.4byte	0x77
 1350 0402 32030000 		.4byte	.LLST24
 1351 0406 17       		.uleb128 0x17
 1352 0407 783200   		.ascii	"x2\000"
 1353 040a 01       		.byte	0x1
 1354 040b 9007     		.2byte	0x790
 1355 040d 77000000 		.4byte	0x77
 1356 0411 01       		.uleb128 0x1
 1357 0412 51       		.byte	0x51
 1358 0413 0F       		.uleb128 0xf
 1359 0414 746D7000 		.ascii	"tmp\000"
 1360 0418 01       		.byte	0x1
 1361 0419 9307     		.2byte	0x793
 1362 041b 83000000 		.4byte	0x83
 1363 041f 53030000 		.4byte	.LLST25
 1364 0423 00       		.byte	0
 1365 0424 0E       		.uleb128 0xe
 1366 0425 F9030000 		.4byte	.LASF38
 1367 0429 01       		.byte	0x1
 1368 042a 5C01     		.2byte	0x15c
 1369 042c 00000000 		.4byte	.LFB4
 1370 0430 C0000000 		.4byte	.LFE4-.LFB4
 1371 0434 01       		.uleb128 0x1
 1372 0435 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 60


 1373 0436 B4040000 		.4byte	0x4b4
 1374 043a 13       		.uleb128 0x13
 1375 043b 40020000 		.4byte	.LASF19
 1376 043f 01       		.byte	0x1
 1377 0440 5C01     		.2byte	0x15c
 1378 0442 6B000000 		.4byte	0x6b
 1379 0446 75030000 		.4byte	.LLST26
 1380 044a 11       		.uleb128 0x11
 1381 044b 62020000 		.4byte	.LASF39
 1382 044f 01       		.byte	0x1
 1383 0450 5F01     		.2byte	0x15f
 1384 0452 83000000 		.4byte	0x83
 1385 0456 96030000 		.4byte	.LLST27
 1386 045a 11       		.uleb128 0x11
 1387 045b 8F050000 		.4byte	.LASF40
 1388 045f 01       		.byte	0x1
 1389 0460 6001     		.2byte	0x160
 1390 0462 77000000 		.4byte	0x77
 1391 0466 C3030000 		.4byte	.LLST28
 1392 046a 11       		.uleb128 0x11
 1393 046b 07000000 		.4byte	.LASF41
 1394 046f 01       		.byte	0x1
 1395 0470 6101     		.2byte	0x161
 1396 0472 77000000 		.4byte	0x77
 1397 0476 E1030000 		.4byte	.LLST29
 1398 047a 11       		.uleb128 0x11
 1399 047b EB030000 		.4byte	.LASF21
 1400 047f 01       		.byte	0x1
 1401 0480 6201     		.2byte	0x162
 1402 0482 6B000000 		.4byte	0x6b
 1403 0486 27040000 		.4byte	.LLST30
 1404 048a 11       		.uleb128 0x11
 1405 048b D2030000 		.4byte	.LASF42
 1406 048f 01       		.byte	0x1
 1407 0490 6301     		.2byte	0x163
 1408 0492 77000000 		.4byte	0x77
 1409 0496 5D040000 		.4byte	.LLST31
 1410 049a 0B       		.uleb128 0xb
 1411 049b 20000000 		.4byte	.LVL78
 1412 049f DD030000 		.4byte	0x3dd
 1413 04a3 0C       		.uleb128 0xc
 1414 04a4 50000000 		.4byte	.LVL84
 1415 04a8 B2000000 		.4byte	0xb2
 1416 04ac 0A       		.uleb128 0xa
 1417 04ad 01       		.uleb128 0x1
 1418 04ae 50       		.byte	0x50
 1419 04af 02       		.uleb128 0x2
 1420 04b0 74       		.byte	0x74
 1421 04b1 00       		.sleb128 0
 1422 04b2 00       		.byte	0
 1423 04b3 00       		.byte	0
 1424 04b4 0E       		.uleb128 0xe
 1425 04b5 03030000 		.4byte	.LASF43
 1426 04b9 01       		.byte	0x1
 1427 04ba 0902     		.2byte	0x209
 1428 04bc 00000000 		.4byte	.LFB5
 1429 04c0 2C000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 61


 1430 04c4 01       		.uleb128 0x1
 1431 04c5 9C       		.byte	0x9c
 1432 04c6 07050000 		.4byte	0x507
 1433 04ca 0F       		.uleb128 0xf
 1434 04cb 6900     		.ascii	"i\000"
 1435 04cd 01       		.byte	0x1
 1436 04ce 0C02     		.2byte	0x20c
 1437 04d0 6B000000 		.4byte	0x6b
 1438 04d4 70040000 		.4byte	.LLST32
 1439 04d8 10       		.uleb128 0x10
 1440 04d9 706F7300 		.ascii	"pos\000"
 1441 04dd 01       		.byte	0x1
 1442 04de 0D02     		.2byte	0x20d
 1443 04e0 6B000000 		.4byte	0x6b
 1444 04e4 01       		.uleb128 0x1
 1445 04e5 52       		.byte	0x52
 1446 04e6 11       		.uleb128 0x11
 1447 04e7 8C020000 		.4byte	.LASF23
 1448 04eb 01       		.byte	0x1
 1449 04ec 0E02     		.2byte	0x20e
 1450 04ee 6B000000 		.4byte	0x6b
 1451 04f2 9A040000 		.4byte	.LLST33
 1452 04f6 0C       		.uleb128 0xc
 1453 04f7 1E000000 		.4byte	.LVL96
 1454 04fb 24040000 		.4byte	0x424
 1455 04ff 0A       		.uleb128 0xa
 1456 0500 01       		.uleb128 0x1
 1457 0501 50       		.byte	0x50
 1458 0502 02       		.uleb128 0x2
 1459 0503 74       		.byte	0x74
 1460 0504 00       		.sleb128 0
 1461 0505 00       		.byte	0
 1462 0506 00       		.byte	0
 1463 0507 18       		.uleb128 0x18
 1464 0508 77000000 		.4byte	0x77
 1465 050c 17050000 		.4byte	0x517
 1466 0510 19       		.uleb128 0x19
 1467 0511 AB000000 		.4byte	0xab
 1468 0515 01       		.byte	0x1
 1469 0516 00       		.byte	0
 1470 0517 1A       		.uleb128 0x1a
 1471 0518 D9000000 		.4byte	.LASF44
 1472 051c 03       		.byte	0x3
 1473 051d BA02     		.2byte	0x2ba
 1474 051f 07050000 		.4byte	0x507
 1475 0523 1B       		.uleb128 0x1b
 1476 0524 43030000 		.4byte	.LASF45
 1477 0528 01       		.byte	0x1
 1478 0529 21       		.byte	0x21
 1479 052a 07050000 		.4byte	0x507
 1480 052e 05       		.uleb128 0x5
 1481 052f 03       		.byte	0x3
 1482 0530 00000000 		.4byte	CapSense_1_rawFilterData1
 1483 0534 18       		.uleb128 0x18
 1484 0535 6B000000 		.4byte	0x6b
 1485 0539 44050000 		.4byte	0x544
 1486 053d 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 62


 1487 053e AB000000 		.4byte	0xab
 1488 0542 00       		.byte	0
 1489 0543 00       		.byte	0
 1490 0544 1A       		.uleb128 0x1a
 1491 0545 67020000 		.4byte	.LASF46
 1492 0549 04       		.byte	0x4
 1493 054a 0401     		.2byte	0x104
 1494 054c 34050000 		.4byte	0x534
 1495 0550 18       		.uleb128 0x18
 1496 0551 60050000 		.4byte	0x560
 1497 0555 60050000 		.4byte	0x560
 1498 0559 19       		.uleb128 0x19
 1499 055a AB000000 		.4byte	0xab
 1500 055e 01       		.byte	0x1
 1501 055f 00       		.byte	0
 1502 0560 1C       		.uleb128 0x1c
 1503 0561 6B000000 		.4byte	0x6b
 1504 0565 1A       		.uleb128 0x1a
 1505 0566 C7020000 		.4byte	.LASF47
 1506 056a 04       		.byte	0x4
 1507 056b 0501     		.2byte	0x105
 1508 056d 71050000 		.4byte	0x571
 1509 0571 1C       		.uleb128 0x1c
 1510 0572 50050000 		.4byte	0x550
 1511 0576 1B       		.uleb128 0x1b
 1512 0577 5F050000 		.4byte	.LASF48
 1513 057b 01       		.byte	0x1
 1514 057c 29       		.byte	0x29
 1515 057d 07050000 		.4byte	0x507
 1516 0581 05       		.uleb128 0x5
 1517 0582 03       		.byte	0x3
 1518 0583 00000000 		.4byte	CapSense_1_sensorBaseline
 1519 0587 18       		.uleb128 0x18
 1520 0588 6B000000 		.4byte	0x6b
 1521 058c 97050000 		.4byte	0x597
 1522 0590 19       		.uleb128 0x19
 1523 0591 AB000000 		.4byte	0xab
 1524 0595 01       		.byte	0x1
 1525 0596 00       		.byte	0
 1526 0597 1B       		.uleb128 0x1b
 1527 0598 34050000 		.4byte	.LASF49
 1528 059c 01       		.byte	0x1
 1529 059d 2A       		.byte	0x2a
 1530 059e 87050000 		.4byte	0x587
 1531 05a2 05       		.uleb128 0x5
 1532 05a3 03       		.byte	0x3
 1533 05a4 00000000 		.4byte	CapSense_1_sensorBaselineLow
 1534 05a8 1B       		.uleb128 0x1b
 1535 05a9 19040000 		.4byte	.LASF50
 1536 05ad 01       		.byte	0x1
 1537 05ae 2B       		.byte	0x2b
 1538 05af 07050000 		.4byte	0x507
 1539 05b3 05       		.uleb128 0x5
 1540 05b4 03       		.byte	0x3
 1541 05b5 00000000 		.4byte	CapSense_1_sensorSignal
 1542 05b9 1B       		.uleb128 0x1b
 1543 05ba 2B030000 		.4byte	.LASF51
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 63


 1544 05be 01       		.byte	0x1
 1545 05bf 2C       		.byte	0x2c
 1546 05c0 34050000 		.4byte	0x534
 1547 05c4 05       		.uleb128 0x5
 1548 05c5 03       		.byte	0x3
 1549 05c6 00000000 		.4byte	CapSense_1_sensorOnMask
 1550 05ca 1B       		.uleb128 0x1b
 1551 05cb A8020000 		.4byte	.LASF52
 1552 05cf 01       		.byte	0x1
 1553 05d0 2E       		.byte	0x2e
 1554 05d1 87050000 		.4byte	0x587
 1555 05d5 05       		.uleb128 0x5
 1556 05d6 03       		.byte	0x3
 1557 05d7 00000000 		.4byte	CapSense_1_lowBaselineResetCnt
 1558 05db 1B       		.uleb128 0x1b
 1559 05dc D5010000 		.4byte	.LASF53
 1560 05e0 01       		.byte	0x1
 1561 05e1 30       		.byte	0x30
 1562 05e2 07050000 		.4byte	0x507
 1563 05e6 05       		.uleb128 0x5
 1564 05e7 03       		.byte	0x3
 1565 05e8 00000000 		.4byte	CapSense_1_fingerThreshold
 1566 05ec 1B       		.uleb128 0x1b
 1567 05ed AB000000 		.4byte	.LASF54
 1568 05f1 01       		.byte	0x1
 1569 05f2 34       		.byte	0x34
 1570 05f3 07050000 		.4byte	0x507
 1571 05f7 05       		.uleb128 0x5
 1572 05f8 03       		.byte	0x3
 1573 05f9 00000000 		.4byte	CapSense_1_noiseThreshold
 1574 05fd 1B       		.uleb128 0x1b
 1575 05fe A7010000 		.4byte	.LASF55
 1576 0602 01       		.byte	0x1
 1577 0603 38       		.byte	0x38
 1578 0604 07050000 		.4byte	0x507
 1579 0608 05       		.uleb128 0x5
 1580 0609 03       		.byte	0x3
 1581 060a 00000000 		.4byte	CapSense_1_hysteresis
 1582 060e 1B       		.uleb128 0x1b
 1583 060f C5000000 		.4byte	.LASF56
 1584 0613 01       		.byte	0x1
 1585 0614 3C       		.byte	0x3c
 1586 0615 87050000 		.4byte	0x587
 1587 0619 05       		.uleb128 0x5
 1588 061a 03       		.byte	0x3
 1589 061b 00000000 		.4byte	CapSense_1_debounce
 1590 061f 18       		.uleb128 0x18
 1591 0620 6B000000 		.4byte	0x6b
 1592 0624 2F060000 		.4byte	0x62f
 1593 0628 19       		.uleb128 0x19
 1594 0629 AB000000 		.4byte	0xab
 1595 062d 02       		.byte	0x2
 1596 062e 00       		.byte	0
 1597 062f 1B       		.uleb128 0x1b
 1598 0630 31040000 		.4byte	.LASF57
 1599 0634 01       		.byte	0x1
 1600 0635 40       		.byte	0x40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 64


 1601 0636 1F060000 		.4byte	0x61f
 1602 063a 05       		.uleb128 0x5
 1603 063b 03       		.byte	0x3
 1604 063c 00000000 		.4byte	CapSense_1_debounceCounter
 1605 0640 1B       		.uleb128 0x1b
 1606 0641 BD010000 		.4byte	.LASF58
 1607 0645 01       		.byte	0x1
 1608 0646 44       		.byte	0x44
 1609 0647 51060000 		.4byte	0x651
 1610 064b 05       		.uleb128 0x5
 1611 064c 03       		.byte	0x3
 1612 064d 00000000 		.4byte	CapSense_1_rawDataIndex
 1613 0651 1C       		.uleb128 0x1c
 1614 0652 50050000 		.4byte	0x550
 1615 0656 1B       		.uleb128 0x1b
 1616 0657 47020000 		.4byte	.LASF59
 1617 065b 01       		.byte	0x1
 1618 065c 4A       		.byte	0x4a
 1619 065d 67060000 		.4byte	0x667
 1620 0661 05       		.uleb128 0x5
 1621 0662 03       		.byte	0x3
 1622 0663 00000000 		.4byte	CapSense_1_numberOfSensors
 1623 0667 1C       		.uleb128 0x1c
 1624 0668 50050000 		.4byte	0x550
 1625 066c 1D       		.uleb128 0x1d
 1626 066d 91010000 		.4byte	.LASF60
 1627 0671 91010000 		.4byte	.LASF60
 1628 0675 03       		.byte	0x3
 1629 0676 9A       		.byte	0x9a
 1630 0677 1D       		.uleb128 0x1d
 1631 0678 22050000 		.4byte	.LASF61
 1632 067c 22050000 		.4byte	.LASF61
 1633 0680 03       		.byte	0x3
 1634 0681 99       		.byte	0x99
 1635 0682 1D       		.uleb128 0x1d
 1636 0683 FD010000 		.4byte	.LASF62
 1637 0687 FD010000 		.4byte	.LASF62
 1638 068b 03       		.byte	0x3
 1639 068c 9B       		.byte	0x9b
 1640 068d 00       		.byte	0
 1641              		.section	.debug_abbrev,"",%progbits
 1642              	.Ldebug_abbrev0:
 1643 0000 01       		.uleb128 0x1
 1644 0001 11       		.uleb128 0x11
 1645 0002 01       		.byte	0x1
 1646 0003 25       		.uleb128 0x25
 1647 0004 0E       		.uleb128 0xe
 1648 0005 13       		.uleb128 0x13
 1649 0006 0B       		.uleb128 0xb
 1650 0007 03       		.uleb128 0x3
 1651 0008 0E       		.uleb128 0xe
 1652 0009 1B       		.uleb128 0x1b
 1653 000a 0E       		.uleb128 0xe
 1654 000b 55       		.uleb128 0x55
 1655 000c 17       		.uleb128 0x17
 1656 000d 11       		.uleb128 0x11
 1657 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 65


 1658 000f 10       		.uleb128 0x10
 1659 0010 17       		.uleb128 0x17
 1660 0011 00       		.byte	0
 1661 0012 00       		.byte	0
 1662 0013 02       		.uleb128 0x2
 1663 0014 24       		.uleb128 0x24
 1664 0015 00       		.byte	0
 1665 0016 0B       		.uleb128 0xb
 1666 0017 0B       		.uleb128 0xb
 1667 0018 3E       		.uleb128 0x3e
 1668 0019 0B       		.uleb128 0xb
 1669 001a 03       		.uleb128 0x3
 1670 001b 0E       		.uleb128 0xe
 1671 001c 00       		.byte	0
 1672 001d 00       		.byte	0
 1673 001e 03       		.uleb128 0x3
 1674 001f 24       		.uleb128 0x24
 1675 0020 00       		.byte	0
 1676 0021 0B       		.uleb128 0xb
 1677 0022 0B       		.uleb128 0xb
 1678 0023 3E       		.uleb128 0x3e
 1679 0024 0B       		.uleb128 0xb
 1680 0025 03       		.uleb128 0x3
 1681 0026 08       		.uleb128 0x8
 1682 0027 00       		.byte	0
 1683 0028 00       		.byte	0
 1684 0029 04       		.uleb128 0x4
 1685 002a 16       		.uleb128 0x16
 1686 002b 00       		.byte	0
 1687 002c 03       		.uleb128 0x3
 1688 002d 0E       		.uleb128 0xe
 1689 002e 3A       		.uleb128 0x3a
 1690 002f 0B       		.uleb128 0xb
 1691 0030 3B       		.uleb128 0x3b
 1692 0031 05       		.uleb128 0x5
 1693 0032 49       		.uleb128 0x49
 1694 0033 13       		.uleb128 0x13
 1695 0034 00       		.byte	0
 1696 0035 00       		.byte	0
 1697 0036 05       		.uleb128 0x5
 1698 0037 2E       		.uleb128 0x2e
 1699 0038 01       		.byte	0x1
 1700 0039 3F       		.uleb128 0x3f
 1701 003a 19       		.uleb128 0x19
 1702 003b 03       		.uleb128 0x3
 1703 003c 0E       		.uleb128 0xe
 1704 003d 3A       		.uleb128 0x3a
 1705 003e 0B       		.uleb128 0xb
 1706 003f 3B       		.uleb128 0x3b
 1707 0040 0B       		.uleb128 0xb
 1708 0041 27       		.uleb128 0x27
 1709 0042 19       		.uleb128 0x19
 1710 0043 11       		.uleb128 0x11
 1711 0044 01       		.uleb128 0x1
 1712 0045 12       		.uleb128 0x12
 1713 0046 06       		.uleb128 0x6
 1714 0047 40       		.uleb128 0x40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 66


 1715 0048 18       		.uleb128 0x18
 1716 0049 9742     		.uleb128 0x2117
 1717 004b 19       		.uleb128 0x19
 1718 004c 01       		.uleb128 0x1
 1719 004d 13       		.uleb128 0x13
 1720 004e 00       		.byte	0
 1721 004f 00       		.byte	0
 1722 0050 06       		.uleb128 0x6
 1723 0051 05       		.uleb128 0x5
 1724 0052 00       		.byte	0
 1725 0053 03       		.uleb128 0x3
 1726 0054 0E       		.uleb128 0xe
 1727 0055 3A       		.uleb128 0x3a
 1728 0056 0B       		.uleb128 0xb
 1729 0057 3B       		.uleb128 0x3b
 1730 0058 0B       		.uleb128 0xb
 1731 0059 49       		.uleb128 0x49
 1732 005a 13       		.uleb128 0x13
 1733 005b 02       		.uleb128 0x2
 1734 005c 18       		.uleb128 0x18
 1735 005d 00       		.byte	0
 1736 005e 00       		.byte	0
 1737 005f 07       		.uleb128 0x7
 1738 0060 34       		.uleb128 0x34
 1739 0061 00       		.byte	0
 1740 0062 03       		.uleb128 0x3
 1741 0063 0E       		.uleb128 0xe
 1742 0064 3A       		.uleb128 0x3a
 1743 0065 0B       		.uleb128 0xb
 1744 0066 3B       		.uleb128 0x3b
 1745 0067 0B       		.uleb128 0xb
 1746 0068 49       		.uleb128 0x49
 1747 0069 13       		.uleb128 0x13
 1748 006a 02       		.uleb128 0x2
 1749 006b 17       		.uleb128 0x17
 1750 006c 00       		.byte	0
 1751 006d 00       		.byte	0
 1752 006e 08       		.uleb128 0x8
 1753 006f 05       		.uleb128 0x5
 1754 0070 00       		.byte	0
 1755 0071 03       		.uleb128 0x3
 1756 0072 0E       		.uleb128 0xe
 1757 0073 3A       		.uleb128 0x3a
 1758 0074 0B       		.uleb128 0xb
 1759 0075 3B       		.uleb128 0x3b
 1760 0076 0B       		.uleb128 0xb
 1761 0077 49       		.uleb128 0x49
 1762 0078 13       		.uleb128 0x13
 1763 0079 02       		.uleb128 0x2
 1764 007a 17       		.uleb128 0x17
 1765 007b 00       		.byte	0
 1766 007c 00       		.byte	0
 1767 007d 09       		.uleb128 0x9
 1768 007e 898201   		.uleb128 0x4109
 1769 0081 01       		.byte	0x1
 1770 0082 11       		.uleb128 0x11
 1771 0083 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 67


 1772 0084 31       		.uleb128 0x31
 1773 0085 13       		.uleb128 0x13
 1774 0086 01       		.uleb128 0x1
 1775 0087 13       		.uleb128 0x13
 1776 0088 00       		.byte	0
 1777 0089 00       		.byte	0
 1778 008a 0A       		.uleb128 0xa
 1779 008b 8A8201   		.uleb128 0x410a
 1780 008e 00       		.byte	0
 1781 008f 02       		.uleb128 0x2
 1782 0090 18       		.uleb128 0x18
 1783 0091 9142     		.uleb128 0x2111
 1784 0093 18       		.uleb128 0x18
 1785 0094 00       		.byte	0
 1786 0095 00       		.byte	0
 1787 0096 0B       		.uleb128 0xb
 1788 0097 898201   		.uleb128 0x4109
 1789 009a 00       		.byte	0
 1790 009b 11       		.uleb128 0x11
 1791 009c 01       		.uleb128 0x1
 1792 009d 31       		.uleb128 0x31
 1793 009e 13       		.uleb128 0x13
 1794 009f 00       		.byte	0
 1795 00a0 00       		.byte	0
 1796 00a1 0C       		.uleb128 0xc
 1797 00a2 898201   		.uleb128 0x4109
 1798 00a5 01       		.byte	0x1
 1799 00a6 11       		.uleb128 0x11
 1800 00a7 01       		.uleb128 0x1
 1801 00a8 31       		.uleb128 0x31
 1802 00a9 13       		.uleb128 0x13
 1803 00aa 00       		.byte	0
 1804 00ab 00       		.byte	0
 1805 00ac 0D       		.uleb128 0xd
 1806 00ad 34       		.uleb128 0x34
 1807 00ae 00       		.byte	0
 1808 00af 03       		.uleb128 0x3
 1809 00b0 08       		.uleb128 0x8
 1810 00b1 3A       		.uleb128 0x3a
 1811 00b2 0B       		.uleb128 0xb
 1812 00b3 3B       		.uleb128 0x3b
 1813 00b4 0B       		.uleb128 0xb
 1814 00b5 49       		.uleb128 0x49
 1815 00b6 13       		.uleb128 0x13
 1816 00b7 02       		.uleb128 0x2
 1817 00b8 17       		.uleb128 0x17
 1818 00b9 00       		.byte	0
 1819 00ba 00       		.byte	0
 1820 00bb 0E       		.uleb128 0xe
 1821 00bc 2E       		.uleb128 0x2e
 1822 00bd 01       		.byte	0x1
 1823 00be 3F       		.uleb128 0x3f
 1824 00bf 19       		.uleb128 0x19
 1825 00c0 03       		.uleb128 0x3
 1826 00c1 0E       		.uleb128 0xe
 1827 00c2 3A       		.uleb128 0x3a
 1828 00c3 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 68


 1829 00c4 3B       		.uleb128 0x3b
 1830 00c5 05       		.uleb128 0x5
 1831 00c6 27       		.uleb128 0x27
 1832 00c7 19       		.uleb128 0x19
 1833 00c8 11       		.uleb128 0x11
 1834 00c9 01       		.uleb128 0x1
 1835 00ca 12       		.uleb128 0x12
 1836 00cb 06       		.uleb128 0x6
 1837 00cc 40       		.uleb128 0x40
 1838 00cd 18       		.uleb128 0x18
 1839 00ce 9742     		.uleb128 0x2117
 1840 00d0 19       		.uleb128 0x19
 1841 00d1 01       		.uleb128 0x1
 1842 00d2 13       		.uleb128 0x13
 1843 00d3 00       		.byte	0
 1844 00d4 00       		.byte	0
 1845 00d5 0F       		.uleb128 0xf
 1846 00d6 34       		.uleb128 0x34
 1847 00d7 00       		.byte	0
 1848 00d8 03       		.uleb128 0x3
 1849 00d9 08       		.uleb128 0x8
 1850 00da 3A       		.uleb128 0x3a
 1851 00db 0B       		.uleb128 0xb
 1852 00dc 3B       		.uleb128 0x3b
 1853 00dd 05       		.uleb128 0x5
 1854 00de 49       		.uleb128 0x49
 1855 00df 13       		.uleb128 0x13
 1856 00e0 02       		.uleb128 0x2
 1857 00e1 17       		.uleb128 0x17
 1858 00e2 00       		.byte	0
 1859 00e3 00       		.byte	0
 1860 00e4 10       		.uleb128 0x10
 1861 00e5 34       		.uleb128 0x34
 1862 00e6 00       		.byte	0
 1863 00e7 03       		.uleb128 0x3
 1864 00e8 08       		.uleb128 0x8
 1865 00e9 3A       		.uleb128 0x3a
 1866 00ea 0B       		.uleb128 0xb
 1867 00eb 3B       		.uleb128 0x3b
 1868 00ec 05       		.uleb128 0x5
 1869 00ed 49       		.uleb128 0x49
 1870 00ee 13       		.uleb128 0x13
 1871 00ef 02       		.uleb128 0x2
 1872 00f0 18       		.uleb128 0x18
 1873 00f1 00       		.byte	0
 1874 00f2 00       		.byte	0
 1875 00f3 11       		.uleb128 0x11
 1876 00f4 34       		.uleb128 0x34
 1877 00f5 00       		.byte	0
 1878 00f6 03       		.uleb128 0x3
 1879 00f7 0E       		.uleb128 0xe
 1880 00f8 3A       		.uleb128 0x3a
 1881 00f9 0B       		.uleb128 0xb
 1882 00fa 3B       		.uleb128 0x3b
 1883 00fb 05       		.uleb128 0x5
 1884 00fc 49       		.uleb128 0x49
 1885 00fd 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 69


 1886 00fe 02       		.uleb128 0x2
 1887 00ff 17       		.uleb128 0x17
 1888 0100 00       		.byte	0
 1889 0101 00       		.byte	0
 1890 0102 12       		.uleb128 0x12
 1891 0103 2E       		.uleb128 0x2e
 1892 0104 01       		.byte	0x1
 1893 0105 3F       		.uleb128 0x3f
 1894 0106 19       		.uleb128 0x19
 1895 0107 03       		.uleb128 0x3
 1896 0108 0E       		.uleb128 0xe
 1897 0109 3A       		.uleb128 0x3a
 1898 010a 0B       		.uleb128 0xb
 1899 010b 3B       		.uleb128 0x3b
 1900 010c 05       		.uleb128 0x5
 1901 010d 27       		.uleb128 0x27
 1902 010e 19       		.uleb128 0x19
 1903 010f 49       		.uleb128 0x49
 1904 0110 13       		.uleb128 0x13
 1905 0111 11       		.uleb128 0x11
 1906 0112 01       		.uleb128 0x1
 1907 0113 12       		.uleb128 0x12
 1908 0114 06       		.uleb128 0x6
 1909 0115 40       		.uleb128 0x40
 1910 0116 18       		.uleb128 0x18
 1911 0117 9742     		.uleb128 0x2117
 1912 0119 19       		.uleb128 0x19
 1913 011a 01       		.uleb128 0x1
 1914 011b 13       		.uleb128 0x13
 1915 011c 00       		.byte	0
 1916 011d 00       		.byte	0
 1917 011e 13       		.uleb128 0x13
 1918 011f 05       		.uleb128 0x5
 1919 0120 00       		.byte	0
 1920 0121 03       		.uleb128 0x3
 1921 0122 0E       		.uleb128 0xe
 1922 0123 3A       		.uleb128 0x3a
 1923 0124 0B       		.uleb128 0xb
 1924 0125 3B       		.uleb128 0x3b
 1925 0126 05       		.uleb128 0x5
 1926 0127 49       		.uleb128 0x49
 1927 0128 13       		.uleb128 0x13
 1928 0129 02       		.uleb128 0x2
 1929 012a 17       		.uleb128 0x17
 1930 012b 00       		.byte	0
 1931 012c 00       		.byte	0
 1932 012d 14       		.uleb128 0x14
 1933 012e 34       		.uleb128 0x34
 1934 012f 00       		.byte	0
 1935 0130 03       		.uleb128 0x3
 1936 0131 0E       		.uleb128 0xe
 1937 0132 3A       		.uleb128 0x3a
 1938 0133 0B       		.uleb128 0xb
 1939 0134 3B       		.uleb128 0x3b
 1940 0135 05       		.uleb128 0x5
 1941 0136 49       		.uleb128 0x49
 1942 0137 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 70


 1943 0138 00       		.byte	0
 1944 0139 00       		.byte	0
 1945 013a 15       		.uleb128 0x15
 1946 013b 34       		.uleb128 0x34
 1947 013c 00       		.byte	0
 1948 013d 03       		.uleb128 0x3
 1949 013e 0E       		.uleb128 0xe
 1950 013f 3A       		.uleb128 0x3a
 1951 0140 0B       		.uleb128 0xb
 1952 0141 3B       		.uleb128 0x3b
 1953 0142 05       		.uleb128 0x5
 1954 0143 49       		.uleb128 0x49
 1955 0144 13       		.uleb128 0x13
 1956 0145 02       		.uleb128 0x2
 1957 0146 18       		.uleb128 0x18
 1958 0147 00       		.byte	0
 1959 0148 00       		.byte	0
 1960 0149 16       		.uleb128 0x16
 1961 014a 05       		.uleb128 0x5
 1962 014b 00       		.byte	0
 1963 014c 03       		.uleb128 0x3
 1964 014d 08       		.uleb128 0x8
 1965 014e 3A       		.uleb128 0x3a
 1966 014f 0B       		.uleb128 0xb
 1967 0150 3B       		.uleb128 0x3b
 1968 0151 05       		.uleb128 0x5
 1969 0152 49       		.uleb128 0x49
 1970 0153 13       		.uleb128 0x13
 1971 0154 02       		.uleb128 0x2
 1972 0155 17       		.uleb128 0x17
 1973 0156 00       		.byte	0
 1974 0157 00       		.byte	0
 1975 0158 17       		.uleb128 0x17
 1976 0159 05       		.uleb128 0x5
 1977 015a 00       		.byte	0
 1978 015b 03       		.uleb128 0x3
 1979 015c 08       		.uleb128 0x8
 1980 015d 3A       		.uleb128 0x3a
 1981 015e 0B       		.uleb128 0xb
 1982 015f 3B       		.uleb128 0x3b
 1983 0160 05       		.uleb128 0x5
 1984 0161 49       		.uleb128 0x49
 1985 0162 13       		.uleb128 0x13
 1986 0163 02       		.uleb128 0x2
 1987 0164 18       		.uleb128 0x18
 1988 0165 00       		.byte	0
 1989 0166 00       		.byte	0
 1990 0167 18       		.uleb128 0x18
 1991 0168 01       		.uleb128 0x1
 1992 0169 01       		.byte	0x1
 1993 016a 49       		.uleb128 0x49
 1994 016b 13       		.uleb128 0x13
 1995 016c 01       		.uleb128 0x1
 1996 016d 13       		.uleb128 0x13
 1997 016e 00       		.byte	0
 1998 016f 00       		.byte	0
 1999 0170 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 71


 2000 0171 21       		.uleb128 0x21
 2001 0172 00       		.byte	0
 2002 0173 49       		.uleb128 0x49
 2003 0174 13       		.uleb128 0x13
 2004 0175 2F       		.uleb128 0x2f
 2005 0176 0B       		.uleb128 0xb
 2006 0177 00       		.byte	0
 2007 0178 00       		.byte	0
 2008 0179 1A       		.uleb128 0x1a
 2009 017a 34       		.uleb128 0x34
 2010 017b 00       		.byte	0
 2011 017c 03       		.uleb128 0x3
 2012 017d 0E       		.uleb128 0xe
 2013 017e 3A       		.uleb128 0x3a
 2014 017f 0B       		.uleb128 0xb
 2015 0180 3B       		.uleb128 0x3b
 2016 0181 05       		.uleb128 0x5
 2017 0182 49       		.uleb128 0x49
 2018 0183 13       		.uleb128 0x13
 2019 0184 3F       		.uleb128 0x3f
 2020 0185 19       		.uleb128 0x19
 2021 0186 3C       		.uleb128 0x3c
 2022 0187 19       		.uleb128 0x19
 2023 0188 00       		.byte	0
 2024 0189 00       		.byte	0
 2025 018a 1B       		.uleb128 0x1b
 2026 018b 34       		.uleb128 0x34
 2027 018c 00       		.byte	0
 2028 018d 03       		.uleb128 0x3
 2029 018e 0E       		.uleb128 0xe
 2030 018f 3A       		.uleb128 0x3a
 2031 0190 0B       		.uleb128 0xb
 2032 0191 3B       		.uleb128 0x3b
 2033 0192 0B       		.uleb128 0xb
 2034 0193 49       		.uleb128 0x49
 2035 0194 13       		.uleb128 0x13
 2036 0195 3F       		.uleb128 0x3f
 2037 0196 19       		.uleb128 0x19
 2038 0197 02       		.uleb128 0x2
 2039 0198 18       		.uleb128 0x18
 2040 0199 00       		.byte	0
 2041 019a 00       		.byte	0
 2042 019b 1C       		.uleb128 0x1c
 2043 019c 26       		.uleb128 0x26
 2044 019d 00       		.byte	0
 2045 019e 49       		.uleb128 0x49
 2046 019f 13       		.uleb128 0x13
 2047 01a0 00       		.byte	0
 2048 01a1 00       		.byte	0
 2049 01a2 1D       		.uleb128 0x1d
 2050 01a3 2E       		.uleb128 0x2e
 2051 01a4 00       		.byte	0
 2052 01a5 3F       		.uleb128 0x3f
 2053 01a6 19       		.uleb128 0x19
 2054 01a7 3C       		.uleb128 0x3c
 2055 01a8 19       		.uleb128 0x19
 2056 01a9 6E       		.uleb128 0x6e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 72


 2057 01aa 0E       		.uleb128 0xe
 2058 01ab 03       		.uleb128 0x3
 2059 01ac 0E       		.uleb128 0xe
 2060 01ad 3A       		.uleb128 0x3a
 2061 01ae 0B       		.uleb128 0xb
 2062 01af 3B       		.uleb128 0x3b
 2063 01b0 0B       		.uleb128 0xb
 2064 01b1 00       		.byte	0
 2065 01b2 00       		.byte	0
 2066 01b3 00       		.byte	0
 2067              		.section	.debug_loc,"",%progbits
 2068              	.Ldebug_loc0:
 2069              	.LLST0:
 2070 0000 06000000 		.4byte	.LVL1
 2071 0004 28000000 		.4byte	.LVL2
 2072 0008 0100     		.2byte	0x1
 2073 000a 52       		.byte	0x52
 2074 000b 00000000 		.4byte	0
 2075 000f 00000000 		.4byte	0
 2076              	.LLST1:
 2077 0013 00000000 		.4byte	.LVL3
 2078 0017 07000000 		.4byte	.LVL4-1
 2079 001b 0100     		.2byte	0x1
 2080 001d 50       		.byte	0x50
 2081 001e 07000000 		.4byte	.LVL4-1
 2082 0022 18000000 		.4byte	.LFE1
 2083 0026 0400     		.2byte	0x4
 2084 0028 F3       		.byte	0xf3
 2085 0029 01       		.uleb128 0x1
 2086 002a 50       		.byte	0x50
 2087 002b 9F       		.byte	0x9f
 2088 002c 00000000 		.4byte	0
 2089 0030 00000000 		.4byte	0
 2090              	.LLST2:
 2091 0034 02000000 		.4byte	.LVL7
 2092 0038 06000000 		.4byte	.LVL8
 2093 003c 0200     		.2byte	0x2
 2094 003e 30       		.byte	0x30
 2095 003f 9F       		.byte	0x9f
 2096 0040 06000000 		.4byte	.LVL8
 2097 0044 0E000000 		.4byte	.LVL10
 2098 0048 0100     		.2byte	0x1
 2099 004a 54       		.byte	0x54
 2100 004b 10000000 		.4byte	.LVL11
 2101 004f 16000000 		.4byte	.LFE2
 2102 0053 0100     		.2byte	0x1
 2103 0055 54       		.byte	0x54
 2104 0056 00000000 		.4byte	0
 2105 005a 00000000 		.4byte	0
 2106              	.LLST3:
 2107 005e 12000000 		.4byte	.LVL14
 2108 0062 34000000 		.4byte	.LVL18
 2109 0066 0100     		.2byte	0x1
 2110 0068 54       		.byte	0x54
 2111 0069 36000000 		.4byte	.LVL19
 2112 006d 3C000000 		.4byte	.LVL20
 2113 0071 0100     		.2byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 73


 2114 0073 54       		.byte	0x54
 2115 0074 00000000 		.4byte	0
 2116 0078 00000000 		.4byte	0
 2117              	.LLST4:
 2118 007c 1C000000 		.4byte	.LVL15
 2119 0080 28000000 		.4byte	.LVL16
 2120 0084 0100     		.2byte	0x1
 2121 0086 53       		.byte	0x53
 2122 0087 28000000 		.4byte	.LVL16
 2123 008b 34000000 		.4byte	.LVL18
 2124 008f 0700     		.2byte	0x7
 2125 0091 31       		.byte	0x31
 2126 0092 74       		.byte	0x74
 2127 0093 00       		.sleb128 0
 2128 0094 37       		.byte	0x37
 2129 0095 1A       		.byte	0x1a
 2130 0096 24       		.byte	0x24
 2131 0097 9F       		.byte	0x9f
 2132 0098 34000000 		.4byte	.LVL18
 2133 009c 36000000 		.4byte	.LVL19
 2134 00a0 0700     		.2byte	0x7
 2135 00a2 31       		.byte	0x31
 2136 00a3 74       		.byte	0x74
 2137 00a4 7F       		.sleb128 -1
 2138 00a5 37       		.byte	0x37
 2139 00a6 1A       		.byte	0x1a
 2140 00a7 24       		.byte	0x24
 2141 00a8 9F       		.byte	0x9f
 2142 00a9 00000000 		.4byte	0
 2143 00ad 00000000 		.4byte	0
 2144              	.LLST5:
 2145 00b1 00000000 		.4byte	.LVL21
 2146 00b5 2E000000 		.4byte	.LVL27
 2147 00b9 0100     		.2byte	0x1
 2148 00bb 50       		.byte	0x50
 2149 00bc 2E000000 		.4byte	.LVL27
 2150 00c0 42000000 		.4byte	.LVL29
 2151 00c4 0400     		.2byte	0x4
 2152 00c6 F3       		.byte	0xf3
 2153 00c7 01       		.uleb128 0x1
 2154 00c8 50       		.byte	0x50
 2155 00c9 9F       		.byte	0x9f
 2156 00ca 42000000 		.4byte	.LVL29
 2157 00ce 4A000000 		.4byte	.LVL30
 2158 00d2 0100     		.2byte	0x1
 2159 00d4 50       		.byte	0x50
 2160 00d5 4A000000 		.4byte	.LVL30
 2161 00d9 8C000000 		.4byte	.LFE6
 2162 00dd 0400     		.2byte	0x4
 2163 00df F3       		.byte	0xf3
 2164 00e0 01       		.uleb128 0x1
 2165 00e1 50       		.byte	0x50
 2166 00e2 9F       		.byte	0x9f
 2167 00e3 00000000 		.4byte	0
 2168 00e7 00000000 		.4byte	0
 2169              	.LLST6:
 2170 00eb 04000000 		.4byte	.LVL22
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 74


 2171 00ef 76000000 		.4byte	.LVL33
 2172 00f3 0100     		.2byte	0x1
 2173 00f5 54       		.byte	0x54
 2174 00f6 00000000 		.4byte	0
 2175 00fa 00000000 		.4byte	0
 2176              	.LLST7:
 2177 00fe 1A000000 		.4byte	.LVL24
 2178 0102 76000000 		.4byte	.LVL33
 2179 0106 0100     		.2byte	0x1
 2180 0108 57       		.byte	0x57
 2181 0109 00000000 		.4byte	0
 2182 010d 00000000 		.4byte	0
 2183              	.LLST8:
 2184 0111 1C000000 		.4byte	.LVL25
 2185 0115 30000000 		.4byte	.LVL28
 2186 0119 0100     		.2byte	0x1
 2187 011b 51       		.byte	0x51
 2188 011c 30000000 		.4byte	.LVL28
 2189 0120 42000000 		.4byte	.LVL29
 2190 0124 0A00     		.2byte	0xa
 2191 0126 72       		.byte	0x72
 2192 0127 00       		.sleb128 0
 2193 0128 31       		.byte	0x31
 2194 0129 24       		.byte	0x24
 2195 012a 03       		.byte	0x3
 2196 012b 08000000 		.4byte	.LANCHOR0+8
 2197 012f 22       		.byte	0x22
 2198 0130 42000000 		.4byte	.LVL29
 2199 0134 4C000000 		.4byte	.LVL31
 2200 0138 0100     		.2byte	0x1
 2201 013a 51       		.byte	0x51
 2202 013b 4C000000 		.4byte	.LVL31
 2203 013f 6C000000 		.4byte	.LVL32
 2204 0143 0A00     		.2byte	0xa
 2205 0145 72       		.byte	0x72
 2206 0146 00       		.sleb128 0
 2207 0147 31       		.byte	0x31
 2208 0148 24       		.byte	0x24
 2209 0149 03       		.byte	0x3
 2210 014a 08000000 		.4byte	.LANCHOR0+8
 2211 014e 22       		.byte	0x22
 2212 014f 00000000 		.4byte	0
 2213 0153 00000000 		.4byte	0
 2214              	.LLST9:
 2215 0157 1E000000 		.4byte	.LVL26
 2216 015b 76000000 		.4byte	.LVL33
 2217 015f 0100     		.2byte	0x1
 2218 0161 56       		.byte	0x56
 2219 0162 00000000 		.4byte	0
 2220 0166 00000000 		.4byte	0
 2221              	.LLST10:
 2222 016a 00000000 		.4byte	.LVL34
 2223 016e 08000000 		.4byte	.LVL36
 2224 0172 0100     		.2byte	0x1
 2225 0174 50       		.byte	0x50
 2226 0175 08000000 		.4byte	.LVL36
 2227 0179 2C000000 		.4byte	.LFE7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 75


 2228 017d 0400     		.2byte	0x4
 2229 017f F3       		.byte	0xf3
 2230 0180 01       		.uleb128 0x1
 2231 0181 50       		.byte	0x50
 2232 0182 9F       		.byte	0x9f
 2233 0183 00000000 		.4byte	0
 2234 0187 00000000 		.4byte	0
 2235              	.LLST11:
 2236 018b 06000000 		.4byte	.LVL35
 2237 018f 1C000000 		.4byte	.LVL41
 2238 0193 0100     		.2byte	0x1
 2239 0195 54       		.byte	0x54
 2240 0196 1E000000 		.4byte	.LVL42
 2241 019a 26000000 		.4byte	.LVL43
 2242 019e 0100     		.2byte	0x1
 2243 01a0 54       		.byte	0x54
 2244 01a1 00000000 		.4byte	0
 2245 01a5 00000000 		.4byte	0
 2246              	.LLST12:
 2247 01a9 0E000000 		.4byte	.LVL37
 2248 01ad 26000000 		.4byte	.LVL43
 2249 01b1 0100     		.2byte	0x1
 2250 01b3 55       		.byte	0x55
 2251 01b4 00000000 		.4byte	0
 2252 01b8 00000000 		.4byte	0
 2253              	.LLST13:
 2254 01bc 0E000000 		.4byte	.LVL37
 2255 01c0 10000000 		.4byte	.LVL38
 2256 01c4 0200     		.2byte	0x2
 2257 01c6 30       		.byte	0x30
 2258 01c7 9F       		.byte	0x9f
 2259 01c8 10000000 		.4byte	.LVL38
 2260 01cc 26000000 		.4byte	.LVL43
 2261 01d0 0100     		.2byte	0x1
 2262 01d2 56       		.byte	0x56
 2263 01d3 00000000 		.4byte	0
 2264 01d7 00000000 		.4byte	0
 2265              	.LLST14:
 2266 01db 02000000 		.4byte	.LVL44
 2267 01df 08000000 		.4byte	.LVL45
 2268 01e3 0200     		.2byte	0x2
 2269 01e5 30       		.byte	0x30
 2270 01e6 9F       		.byte	0x9f
 2271 01e7 08000000 		.4byte	.LVL45
 2272 01eb 14000000 		.4byte	.LVL48
 2273 01ef 0100     		.2byte	0x1
 2274 01f1 54       		.byte	0x54
 2275 01f2 16000000 		.4byte	.LVL49
 2276 01f6 1E000000 		.4byte	.LFE8
 2277 01fa 0100     		.2byte	0x1
 2278 01fc 54       		.byte	0x54
 2279 01fd 00000000 		.4byte	0
 2280 0201 00000000 		.4byte	0
 2281              	.LLST15:
 2282 0205 02000000 		.4byte	.LVL44
 2283 0209 08000000 		.4byte	.LVL45
 2284 020d 0200     		.2byte	0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 76


 2285 020f 30       		.byte	0x30
 2286 0210 9F       		.byte	0x9f
 2287 0211 08000000 		.4byte	.LVL45
 2288 0215 1E000000 		.4byte	.LFE8
 2289 0219 0100     		.2byte	0x1
 2290 021b 55       		.byte	0x55
 2291 021c 00000000 		.4byte	0
 2292 0220 00000000 		.4byte	0
 2293              	.LLST16:
 2294 0224 00000000 		.4byte	.LVL50
 2295 0228 08000000 		.4byte	.LVL52
 2296 022c 0100     		.2byte	0x1
 2297 022e 50       		.byte	0x50
 2298 022f 08000000 		.4byte	.LVL52
 2299 0233 38000000 		.4byte	.LFE9
 2300 0237 0400     		.2byte	0x4
 2301 0239 F3       		.byte	0xf3
 2302 023a 01       		.uleb128 0x1
 2303 023b 50       		.byte	0x50
 2304 023c 9F       		.byte	0x9f
 2305 023d 00000000 		.4byte	0
 2306 0241 00000000 		.4byte	0
 2307              	.LLST17:
 2308 0245 1A000000 		.4byte	.LVL55
 2309 0249 20000000 		.4byte	.LVL56
 2310 024d 0100     		.2byte	0x1
 2311 024f 52       		.byte	0x52
 2312 0250 20000000 		.4byte	.LVL56
 2313 0254 24000000 		.4byte	.LVL57
 2314 0258 0700     		.2byte	0x7
 2315 025a 31       		.byte	0x31
 2316 025b 73       		.byte	0x73
 2317 025c 00       		.sleb128 0
 2318 025d 37       		.byte	0x37
 2319 025e 1A       		.byte	0x1a
 2320 025f 24       		.byte	0x24
 2321 0260 9F       		.byte	0x9f
 2322 0261 24000000 		.4byte	.LVL57
 2323 0265 26000000 		.4byte	.LVL58
 2324 0269 0700     		.2byte	0x7
 2325 026b 31       		.byte	0x31
 2326 026c 73       		.byte	0x73
 2327 026d 7F       		.sleb128 -1
 2328 026e 37       		.byte	0x37
 2329 026f 1A       		.byte	0x1a
 2330 0270 24       		.byte	0x24
 2331 0271 9F       		.byte	0x9f
 2332 0272 00000000 		.4byte	0
 2333 0276 00000000 		.4byte	0
 2334              	.LLST18:
 2335 027a 06000000 		.4byte	.LVL51
 2336 027e 24000000 		.4byte	.LVL57
 2337 0282 0100     		.2byte	0x1
 2338 0284 53       		.byte	0x53
 2339 0285 26000000 		.4byte	.LVL58
 2340 0289 38000000 		.4byte	.LFE9
 2341 028d 0100     		.2byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 77


 2342 028f 53       		.byte	0x53
 2343 0290 00000000 		.4byte	0
 2344 0294 00000000 		.4byte	0
 2345              	.LLST19:
 2346 0298 0E000000 		.4byte	.LVL53
 2347 029c 2C000000 		.4byte	.LVL59
 2348 02a0 0100     		.2byte	0x1
 2349 02a2 55       		.byte	0x55
 2350 02a3 00000000 		.4byte	0
 2351 02a7 00000000 		.4byte	0
 2352              	.LLST20:
 2353 02ab 00000000 		.4byte	.LVL60
 2354 02af 08000000 		.4byte	.LVL62
 2355 02b3 0100     		.2byte	0x1
 2356 02b5 50       		.byte	0x50
 2357 02b6 08000000 		.4byte	.LVL62
 2358 02ba 38000000 		.4byte	.LFE10
 2359 02be 0400     		.2byte	0x4
 2360 02c0 F3       		.byte	0xf3
 2361 02c1 01       		.uleb128 0x1
 2362 02c2 50       		.byte	0x50
 2363 02c3 9F       		.byte	0x9f
 2364 02c4 00000000 		.4byte	0
 2365 02c8 00000000 		.4byte	0
 2366              	.LLST21:
 2367 02cc 1A000000 		.4byte	.LVL65
 2368 02d0 22000000 		.4byte	.LVL66
 2369 02d4 0100     		.2byte	0x1
 2370 02d6 52       		.byte	0x52
 2371 02d7 22000000 		.4byte	.LVL66
 2372 02db 26000000 		.4byte	.LVL67
 2373 02df 0700     		.2byte	0x7
 2374 02e1 31       		.byte	0x31
 2375 02e2 73       		.byte	0x73
 2376 02e3 00       		.sleb128 0
 2377 02e4 37       		.byte	0x37
 2378 02e5 1A       		.byte	0x1a
 2379 02e6 24       		.byte	0x24
 2380 02e7 9F       		.byte	0x9f
 2381 02e8 26000000 		.4byte	.LVL67
 2382 02ec 28000000 		.4byte	.LVL68
 2383 02f0 0700     		.2byte	0x7
 2384 02f2 31       		.byte	0x31
 2385 02f3 73       		.byte	0x73
 2386 02f4 7F       		.sleb128 -1
 2387 02f5 37       		.byte	0x37
 2388 02f6 1A       		.byte	0x1a
 2389 02f7 24       		.byte	0x24
 2390 02f8 9F       		.byte	0x9f
 2391 02f9 00000000 		.4byte	0
 2392 02fd 00000000 		.4byte	0
 2393              	.LLST22:
 2394 0301 06000000 		.4byte	.LVL61
 2395 0305 26000000 		.4byte	.LVL67
 2396 0309 0100     		.2byte	0x1
 2397 030b 53       		.byte	0x53
 2398 030c 28000000 		.4byte	.LVL68
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 78


 2399 0310 38000000 		.4byte	.LFE10
 2400 0314 0100     		.2byte	0x1
 2401 0316 53       		.byte	0x53
 2402 0317 00000000 		.4byte	0
 2403 031b 00000000 		.4byte	0
 2404              	.LLST23:
 2405 031f 0E000000 		.4byte	.LVL63
 2406 0323 2E000000 		.4byte	.LVL69
 2407 0327 0100     		.2byte	0x1
 2408 0329 55       		.byte	0x55
 2409 032a 00000000 		.4byte	0
 2410 032e 00000000 		.4byte	0
 2411              	.LLST24:
 2412 0332 00000000 		.4byte	.LVL70
 2413 0336 02000000 		.4byte	.LVL71
 2414 033a 0100     		.2byte	0x1
 2415 033c 50       		.byte	0x50
 2416 033d 02000000 		.4byte	.LVL71
 2417 0341 0C000000 		.4byte	.LFE11
 2418 0345 0400     		.2byte	0x4
 2419 0347 F3       		.byte	0xf3
 2420 0348 01       		.uleb128 0x1
 2421 0349 50       		.byte	0x50
 2422 034a 9F       		.byte	0x9f
 2423 034b 00000000 		.4byte	0
 2424 034f 00000000 		.4byte	0
 2425              	.LLST25:
 2426 0353 02000000 		.4byte	.LVL71
 2427 0357 06000000 		.4byte	.LVL72
 2428 035b 0100     		.2byte	0x1
 2429 035d 50       		.byte	0x50
 2430 035e 06000000 		.4byte	.LVL72
 2431 0362 0A000000 		.4byte	.LVL73
 2432 0366 0500     		.2byte	0x5
 2433 0368 70       		.byte	0x70
 2434 0369 00       		.sleb128 0
 2435 036a 32       		.byte	0x32
 2436 036b 25       		.byte	0x25
 2437 036c 9F       		.byte	0x9f
 2438 036d 00000000 		.4byte	0
 2439 0371 00000000 		.4byte	0
 2440              	.LLST26:
 2441 0375 00000000 		.4byte	.LVL74
 2442 0379 1C000000 		.4byte	.LVL77
 2443 037d 0100     		.2byte	0x1
 2444 037f 50       		.byte	0x50
 2445 0380 1C000000 		.4byte	.LVL77
 2446 0384 C0000000 		.4byte	.LFE4
 2447 0388 0400     		.2byte	0x4
 2448 038a F3       		.byte	0xf3
 2449 038b 01       		.uleb128 0x1
 2450 038c 50       		.byte	0x50
 2451 038d 9F       		.byte	0x9f
 2452 038e 00000000 		.4byte	0
 2453 0392 00000000 		.4byte	0
 2454              	.LLST27:
 2455 0396 6A000000 		.4byte	.LVL86
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 79


 2456 039a 72000000 		.4byte	.LVL87
 2457 039e 0500     		.2byte	0x5
 2458 03a0 72       		.byte	0x72
 2459 03a1 00       		.sleb128 0
 2460 03a2 38       		.byte	0x38
 2461 03a3 24       		.byte	0x24
 2462 03a4 9F       		.byte	0x9f
 2463 03a5 72000000 		.4byte	.LVL87
 2464 03a9 74000000 		.4byte	.LVL88
 2465 03ad 0100     		.2byte	0x1
 2466 03af 53       		.byte	0x53
 2467 03b0 74000000 		.4byte	.LVL88
 2468 03b4 88000000 		.4byte	.LVL90
 2469 03b8 0100     		.2byte	0x1
 2470 03ba 50       		.byte	0x50
 2471 03bb 00000000 		.4byte	0
 2472 03bf 00000000 		.4byte	0
 2473              	.LLST28:
 2474 03c3 32000000 		.4byte	.LVL79
 2475 03c7 36000000 		.4byte	.LVL80
 2476 03cb 0100     		.2byte	0x1
 2477 03cd 55       		.byte	0x55
 2478 03ce 3A000000 		.4byte	.LVL81
 2479 03d2 A0000000 		.4byte	.LVL92
 2480 03d6 0100     		.2byte	0x1
 2481 03d8 55       		.byte	0x55
 2482 03d9 00000000 		.4byte	0
 2483 03dd 00000000 		.4byte	0
 2484              	.LLST29:
 2485 03e1 20000000 		.4byte	.LVL78
 2486 03e5 4C000000 		.4byte	.LVL83
 2487 03e9 0100     		.2byte	0x1
 2488 03eb 50       		.byte	0x50
 2489 03ec 4C000000 		.4byte	.LVL83
 2490 03f0 4F000000 		.4byte	.LVL84-1
 2491 03f4 0A00     		.2byte	0xa
 2492 03f6 74       		.byte	0x74
 2493 03f7 00       		.sleb128 0
 2494 03f8 31       		.byte	0x31
 2495 03f9 24       		.byte	0x24
 2496 03fa 03       		.byte	0x3
 2497 03fb 00000000 		.4byte	CapSense_1_rawFilterData1
 2498 03ff 22       		.byte	0x22
 2499 0400 58000000 		.4byte	.LVL85
 2500 0404 74000000 		.4byte	.LVL88
 2501 0408 0100     		.2byte	0x1
 2502 040a 50       		.byte	0x50
 2503 040b 74000000 		.4byte	.LVL88
 2504 040f 88000000 		.4byte	.LVL90
 2505 0413 0A00     		.2byte	0xa
 2506 0415 74       		.byte	0x74
 2507 0416 00       		.sleb128 0
 2508 0417 31       		.byte	0x31
 2509 0418 24       		.byte	0x24
 2510 0419 03       		.byte	0x3
 2511 041a 00000000 		.4byte	CapSense_1_rawFilterData1
 2512 041e 22       		.byte	0x22
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 80


 2513 041f 00000000 		.4byte	0
 2514 0423 00000000 		.4byte	0
 2515              	.LLST30:
 2516 0427 08000000 		.4byte	.LVL75
 2517 042b 1F000000 		.4byte	.LVL78-1
 2518 042f 0100     		.2byte	0x1
 2519 0431 52       		.byte	0x52
 2520 0432 32000000 		.4byte	.LVL79
 2521 0436 36000000 		.4byte	.LVL80
 2522 043a 0200     		.2byte	0x2
 2523 043c 31       		.byte	0x31
 2524 043d 9F       		.byte	0x9f
 2525 043e 3A000000 		.4byte	.LVL81
 2526 0442 3C000000 		.4byte	.LVL82
 2527 0446 0200     		.2byte	0x2
 2528 0448 30       		.byte	0x30
 2529 0449 9F       		.byte	0x9f
 2530 044a 3C000000 		.4byte	.LVL82
 2531 044e A0000000 		.4byte	.LVL92
 2532 0452 0100     		.2byte	0x1
 2533 0454 57       		.byte	0x57
 2534 0455 00000000 		.4byte	0
 2535 0459 00000000 		.4byte	0
 2536              	.LLST31:
 2537 045d 10000000 		.4byte	.LVL76
 2538 0461 A0000000 		.4byte	.LVL92
 2539 0465 0100     		.2byte	0x1
 2540 0467 56       		.byte	0x56
 2541 0468 00000000 		.4byte	0
 2542 046c 00000000 		.4byte	0
 2543              	.LLST32:
 2544 0470 02000000 		.4byte	.LVL93
 2545 0474 06000000 		.4byte	.LVL94
 2546 0478 0200     		.2byte	0x2
 2547 047a 30       		.byte	0x30
 2548 047b 9F       		.byte	0x9f
 2549 047c 06000000 		.4byte	.LVL94
 2550 0480 20000000 		.4byte	.LVL97
 2551 0484 0100     		.2byte	0x1
 2552 0486 54       		.byte	0x54
 2553 0487 22000000 		.4byte	.LVL98
 2554 048b 28000000 		.4byte	.LVL99
 2555 048f 0100     		.2byte	0x1
 2556 0491 54       		.byte	0x54
 2557 0492 00000000 		.4byte	0
 2558 0496 00000000 		.4byte	0
 2559              	.LLST33:
 2560 049a 10000000 		.4byte	.LVL95
 2561 049e 1D000000 		.4byte	.LVL96-1
 2562 04a2 0100     		.2byte	0x1
 2563 04a4 53       		.byte	0x53
 2564 04a5 1D000000 		.4byte	.LVL96-1
 2565 04a9 20000000 		.4byte	.LVL97
 2566 04ad 0700     		.2byte	0x7
 2567 04af 31       		.byte	0x31
 2568 04b0 74       		.byte	0x74
 2569 04b1 00       		.sleb128 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 81


 2570 04b2 37       		.byte	0x37
 2571 04b3 1A       		.byte	0x1a
 2572 04b4 24       		.byte	0x24
 2573 04b5 9F       		.byte	0x9f
 2574 04b6 20000000 		.4byte	.LVL97
 2575 04ba 22000000 		.4byte	.LVL98
 2576 04be 0700     		.2byte	0x7
 2577 04c0 31       		.byte	0x31
 2578 04c1 74       		.byte	0x74
 2579 04c2 7F       		.sleb128 -1
 2580 04c3 37       		.byte	0x37
 2581 04c4 1A       		.byte	0x1a
 2582 04c5 24       		.byte	0x24
 2583 04c6 9F       		.byte	0x9f
 2584 04c7 00000000 		.4byte	0
 2585 04cb 00000000 		.4byte	0
 2586              		.section	.debug_aranges,"",%progbits
 2587 0000 74000000 		.4byte	0x74
 2588 0004 0200     		.2byte	0x2
 2589 0006 00000000 		.4byte	.Ldebug_info0
 2590 000a 04       		.byte	0x4
 2591 000b 00       		.byte	0
 2592 000c 0000     		.2byte	0
 2593 000e 0000     		.2byte	0
 2594 0010 00000000 		.4byte	.LFB0
 2595 0014 50000000 		.4byte	.LFE0-.LFB0
 2596 0018 00000000 		.4byte	.LFB1
 2597 001c 18000000 		.4byte	.LFE1-.LFB1
 2598 0020 00000000 		.4byte	.LFB2
 2599 0024 16000000 		.4byte	.LFE2-.LFB2
 2600 0028 00000000 		.4byte	.LFB3
 2601 002c 44000000 		.4byte	.LFE3-.LFB3
 2602 0030 00000000 		.4byte	.LFB6
 2603 0034 8C000000 		.4byte	.LFE6-.LFB6
 2604 0038 00000000 		.4byte	.LFB7
 2605 003c 2C000000 		.4byte	.LFE7-.LFB7
 2606 0040 00000000 		.4byte	.LFB8
 2607 0044 1E000000 		.4byte	.LFE8-.LFB8
 2608 0048 00000000 		.4byte	.LFB9
 2609 004c 38000000 		.4byte	.LFE9-.LFB9
 2610 0050 00000000 		.4byte	.LFB10
 2611 0054 38000000 		.4byte	.LFE10-.LFB10
 2612 0058 00000000 		.4byte	.LFB11
 2613 005c 0C000000 		.4byte	.LFE11-.LFB11
 2614 0060 00000000 		.4byte	.LFB4
 2615 0064 C0000000 		.4byte	.LFE4-.LFB4
 2616 0068 00000000 		.4byte	.LFB5
 2617 006c 2C000000 		.4byte	.LFE5-.LFB5
 2618 0070 00000000 		.4byte	0
 2619 0074 00000000 		.4byte	0
 2620              		.section	.debug_ranges,"",%progbits
 2621              	.Ldebug_ranges0:
 2622 0000 00000000 		.4byte	.LFB0
 2623 0004 50000000 		.4byte	.LFE0
 2624 0008 00000000 		.4byte	.LFB1
 2625 000c 18000000 		.4byte	.LFE1
 2626 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 82


 2627 0014 16000000 		.4byte	.LFE2
 2628 0018 00000000 		.4byte	.LFB3
 2629 001c 44000000 		.4byte	.LFE3
 2630 0020 00000000 		.4byte	.LFB6
 2631 0024 8C000000 		.4byte	.LFE6
 2632 0028 00000000 		.4byte	.LFB7
 2633 002c 2C000000 		.4byte	.LFE7
 2634 0030 00000000 		.4byte	.LFB8
 2635 0034 1E000000 		.4byte	.LFE8
 2636 0038 00000000 		.4byte	.LFB9
 2637 003c 38000000 		.4byte	.LFE9
 2638 0040 00000000 		.4byte	.LFB10
 2639 0044 38000000 		.4byte	.LFE10
 2640 0048 00000000 		.4byte	.LFB11
 2641 004c 0C000000 		.4byte	.LFE11
 2642 0050 00000000 		.4byte	.LFB4
 2643 0054 C0000000 		.4byte	.LFE4
 2644 0058 00000000 		.4byte	.LFB5
 2645 005c 2C000000 		.4byte	.LFE5
 2646 0060 00000000 		.4byte	0
 2647 0064 00000000 		.4byte	0
 2648              		.section	.debug_line,"",%progbits
 2649              	.Ldebug_line0:
 2650 0000 33020000 		.section	.debug_str,"MS",%progbits,1
 2650      02007100 
 2650      00000201 
 2650      FB0E0D00 
 2650      01010101 
 2651              	.LASF10:
 2652 0000 75696E74 		.ascii	"uint16\000"
 2652      313600
 2653              	.LASF41:
 2654 0007 66696C74 		.ascii	"filteredRawData\000"
 2654      65726564 
 2654      52617744 
 2654      61746100 
 2655              	.LASF26:
 2656 0017 66696E67 		.ascii	"fingerThreshold\000"
 2656      65725468 
 2656      72657368 
 2656      6F6C6400 
 2657              	.LASF20:
 2658 0027 43617053 		.ascii	"CapSense_1_InitializeAllBaselines\000"
 2658      656E7365 
 2658      5F315F49 
 2658      6E697469 
 2658      616C697A 
 2659              	.LASF17:
 2660 0049 43617053 		.ascii	"CapSense_1_BaseInit\000"
 2660      656E7365 
 2660      5F315F42 
 2660      61736549 
 2660      6E697400 
 2661              	.LASF7:
 2662 005d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2662      206C6F6E 
 2662      6720756E 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 83


 2662      7369676E 
 2662      65642069 
 2663              	.LASF35:
 2664 0074 43617053 		.ascii	"CapSense_1_EnableWidget\000"
 2664      656E7365 
 2664      5F315F45 
 2664      6E61626C 
 2664      65576964 
 2665              	.LASF30:
 2666 008c 43617053 		.ascii	"CapSense_1_CheckIsWidgetActive\000"
 2666      656E7365 
 2666      5F315F43 
 2666      6865636B 
 2666      49735769 
 2667              	.LASF54:
 2668 00ab 43617053 		.ascii	"CapSense_1_noiseThreshold\000"
 2668      656E7365 
 2668      5F315F6E 
 2668      6F697365 
 2668      54687265 
 2669              	.LASF56:
 2670 00c5 43617053 		.ascii	"CapSense_1_debounce\000"
 2670      656E7365 
 2670      5F315F64 
 2670      65626F75 
 2670      6E636500 
 2671              	.LASF44:
 2672 00d9 43617053 		.ascii	"CapSense_1_sensorRaw\000"
 2672      656E7365 
 2672      5F315F73 
 2672      656E736F 
 2672      72526177 
 2673              	.LASF64:
 2674 00ee 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_1_CSHL.c\000"
 2674      72617465 
 2674      645F536F 
 2674      75726365 
 2674      5C50536F 
 2675              	.LASF6:
 2676 0117 6C6F6E67 		.ascii	"long long int\000"
 2676      206C6F6E 
 2676      6720696E 
 2676      7400
 2677              	.LASF0:
 2678 0125 7369676E 		.ascii	"signed char\000"
 2678      65642063 
 2678      68617200 
 2679              	.LASF31:
 2680 0131 72617749 		.ascii	"rawIndex\000"
 2680      6E646578 
 2680      00
 2681              	.LASF32:
 2682 013a 6E756D62 		.ascii	"numberOfSensors\000"
 2682      65724F66 
 2682      53656E73 
 2682      6F727300 
 2683              	.LASF33:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 84


 2684 014a 73746174 		.ascii	"state\000"
 2684      6500
 2685              	.LASF4:
 2686 0150 6C6F6E67 		.ascii	"long int\000"
 2686      20696E74 
 2686      00
 2687              	.LASF36:
 2688 0159 43617053 		.ascii	"CapSense_1_DisableWidget\000"
 2688      656E7365 
 2688      5F315F44 
 2688      69736162 
 2688      6C655769 
 2689              	.LASF9:
 2690 0172 75696E74 		.ascii	"uint8\000"
 2690      3800
 2691              	.LASF13:
 2692 0178 646F7562 		.ascii	"double\000"
 2692      6C6500
 2693              	.LASF11:
 2694 017f 75696E74 		.ascii	"uint32\000"
 2694      333200
 2695              	.LASF27:
 2696 0186 68797374 		.ascii	"hysteresis\000"
 2696      65726573 
 2696      697300
 2697              	.LASF60:
 2698 0191 43617053 		.ascii	"CapSense_1_ScanSensor\000"
 2698      656E7365 
 2698      5F315F53 
 2698      63616E53 
 2698      656E736F 
 2699              	.LASF55:
 2700 01a7 43617053 		.ascii	"CapSense_1_hysteresis\000"
 2700      656E7365 
 2700      5F315F68 
 2700      79737465 
 2700      72657369 
 2701              	.LASF58:
 2702 01bd 43617053 		.ascii	"CapSense_1_rawDataIndex\000"
 2702      656E7365 
 2702      5F315F72 
 2702      61774461 
 2702      7461496E 
 2703              	.LASF53:
 2704 01d5 43617053 		.ascii	"CapSense_1_fingerThreshold\000"
 2704      656E7365 
 2704      5F315F66 
 2704      696E6765 
 2704      72546872 
 2705              	.LASF8:
 2706 01f0 756E7369 		.ascii	"unsigned int\000"
 2706      676E6564 
 2706      20696E74 
 2706      00
 2707              	.LASF62:
 2708 01fd 43617053 		.ascii	"CapSense_1_ScanEnabledWidgets\000"
 2708      656E7365 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 85


 2708      5F315F53 
 2708      63616E45 
 2708      6E61626C 
 2709              	.LASF5:
 2710 021b 6C6F6E67 		.ascii	"long unsigned int\000"
 2710      20756E73 
 2710      69676E65 
 2710      6420696E 
 2710      7400
 2711              	.LASF3:
 2712 022d 73686F72 		.ascii	"short unsigned int\000"
 2712      7420756E 
 2712      7369676E 
 2712      65642069 
 2712      6E7400
 2713              	.LASF19:
 2714 0240 73656E73 		.ascii	"sensor\000"
 2714      6F7200
 2715              	.LASF59:
 2716 0247 43617053 		.ascii	"CapSense_1_numberOfSensors\000"
 2716      656E7365 
 2716      5F315F6E 
 2716      756D6265 
 2716      724F6653 
 2717              	.LASF39:
 2718 0262 63616C63 		.ascii	"calc\000"
 2718      00
 2719              	.LASF46:
 2720 0267 43617053 		.ascii	"CapSense_1_sensorEnableMask\000"
 2720      656E7365 
 2720      5F315F73 
 2720      656E736F 
 2720      72456E61 
 2721              	.LASF28:
 2722 0283 6465626F 		.ascii	"debounce\000"
 2722      756E6365 
 2722      00
 2723              	.LASF23:
 2724 028c 656E4D61 		.ascii	"enMask\000"
 2724      736B00
 2725              	.LASF16:
 2726 0293 73697A65 		.ascii	"sizetype\000"
 2726      74797065 
 2726      00
 2727              	.LASF15:
 2728 029c 6C6F6E67 		.ascii	"long double\000"
 2728      20646F75 
 2728      626C6500 
 2729              	.LASF52:
 2730 02a8 43617053 		.ascii	"CapSense_1_lowBaselineResetCnt\000"
 2730      656E7365 
 2730      5F315F6C 
 2730      6F774261 
 2730      73656C69 
 2731              	.LASF47:
 2732 02c7 43617053 		.ascii	"CapSense_1_widgetNumber\000"
 2732      656E7365 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 86


 2732      5F315F77 
 2732      69646765 
 2732      744E756D 
 2733              	.LASF18:
 2734 02df 43617053 		.ascii	"CapSense_1_InitializeSensorBaseline\000"
 2734      656E7365 
 2734      5F315F49 
 2734      6E697469 
 2734      616C697A 
 2735              	.LASF43:
 2736 0303 43617053 		.ascii	"CapSense_1_UpdateEnabledBaselines\000"
 2736      656E7365 
 2736      5F315F55 
 2736      70646174 
 2736      65456E61 
 2737              	.LASF12:
 2738 0325 666C6F61 		.ascii	"float\000"
 2738      7400
 2739              	.LASF51:
 2740 032b 43617053 		.ascii	"CapSense_1_sensorOnMask\000"
 2740      656E7365 
 2740      5F315F73 
 2740      656E736F 
 2740      724F6E4D 
 2741              	.LASF45:
 2742 0343 43617053 		.ascii	"CapSense_1_rawFilterData1\000"
 2742      656E7365 
 2742      5F315F72 
 2742      61774669 
 2742      6C746572 
 2743              	.LASF29:
 2744 035d 43617053 		.ascii	"CapSense_1_CheckIsSensorActive\000"
 2744      656E7365 
 2744      5F315F43 
 2744      6865636B 
 2744      49735365 
 2745              	.LASF34:
 2746 037c 43617053 		.ascii	"CapSense_1_CheckIsAnyWidgetActive\000"
 2746      656E7365 
 2746      5F315F43 
 2746      6865636B 
 2746      4973416E 
 2747              	.LASF1:
 2748 039e 756E7369 		.ascii	"unsigned char\000"
 2748      676E6564 
 2748      20636861 
 2748      7200
 2749              	.LASF22:
 2750 03ac 43617053 		.ascii	"CapSense_1_InitializeEnabledBaselines\000"
 2750      656E7365 
 2750      5F315F49 
 2750      6E697469 
 2750      616C697A 
 2751              	.LASF42:
 2752 03d2 6E6F6973 		.ascii	"noiseThreshold\000"
 2752      65546872 
 2752      6573686F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 87


 2752      6C6400
 2753              	.LASF2:
 2754 03e1 73686F72 		.ascii	"short int\000"
 2754      7420696E 
 2754      7400
 2755              	.LASF21:
 2756 03eb 77696467 		.ascii	"widget\000"
 2756      657400
 2757              	.LASF24:
 2758 03f2 6F6E4D61 		.ascii	"onMask\000"
 2758      736B00
 2759              	.LASF38:
 2760 03f9 43617053 		.ascii	"CapSense_1_UpdateSensorBaseline\000"
 2760      656E7365 
 2760      5F315F55 
 2760      70646174 
 2760      6553656E 
 2761              	.LASF50:
 2762 0419 43617053 		.ascii	"CapSense_1_sensorSignal\000"
 2762      656E7365 
 2762      5F315F73 
 2762      656E736F 
 2762      72536967 
 2763              	.LASF57:
 2764 0431 43617053 		.ascii	"CapSense_1_debounceCounter\000"
 2764      656E7365 
 2764      5F315F64 
 2764      65626F75 
 2764      6E636543 
 2765              	.LASF63:
 2766 044c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2766      43313120 
 2766      352E342E 
 2766      31203230 
 2766      31363036 
 2767 047f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2767      20726576 
 2767      6973696F 
 2767      6E203233 
 2767      37373135 
 2768 04b2 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2768      66756E63 
 2768      74696F6E 
 2768      2D736563 
 2768      74696F6E 
 2769              	.LASF65:
 2770 04da 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Documents\\PSoC Creator\\wes"
 2770      73657273 
 2770      5C4A6566 
 2770      66536E79 
 2770      6465725C 
 2771 0508 746F6E5F 		.ascii	"ton_1\\weston_1.cydsn\000"
 2771      315C7765 
 2771      73746F6E 
 2771      5F312E63 
 2771      7964736E 
 2772              	.LASF14:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccvI7fSL.s 			page 88


 2773 051d 63686172 		.ascii	"char\000"
 2773      00
 2774              	.LASF61:
 2775 0522 43617053 		.ascii	"CapSense_1_IsBusy\000"
 2775      656E7365 
 2775      5F315F49 
 2775      73427573 
 2775      7900
 2776              	.LASF49:
 2777 0534 43617053 		.ascii	"CapSense_1_sensorBaselineLow\000"
 2777      656E7365 
 2777      5F315F73 
 2777      656E736F 
 2777      72426173 
 2778              	.LASF25:
 2779 0551 6465626F 		.ascii	"debounceIndex\000"
 2779      756E6365 
 2779      496E6465 
 2779      7800
 2780              	.LASF48:
 2781 055f 43617053 		.ascii	"CapSense_1_sensorBaseline\000"
 2781      656E7365 
 2781      5F315F73 
 2781      656E736F 
 2781      72426173 
 2782              	.LASF37:
 2783 0579 43617053 		.ascii	"CapSense_1_IIR4Filter\000"
 2783      656E7365 
 2783      5F315F49 
 2783      49523446 
 2783      696C7465 
 2784              	.LASF40:
 2785 058f 74656D70 		.ascii	"tempRaw\000"
 2785      52617700 
 2786              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
